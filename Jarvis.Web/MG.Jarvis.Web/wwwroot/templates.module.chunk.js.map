{"version":3,"sources":["D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/common/extranet-shared/services/templates/template-name-data.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/common/extranet-shared/services/templates/template-url-notification.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/allocations/allocations.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/allocations/allocations.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/allocations/allocations.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/contract-terms/contract-terms.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/contract-terms/contract-terms.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/contract-terms/contract-terms.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/hotel-info/facilities-services/facilities-services.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/hotel-info/facilities-services/facilities-services.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/hotel-info/facilities-services/facilities-services.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/hotel-info/hotel-details/hotel-details.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/hotel-info/hotel-details/hotel-details.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/hotel-info/hotel-details/hotel-details.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/amenities/amenities.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/amenities/amenities.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/amenities/amenities.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/meal-plan/meal-plan.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/meal-plan/meal-plan.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/meal-plan/meal-plan.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/policies/cancellation-payment/cancellation-payment.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/policies/cancellation-payment/cancellation-payment.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/policies/cancellation-payment/cancellation-payment.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/policies/child-extra-bed/child-extra-bed.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/policies/child-extra-bed/child-extra-bed.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/policies/child-extra-bed/child-extra-bed.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/rate-category/rate-category.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/rate-category/rate-category.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/rate-category/rate-category.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/room-type/room-type.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/room-type/room-type.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/room-type/room-type.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/redirect/redirect.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/redirect/redirect.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/redirect/redirect.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template-list/template-list.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template-list/template-list.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template-list/template-list.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template-list/template.animations.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template-nav-menu/template-nav-menu.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template-nav-menu/template-nav-menu.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template-nav-menu/template-nav-menu.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template/template.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template/template.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template/template.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/templates-routing.module.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/templates.module.ts"],"names":[],"mappings":"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","file":"templates.module.chunk.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class TemplateNameDataService {\n  private templateNameSource = new BehaviorSubject<string>('');\n  templateName = this.templateNameSource.asObservable();\n\n  constructor() { }\n\n  changeTemplateName(templateName: string) {\n  // console.log('At Data Servise Template name - ' + templateName );\n    this.templateNameSource.next(templateName);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/common/extranet-shared/services/templates/template-name-data.service.ts","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class TemplateUrlNotificationService {\n  private urlPathSource = new BehaviorSubject<string>('');\n  urlPath = this.urlPathSource.asObservable();\n  constructor() { }\n  changeURLRoute(urlpath: string) {\n      this.urlPathSource.next(urlpath);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/common/extranet-shared/services/templates/template-url-notification.service.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/allocations/allocations.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/allocations/allocations.component.css\n// module chunks = templates.module","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"formSections\\\">\\n      <h1 class=\\\"mainHeading mb-3\\\">Allocations</h1>\\n          <div class=\\\"row pb-3\\\">\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"lightBlueContainer pb-2 pl-4 pr-4\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-8\\\">\\n                    <mat-form-field>\\n                        <input matInput placeholder=\\\"Pooled Allotment\\\" disabled=\\\"true\\\"/>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                      <button title=\\\"Apply\\\" type=\\\"button\\\" class=\\\"pl-3 pr-3 btn addButton float-none\\\" disabled>Apply</button>\\n                      <button title=\\\"Clear\\\" type=\\\"button\\\" class=\\\"btn btn-link pl-3 pr-3\\\" disabled>Clear</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <table class=\\\"table genericTable mt-4\\\">\\n            <thead>\\n              <tr>\\n                <th class=\\\"requiredLabel\\\">Rate Category</th>\\n                <th class=\\\"requiredLabel\\\">Room Type</th>\\n                <th class=\\\"requiredLabel\\\">Dates</th>\\n                <th class=\\\"requiredLabel\\\">Days</th>\\n                <th class=\\\"requiredLabel\\\">Type</th>\\n                <th class=\\\"requiredLabel\\\">Allotment</th>\\n                <th>Bed Type &amp; Rates (IDR)</th>\\n              </tr>\\n            </thead>\\n          </table>\\n\\n          <div class=\\\"row mt-5\\\">\\n            <div class=\\\"col-md-12 controlButtons mb-4\\\">\\n              <button title=\\\"Save\\\" class=\\\"genericButton activeButton mat-primary mat-raised-button\\\" (click)=\\\"saveAllocation()\\\">Save</button>\\n              <button title=\\\"Cancel\\\" class=\\\"genericButton defaultButton mat-raised-button\\\" mat-raised-button (click)=\\\"backToList()\\\">Cancel</button>\\n              <button class=\\\"genericButton activeButton mat-primary mat-raised-button float-right\\\" title=\\\"Save &amp; Continue\\\" (click)=\\\"saveAndContinueAllocation()\\\">Save &amp; Continue</button>\\n            </div>\\n          </div>\\n\\n  </div>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/allocations/allocations.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/allocations/allocations.component.html\n// module chunks = templates.module","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { TemplateUrlNotificationService } from '../../../common/extranet-shared/services/templates/template-url-notification.service';\n\nconst read = CONSTANTS.operation.read;\nconst edit = CONSTANTS.operation.edit;\nconst create = CONSTANTS.operation.create;\n\n@Component({\n  selector: 'app-allocations',\n  templateUrl: './allocations.component.html',\n  styleUrls: ['./allocations.component.css']\n})\nexport class AllocationsComponent implements OnInit {\n\n  constructor(private router: Router,  private activatedRoute: ActivatedRoute,\n    private templateUrlNotificationService: TemplateUrlNotificationService\n  ) {\n      templateUrlNotificationService.changeURLRoute(activatedRoute.snapshot.url[0].path);\n  }\n\n  templateId = this.activatedRoute.parent.snapshot.params['id'];\n\n  ngOnInit() {\n    window.scrollTo(0, 0);\n  }\n\n  saveAllocation() {\n    this.router.navigate(['/templatemgmt/templates']);\n  }\n\n  backToList() {\n    this.router.navigate(['/templatemgmt/templates']);\n }\n\n  saveAndContinueAllocation() {\n    this.router.navigate(['/templatemgmt/template', this.templateId, edit, 'contractterms']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/allocations/allocations.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n.borderTop {\\r\\n    border-top: 1px solid #ebebeb;\\r\\n}\\r\\n\\r\\n.bookerHeader {\\r\\n    margin-top: -30px;\\r\\n}\\r\\n\\r\\n.transparent-circle {\\r\\n    border: 1px solid #29aae2;\\r\\n    height: 30px;\\r\\n    width: 30px;\\r\\n    border-radius: 1.25rem;\\r\\n    position: relative;\\r\\n    background: white;\\r\\n    display: inline-block;\\r\\n    vertical-align: middle;\\r\\n  }\\r\\n\\r\\n.transparent-circle span:before {\\r\\n    content: '+';\\r\\n    font-size: 1.9rem;\\r\\n    color: #29aae2;\\r\\n    position: absolute;\\r\\n    top: -7.8px;\\r\\n    right: 6px;\\r\\n  }\\r\\n\\r\\n  .transparent-circle .fa-times-thin:before {\\r\\n    content: '\\\\D7';\\r\\n    font-size: 1.9rem;\\r\\n    color: #29aae2;\\r\\n    position: absolute;\\r\\n    top: -2px;\\r\\n    right: 6px;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/contract-terms/contract-terms.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/contract-terms/contract-terms.component.css\n// module chunks = templates.module","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"mt-5\\\">\\n    <h1 class=\\\"mainHeading pb-2\\\">Contract Terms</h1>\\n    <form [formGroup]=\\\"contractTermsForm\\\">\\n      <h2 class=\\\"mb-4 mt-5\\\">Top-up Terms &amp; Conditions</h2>\\n      <div class=\\\"formSections pt-0 borderBottomNone\\\" formArrayName=\\\"contractTermsGroupArray\\\" *ngFor=\\\"let contractTermsGroup of contractTermsGroupArray.controls; let i=index\\\">\\n\\n        <!-- Order: 1 -->\\n        <div class=\\\"row\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('order').value) === 1\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <mat-checkbox formControlName=\\\"isSelected\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === true\\\">\\n                  {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n                </mat-checkbox>\\n              </div>\\n              <div class=\\\"col-md-12\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === false\\\">\\n                {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4 paddingLeft42px\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-9 pr-0\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <input matInput placeholder=\\\"Room Size\\\" type=\\\"text\\\" disabled/>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-3 pl-0\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <mat-select placeholder=\\\"IDR\\\" disabled=\\\"true\\\">\\n                        <ng-container>\\n                          <mat-option>Please Select</mat-option>\\n                        </ng-container>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!-- Order: 1 -->\\n\\n        <!-- Order: 2 -->\\n        <div class=\\\"row mt-2\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('order').value) === 2\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <mat-checkbox formControlName=\\\"isSelected\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === true\\\">\\n                  {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n                </mat-checkbox>\\n              </div>\\n              <div class=\\\"col-md-12\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === false\\\">\\n                {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4 paddingLeft42px\\\">\\n                <div class=row>\\n                  <div class=\\\"col-md-6\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <input matInput [matDatepicker]=\\\"startdate\\\" placeholder=\\\"Start Date\\\" disabled>\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"startdate\\\"></mat-datepicker-toggle>\\n                      <mat-datepicker #startdate></mat-datepicker>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <input matInput [matDatepicker]=\\\"enddate\\\" placeholder=\\\"End Date\\\" disabled>\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"enddate\\\"></mat-datepicker-toggle>\\n                      <mat-datepicker #enddate></mat-datepicker>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div> \\n        <!-- Order: 2 -->\\n\\n        <!-- Order: 3 -->\\n        <div class=\\\"row mt-2\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('order').value) === 3\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <mat-checkbox formControlName=\\\"isSelected\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === true\\\">\\n                  {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n                </mat-checkbox>\\n              </div>\\n              <div class=\\\"col-md-12\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === false\\\">\\n                {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n              </div>\\n            </div>\\n          </div>\\n        </div> \\n        <!-- Order: 3 -->\\n\\n        <!-- Order: 4 -->\\n        <div class=\\\"row mt-2\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('order').value) === 4\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <mat-checkbox formControlName=\\\"isSelected\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === true\\\">\\n                  {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n                </mat-checkbox>\\n              </div>\\n              <div class=\\\"col-md-12\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === false\\\">\\n                {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4 paddingLeft42px\\\">\\n                <div class=row>\\n                  <div class=\\\"col-md-6\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <mat-select placeholder=\\\"Every\\\" disabled>\\n                        <mat-option>Select</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div> \\n        <!-- Order: 4 -->\\n\\n        <!-- Order: 5 -->\\n        <div class=\\\"row mt-2\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('order').value) === 5\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <mat-checkbox formControlName=\\\"isSelected\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === true\\\">\\n                  {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n                </mat-checkbox>\\n              </div>\\n              <div class=\\\"col-md-12\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === false\\\">\\n                {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4 paddingLeft42px\\\">\\n                <div class=row>\\n                  <div class=\\\"col-md-6\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <mat-select placeholder=\\\"Balance <\\\" disabled>\\n                        <mat-option>Select</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div> \\n        <!-- Order: 5 -->\\n\\n        <!-- Order: 6 -->\\n        <div class=\\\"row mt-2\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('order').value) === 6\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <mat-checkbox formControlName=\\\"isSelected\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === true\\\">\\n                  {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n                </mat-checkbox>\\n              </div>\\n              <div class=\\\"col-md-12\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === false\\\">\\n                {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n              </div>\\n            </div>\\n          </div>\\n        </div> \\n        <!-- Order: 6 -->\\n\\n        <!-- Order: 7 -->\\n        <div class=\\\"row mt-2\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('order').value) === 7\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <mat-checkbox formControlName=\\\"isSelected\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === true\\\">\\n                  {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n                </mat-checkbox>\\n              </div>\\n              <div class=\\\"col-md-12\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === false\\\">\\n                {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4 paddingLeft42px\\\">\\n                <div class=row>\\n                  <div class=\\\"col-md-6\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <input matInput placeholder=\\\"Incentive\\\" disabled>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <mat-select placeholder=\\\"Select\\\" disabled>\\n                        <mat-option>Select</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div> \\n        <!-- Order: 7 -->\\n\\n        <!-- Order: 8 -->\\n        <div class=\\\"row mt-2\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('order').value) === 8\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <mat-checkbox formControlName=\\\"isSelected\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === true\\\">\\n                  {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n                </mat-checkbox>\\n              </div>\\n              <div class=\\\"col-md-12\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === false\\\">\\n                {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n              </div>\\n            </div>\\n          </div>\\n        </div> \\n        <!-- Order: 8 -->\\n\\n        <!-- Order: 9 -->\\n        <div class=\\\"row mt-2\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('order').value) === 9\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <mat-checkbox formControlName=\\\"isSelected\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === true\\\">\\n                  {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n                </mat-checkbox>\\n              </div>\\n              <div class=\\\"col-md-12\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === false\\\">\\n                {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4 paddingLeft42px\\\">\\n                <div class=row>\\n                  <div class=\\\"col-md-6\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <input matInput placeholder=\\\"Reduction\\\" disabled>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div> \\n        <!-- Order: 9 -->\\n\\n        <!-- Order: 10 -->\\n        <div class=\\\"row mt-2\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('order').value) === 10\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <mat-checkbox formControlName=\\\"isSelected\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === true\\\">\\n                  {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n                </mat-checkbox>\\n              </div>\\n              <div class=\\\"col-md-12\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === false\\\">\\n                {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n              </div>\\n            </div>\\n          </div>\\n        </div> \\n        <!-- Order: 10 -->\\n\\n        <!-- Order: 11 -->\\n        <div class=\\\"formSections borderBottomNone borderTop\\\"  [formGroupName]=\\\"i\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('order').value) === 11\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <mat-checkbox class=\\\"headerCheckbox\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === true\\\">\\n                  <h2 class=\\\"mb-0\\\">\\n                    {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n                  </h2>\\n                </mat-checkbox>\\n              </div>\\n              <div class=\\\"col-md-12\\\">\\n                <h2 class=\\\"mb-0\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === false\\\">\\n                  {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n                </h2>\\n              </div> \\n            </div>\\n\\n          <div class=\\\"paddingLeft30px\\\">\\n\\n            <h5 class=\\\"font-weight-bold mb-3 mt-4\\\">Incentive Target</h5>\\n            <div class=\\\"mt-2 row lightBlueContainer position-relative ml-0 mr-0 mb-5\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-3\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <mat-select placeholder=\\\"Period\\\" disabled>\\n                        <mat-option>Select</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6\\\">\\n                        <mat-form-field class=\\\"disableFields\\\">\\n                          <input matInput placeholder=\\\"Room Nights (Range)\\\" disabled=\\\"true\\\">\\n                        </mat-form-field>\\n                      </div>\\n                      <div class=\\\"col-md-6\\\">\\n                        <mat-form-field class=\\\"disableFields\\\">\\n                          <input matInput placeholder=\\\"To\\\" disabled=\\\"true\\\">\\n                        </mat-form-field>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6\\\">\\n                        <mat-form-field class=\\\"disableFields\\\">\\n                          <input matInput placeholder=\\\"Incentive Type\\\" disabled=\\\"true\\\">\\n                        </mat-form-field>\\n                      </div>\\n                      <div class=\\\"col-md-6\\\">\\n                        <mat-form-field class=\\\"disableFields\\\">\\n                          <input matInput placeholder=\\\"IDR\\\" disabled=\\\"true\\\">\\n                        </mat-form-field>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-1 alignItemCenter\\\">\\n                    <span class=\\\"btn transparent-circle mr-2 disableFields\\\" title=\\\"Delete\\\" disabled><span></span></span>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <h5 class=\\\"font-weight-bold mb-3\\\">Hotel</h5>\\n            <div class=\\\"mt-2 row lightBlueContainer position-relative ml-0 mr-0\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <input matInput placeholder=\\\"Scheme\\\" disabled=\\\"true\\\">\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <mat-select placeholder=\\\"Incentive Period\\\" disabled>\\n                        <mat-option>Select</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <div class=row>\\n                      <div class=\\\"col-md-6\\\">\\n                        <mat-form-field class=\\\"disableFields\\\">\\n                          <input matInput [matDatepicker]=\\\"IncentiveValidityFrom\\\" placeholder=\\\"Incentive Validity From\\\" disabled>\\n                          <mat-datepicker-toggle matSuffix [for]=\\\"IncentiveValidityFrom\\\"></mat-datepicker-toggle>\\n                          <mat-datepicker #IncentiveValidityFrom></mat-datepicker>\\n                        </mat-form-field>\\n                      </div>\\n                      <div class=\\\"col-md-6\\\">\\n                        <mat-form-field class=\\\"disableFields\\\">\\n                          <input matInput [matDatepicker]=\\\"IncentiveValidityFromTo\\\" placeholder=\\\"Incentive Validity To\\\" disabled>\\n                          <mat-datepicker-toggle matSuffix [for]=\\\"IncentiveValidityFromTo\\\"></mat-datepicker-toggle>\\n                          <mat-datepicker #IncentiveValidityFromTo></mat-datepicker>\\n                        </mat-form-field>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <p>Incentive is accumulative and will be claimed</p>\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <mat-select placeholder=\\\"Select Basis\\\" disabled>\\n                        <mat-option>Select</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p>Balance of unclaimed rooms will be carried forward to the following</p>\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <mat-select placeholder=\\\"Select Basis\\\" disabled>\\n                        <mat-option>Select</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!-- Order: 11 -->\\n\\n        <!-- Order: 12 -->\\n        <div class=\\\"row bookerHeader\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('order').value) === 12\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <mat-checkbox class=\\\"headerCheckbox\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === true\\\">\\n              <h5 class=\\\"font-weight-bold mb-0\\\">\\n                {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n              </h5>\\n            </mat-checkbox>\\n          </div> \\n          <div class=\\\"col-md-12\\\">\\n            <h5 class=\\\"font-weight-bold mb-0\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === false\\\">\\n              {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n            </h5>\\n          </div>  \\n          <div class=\\\"paddingLeft42px col-md-12\\\">\\n            <div class=\\\"mt-2 row lightBlueContainer position-relative ml-0 mr-0\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <input matInput placeholder=\\\"Scheme IDR\\\" disabled=\\\"true\\\">\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <div class=row>\\n                      <div class=\\\"col-md-6\\\">\\n                        <mat-form-field class=\\\"disableFields\\\">\\n                          <input matInput [matDatepicker]=\\\"from\\\" placeholder=\\\"Incentive Validity From\\\" disabled>\\n                          <mat-datepicker-toggle matSuffix [for]=\\\"from\\\"></mat-datepicker-toggle>\\n                          <mat-datepicker #from></mat-datepicker>\\n                        </mat-form-field>\\n                      </div>\\n                      <div class=\\\"col-md-6\\\">\\n                        <mat-form-field class=\\\"disableFields\\\">\\n                          <input matInput [matDatepicker]=\\\"to\\\" placeholder=\\\"Incentive Validity To\\\" disabled>\\n                          <mat-datepicker-toggle matSuffix [for]=\\\"to\\\"></mat-datepicker-toggle>\\n                          <mat-datepicker #to></mat-datepicker>\\n                        </mat-form-field>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-2\\\">\\n                    <mat-checkbox class=\\\"disableFields\\\" disabled>Deduct Net Rates</mat-checkbox>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <mat-checkbox class=\\\"disableFields\\\" disabled>Claim to Hotel</mat-checkbox>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n        <!-- Order: 12 -->\\n\\n        <!-- Order: 13 -->\\n        <div class=\\\"formSections pb-0 borderBottomNone borderTop\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('order').value) === 13\\\">\\n          <mat-checkbox class=\\\"headerCheckbox\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === true\\\">\\n            <h2 class=\\\"mb-0\\\">\\n              {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n            </h2>\\n          </mat-checkbox>\\n          <h2 class=\\\"mb-0\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === false\\\">\\n            {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n          </h2>\\n        </div> \\n        <!-- Order: 13 -->\\n\\n        <!-- Order: 14 -->\\n        <div class=\\\"formSections pb-0 borderBottomNone borderTop\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('order').value) === 14\\\">\\n          <mat-checkbox class=\\\"headerCheckbox\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === true\\\">\\n            <h2 class=\\\"mb-0\\\">\\n              {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n            </h2>\\n          </mat-checkbox>\\n          <h2 class=\\\"mb-0\\\" *ngIf=\\\"(contractTermsGroupArray.controls[i].get('isConfigurable').value) === false\\\">\\n            {{contractTermsGroupArray.controls[i].get(\\\"description\\\").value}}\\n          </h2>\\n          <div class=\\\"row\\\">\\n            <mat-form-field class=\\\"disableFields col-md-11\\\">\\n              <textarea rows=\\\"5\\\" cols=\\\"200\\\" matInput disabled></textarea>\\n            </mat-form-field>\\n            <div class=\\\"col-md-1 alignItemCenter\\\">\\n              <span class=\\\"btn transparent-circle mr-2 disableFields\\\" disabled><span></span></span>\\n            </div>\\n          </div>\\n        </div> \\n        <!-- Order: 14 -->\\n\\n      </div>\\n\\n      <div class=\\\"col-md-12 controlButtons mb-4 borderTopDark pt-5\\\">\\n        <button class=\\\"genericButton activeButton mat-primary mat-raised-button\\\" title=\\\"Save\\\" (click)=\\\"saveContractTerms()\\\">Save</button>\\n        <button class=\\\"genericButton defaultButton mat-raised-button\\\" mat-raised-button title=\\\"Cancel\\\" (click)=\\\"backToList()\\\">Cancel</button>\\n        <button class=\\\"genericButton activeButton mat-primary mat-raised-button float-right\\\" title=\\\"Save & Publish\\\" (click)=\\\"saveAndPublishContractTerms()\\\">Save & Publish</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/contract-terms/contract-terms.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/contract-terms/contract-terms.component.html\n// module chunks = templates.module","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormArray, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { TemplateUrlNotificationService } from '../../../common/extranet-shared/services/templates/template-url-notification.service';\nimport { ContractTermsViewModel } from '../../../viewmodel/templates/contract-terms/contracttermsviemodel';\nimport { ObjectState } from '../../../../common/enums';\nimport { ContractTermsDataService } from '../../../common/extranet-shared/services/templates/contract-terms-data.service';\nimport { MatSnackBar } from '@angular/material';\nimport { SaveContractTermsViewModel } from '../../../viewmodel/templates/contract-terms/saveContractTermsViewModel';\nimport { TemplateHotelInfoViewModel } from '../../../viewmodel/templates/hotel-info/hotelinfoviewmodel';\nimport { CONSTANTS } from '../../../../common/constants';\n\nconst duration = CONSTANTS.toasterTimeOut.duration;\n\n@Component({\n  selector: 'app-contract-terms',\n  templateUrl: './contract-terms.component.html',\n  styleUrls: ['./contract-terms.component.css']\n})\nexport class ContractTermsComponent implements OnInit {\n\n  contractTermsList: ContractTermsViewModel[];\n  saveContractTermsList: ContractTermsViewModel[];\n  contractTermsForm: FormGroup;\n  contractTermList: SaveContractTermsViewModel;\n  // templateHotelInfoViewModel: TemplateHotelInfoViewModel;\n\n  constructor(private router: Router,\n    private activatedRoute: ActivatedRoute,\n    public snackBar: MatSnackBar,\n    private contractTermsDataService: ContractTermsDataService,\n    private templateUrlNotificationService: TemplateUrlNotificationService\n  ) {\n      templateUrlNotificationService.changeURLRoute(activatedRoute.snapshot.url[0].path);\n  }\n\n  templateId = this.activatedRoute.parent.snapshot.params['id'];\n  templateHotelInfoViewModel = this.activatedRoute.snapshot.data['hotelFieldData'];\n\n  ngOnInit() {\n    this.getContractTerms();\n  }\n\n  getContractTerms() {\n    this.contractTermsList = this.activatedRoute.snapshot.data['contractTermsData'];\n\n    this.contractTermsForm = new FormGroup({\n      contractTermsGroupArray: this.buildContractTermsGroupsForm(this.contractTermsList)\n    });\n  }\n\n  get contractTermsGroupArray(): FormArray{\n    return <FormArray>this.contractTermsForm.get('contractTermsGroupArray');\n  }\n\n  buildContractTermsGroupsForm(contractTermsGroups: ContractTermsViewModel[]): FormArray {\n    let groupFormGroup: FormGroup;\n    let groupFormArray: FormArray;\n\n    contractTermsGroups.forEach(contractTermsGroup => {\n      groupFormGroup = new FormGroup({\n        clauseLibraryId: new FormControl(contractTermsGroup.clauseLibraryId),\n        description: new FormControl(contractTermsGroup.description),\n        isConfigurable: new FormControl(contractTermsGroup.isConfigurable),\n        isSelected: new FormControl(contractTermsGroup.isSelected),\n        name: new FormControl(contractTermsGroup.name),\n        order: new FormControl(contractTermsGroup.order),\n        status: new FormControl(contractTermsGroup.status)\n      });\n      if (groupFormArray === null || groupFormArray === undefined) {\n        groupFormArray = new FormArray([groupFormGroup]);\n      } else {\n        groupFormArray.push(groupFormGroup);\n      }\n    });\n\n    return groupFormArray;\n  }\n\n  saveContractTerms() {\n\n    this.saveContractTermsList = Object.assign([], this.contractTermsList, this.contractTermsForm.value.contractTermsGroupArray);\n    this.contractTermList = {\n      id: this.templateId,\n      name: this.templateHotelInfoViewModel.name,\n      clauseLibraryFields: this.saveContractTermsList,\n      isPublished: this.templateHotelInfoViewModel.isPublished === true ? true : false,\n      objectState: ObjectState.Unchanged\n    };\n\n    this.updateObjectState();\n\n    this.contractTermsDataService.addContractTerms(this.contractTermList as SaveContractTermsViewModel)\n        .subscribe(data => {\n          this.router.navigate(['/templatemgmt/templates']);\n          this.snackBar.open('Contract Terms Template Saved Successfully', '',\n                              { duration: duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n          window.scrollTo(0, 0);\n        }\n      );\n  }\n\n  saveAndPublishContractTerms() {\n\n    this.saveContractTermsList = Object.assign([], this.contractTermsList, this.contractTermsForm.value.contractTermsGroupArray);\n    this.contractTermList = {\n      id: this.templateId,\n      name: this.templateHotelInfoViewModel.name,\n      clauseLibraryFields: this.saveContractTermsList,\n      isPublished: true,\n      objectState: this.templateHotelInfoViewModel.isPublished === false ? ObjectState.Modified : ObjectState.Unchanged\n    };\n\n    this.updateObjectState();\n\n    this.contractTermsDataService.addContractTerms(this.contractTermList as SaveContractTermsViewModel)\n        .subscribe(data => {\n          this.router.navigate(['/templatemgmt/templates']);\n          this.snackBar.open('Contract Terms Template Saved Successfully', '',\n                              { duration: duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n          window.scrollTo(0, 0);\n        }\n      );\n  }\n\n  updateObjectState() {\n    this.saveContractTermsList.forEach ((contractTerm, contractTermIndex) => {\n      if (contractTerm.status === 0) {\n        if (contractTerm.isSelected === true) {\n          contractTerm.objectState = ObjectState.Added;\n        } else {\n          contractTerm.objectState = ObjectState.Unchanged;\n        }\n      } else {\n        if (contractTerm.isSelected !== this.checkOriginalObjectState(contractTermIndex)) {\n          contractTerm.objectState = ObjectState.Modified;\n        } else {\n          contractTerm.objectState = ObjectState.Unchanged;\n        }\n      }\n    });\n  }\n\n  checkOriginalObjectState(contractTermIndex) {\n    return this.contractTermsList[contractTermIndex].isSelected;\n  }\n\n  backToList() {\n    this.router.navigate(['/templatemgmt/templates']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/contract-terms/contract-terms.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".checkBoxList {\\r\\n    padding-left: 120px !important;\\r\\n}\\r\\n\\r\\n.iconHeading mat-checkbox {\\r\\n    top: -4px;\\r\\n}\\r\\n\\r\\nh5 {\\r\\n    font-family: 'maven_promedium';\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/hotel-info/facilities-services/facilities-services.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/hotel-info/facilities-services/facilities-services.component.css\n// module chunks = templates.module","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"mt-5\\\">\\n    <h1 class=\\\"mainHeading mb-1\\\">Facilities and Services</h1>\\n    <form [formGroup]=\\\"facilitiesForm\\\">\\n      <div class=\\\"formSections pt-4 pb-0 borderBottomNone\\\" formArrayName=\\\"facilitiesGroupArray\\\" *ngFor=\\\"let facilityGroup of facilitiesGroupArray.controls; let i=index\\\">\\n\\n      <!-- Internet -->\\n        <div  [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === internetGroupId\\\">\\n          <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n            <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n              <mat-panel-title>\\n                <div class=\\\"row iconHeading\\\">\\n                  <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                    <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/internetIcon.png\\\">\\n                  </div>\\n                  <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                    <div class=\\\"inlineColumn elementSelection\\\">\\n                        <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                    </div>\\n                    <div class=\\\"inlineColumn\\\">\\n                        <h2 class=\\\"checkAll\\\">\\n                          {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                        </h2>\\n                    </div>\\n                  </div>\\n                </div>\\n              </mat-panel-title>\\n            </mat-expansion-panel-header>\\n            <div class=\\\"row customeRow mt-4 pb-2\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"row mt-2\\\">\\n                  <div class=\\\"col-md-12 checkBoxList optionsList\\\">\\n                    <div class=\\\"row customeRow\\\">\\n                      <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n                        <div [formGroupName]=\\\"j\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\">\\n                        <mat-form-field class=\\\"disableFields\\\">\\n                          <mat-select placeholder=\\\"{{(facilityType.get('facilityTypeName').value)}}\\\" disabled>\\n                          </mat-select>\\n                        </mat-form-field>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </mat-expansion-panel>\\n        </div>\\n      <!-- Internet Ends -->\\n\\n      <!-- Parking -->\\n      <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === parkingGroupId\\\">\\n        <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n          <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n            <mat-panel-title>\\n              <div class=\\\"row iconHeading\\\">\\n                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                  <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/parking.png\\\">\\n                </div>\\n                <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                  <div class=\\\"inlineColumn elementSelection\\\">\\n                    <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                  </div>\\n                  <div class=\\\"inlineColumn\\\">\\n                    <h2 class=\\\"checkAll\\\">\\n                      {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                    </h2>\\n                  </div>\\n                </div>\\n              </div>\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <div class=\\\"row customeRow mt-4 pb-2\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"row\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n                <div class=\\\"col-md-12 checkBoxList optionsList\\\">\\n                  <div class=\\\"row customeRow\\\">\\n                    <div class=\\\"form-group col-md-4 col-lg-3\\\" [formGroupName]=\\\"j\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeId').value) != 6\\\">\\n                      <mat-form-field class=\\\"disableFields\\\">\\n                        <mat-select placeholder=\\\"{{(facilityType.get('facilityTypeName').value)}}\\\" disabled>\\n                        </mat-select>\\n                      </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeId').value) === 6\\\">\\n                      <p class=\\\"mt-0 optionsTxt semiboldText\\\">{{(facilityType.get('facilityTypeName').value)}}</p>\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4 col-lg-3\\\">\\n                          <div class=\\\"form-group mb-3\\\">\\n                            All\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                          <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\" attr.for=\\\"{{ 'facilityTypeId' + k }}\\\">\\n                            {{facility.get(\\\"name\\\").value}}\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </mat-expansion-panel>\\n      </div>\\n      <!-- Parking Ends -->\\n\\n      <!-- Pets -->\\n      <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === petsGroupId\\\">\\n        <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n          <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n              <mat-panel-title>\\n                <div class=\\\"row iconHeading\\\">\\n                  <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                    <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/petsIcon.png\\\">\\n                  </div>\\n                  <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                    <div class=\\\"inlineColumn elementSelection\\\">\\n                      <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                    </div>\\n                    <div class=\\\"inlineColumn\\\">\\n                      <h2 class=\\\"checkAll\\\">\\n                          {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                        </h2>\\n                    </div>\\n                  </div>\\n                </div>\\n              </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <div class=\\\"row customeRow mt-4 pb-2\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"row mt-2\\\">\\n                <div class=\\\"col-md-12 checkBoxList optionsList\\\">\\n                  <div class=\\\"row customeRow\\\">\\n                    <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n                      <div [formGroupName]=\\\"j\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\">\\n                        <mat-form-field class=\\\"disableFields\\\">\\n                          <mat-select placeholder=\\\"{{(facilityType.get('facilityTypeName').value)}}\\\" disabled>\\n                          </mat-select>\\n                        </mat-form-field>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </mat-expansion-panel>\\n      </div>\\n      <!-- Pets ends -->\\n\\n      <!-- Languages -->\\n      <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === languagesGroupId\\\">\\n        <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n          <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n            <mat-panel-title>\\n              <div class=\\\"row iconHeading\\\">\\n                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                  <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/langaugeIcon.png\\\">\\n                </div>\\n                <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                  <div class=\\\"inlineColumn elementSelection\\\">\\n                      <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                  </div>\\n                  <div class=\\\"inlineColumn\\\">\\n                    <h2 class=\\\"checkAll\\\">\\n                      {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                    </h2>\\n                    <h2 class=\\\"checkAll\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('isConfigurable').value) === false\\\">\\n                      {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                    </h2>\\n                  </div>\\n                </div>\\n              </div>\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <div class=\\\"row customeRow mt-4 pb-2\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12 checkBoxList optionsList\\\">\\n                  <div class=\\\"row customeRow\\\">\\n                    <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n                      <div [formGroupName]=\\\"j\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\">\\n                        <mat-form-field class=\\\"disableFields\\\">\\n                          <mat-select multiple placeholder=\\\"Languages\\\" disabled>\\n                          </mat-select>\\n                        </mat-form-field>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </mat-expansion-panel>\\n      </div>\\n      <!-- Languages ends -->\\n\\n      <!-- Activities -->\\n      <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === activitiesGroupId\\\">\\n        <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n          <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n            <mat-panel-title>\\n              <div class=\\\"row iconHeading\\\">\\n                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                  <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/activityIcon.png\\\">\\n                </div>\\n                <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                  <div class=\\\"inlineColumn elementSelection\\\">\\n                      <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                  </div>\\n                  <div class=\\\"inlineColumn\\\">\\n                        <h2 class=\\\"checkAll\\\">\\n                          {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                        </h2>\\n                  </div>\\n                </div>\\n              </div>\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <div class=\\\"row mt-4 pt-1\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n            <div class=\\\"col-md-12 checkBoxList optionsList\\\" [formGroupName]=\\\"j\\\">\\n              <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\n                {{(facilityType.get('facilityTypeName').value)}}\\n              </h5>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group mb-3\\\">\\n                    All\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                  <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\n                    {{facility.get(\\\"name\\\").value}}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </mat-expansion-panel>\\n      </div>\\n      <!-- Activities ends -->\\n\\n      <!-- Food and Drinks -->\\n      <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === foodAndDrinkGroupId\\\">\\n        <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n          <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n            <mat-panel-title>\\n              <div class=\\\"row iconHeading\\\">\\n                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                  <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/foodsanddrinkIcon.png\\\">\\n                </div>\\n                <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                  <div class=\\\"inlineColumn elementSelection\\\">\\n                    <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\">\\n                    </mat-checkbox>\\n                  </div>\\n                  <div class=\\\"inlineColumn\\\">\\n                    <h2 class=\\\"checkAll\\\">\\n                      {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                    </h2>\\n                  </div>\\n                </div>\\n              </div>\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <div class=\\\"row mt-4 pt-1\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n            <div class=\\\"col-md-12 checkBoxList optionsList\\\" [formGroupName]=\\\"j\\\">\\n              <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\n                {{(facilityType.get('facilityTypeName').value)}}\\n              </h5>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group mb-3\\\">\\n                    All\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                  <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\n                    {{facility.get(\\\"name\\\").value}}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </mat-expansion-panel>\\n      </div>\\n      <!-- Food and Drinks ends -->\\n\\n      <!-- Pool and Wellness -->\\n      <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === poolAndWellnessGroupId\\\">\\n        <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n          <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n            <mat-panel-title>\\n              <div class=\\\"row iconHeading\\\">\\n                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                  <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/poolIcon.png\\\">\\n                </div>\\n                <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                  <div class=\\\"inlineColumn elementSelection\\\">\\n                      <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                  </div>\\n                  <div class=\\\"inlineColumn\\\">\\n                          <h2 class=\\\"checkAll\\\">\\n                            {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                          </h2>\\n                  </div>\\n                 \\n                </div>\\n              </div>\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <div class=\\\"row mt-4 pt-1\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n            <div class=\\\"col-md-12 checkBoxList optionsList\\\" [formGroupName]=\\\"j\\\">\\n              <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\n                {{(facilityType.get('facilityTypeName').value)}}\\n              </h5>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group mb-3\\\">\\n                    All\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                  <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\n                    {{facility.get(\\\"name\\\").value}}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </mat-expansion-panel>\\n      </div>\\n      <!-- Pool and Wellness ends -->\\n\\n      <!-- Reception Services -->\\n      <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === receptionServicesGroupId\\\">\\n        <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n          <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n            <mat-panel-title>\\n              <div class=\\\"row iconHeading\\\">\\n                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                  <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/receptionIcon.png\\\">\\n                </div>\\n                <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                  <div class=\\\"inlineColumn elementSelection\\\">\\n                      <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                  </div>\\n                  <div class=\\\"inlineColumn\\\">\\n                          <h2 class=\\\"checkAll\\\">\\n                            {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                          </h2>\\n                  </div>\\n                  \\n                </div>\\n              </div>\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <div class=\\\"row mt-4 pt-1\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n            <div class=\\\"col-md-12 checkBoxList optionsList\\\" [formGroupName]=\\\"j\\\">\\n              <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\n                {{(facilityType.get('facilityTypeName').value)}}\\n              </h5>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group mb-3\\\">\\n                    All\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                  <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\n                    {{facility.get(\\\"name\\\").value}}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </mat-expansion-panel>\\n      </div>\\n      <!-- Reception Services ends -->\\n\\n      <!-- Transport -->\\n      <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === transportGroupId\\\">\\n        <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n          <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n            <mat-panel-title>\\n              <div class=\\\"row iconHeading\\\">\\n                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                  <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/transportIcon.png\\\">\\n                </div>\\n                <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                    <div class=\\\"inlineColumn elementSelection\\\">\\n                        <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"> </mat-checkbox>\\n                    </div>\\n                    <div class=\\\"inlineColumn\\\">\\n                            <h2 class=\\\"checkAll\\\">\\n                              {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                            </h2>\\n                    </div>\\n                    \\n                  </div>\\n              </div>\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <div class=\\\"row mt-4 pt-1\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n            <div class=\\\"col-md-12 checkBoxList optionsList\\\" [formGroupName]=\\\"j\\\">\\n              <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\n                {{(facilityType.get('facilityTypeName').value)}}\\n              </h5>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group mb-3\\\">\\n                    All\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                  <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\n                    {{facility.get(\\\"name\\\").value}}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </mat-expansion-panel>\\n      </div>\\n      <!-- Transport Ends -->\\n\\n      <!-- Common Areas -->\\n      <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === commonAreasGroupId\\\">\\n        <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n          <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n            <mat-panel-title>\\n              <div class=\\\"row iconHeading\\\">\\n                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                  <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/commonareaIcon.png\\\">\\n                </div>\\n                <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                    <div class=\\\"inlineColumn elementSelection\\\">\\n                        <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                    </div>\\n                    <div class=\\\"inlineColumn\\\">\\n                            <h2 class=\\\"checkAll\\\">\\n                              {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                            </h2>\\n                    </div>\\n                    \\n                  </div>\\n\\n              </div>\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <div class=\\\"row mt-4 pt-1\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n            <div class=\\\"col-md-12 checkBoxList optionsList\\\" [formGroupName]=\\\"j\\\">\\n              <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\n                {{(facilityType.get('facilityTypeName').value)}}\\n              </h5>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group mb-3\\\">\\n                    All\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                  <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\n                    {{facility.get(\\\"name\\\").value}}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </mat-expansion-panel>\\n      </div>\\n      <!-- Common Areas Ends -->\\n\\n      <!-- Entertainment and Family Services -->\\n      <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === entertainmentGroupId\\\">\\n        <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n          <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n            <mat-panel-title>\\n              <div class=\\\"row iconHeading\\\">\\n                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                  <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/entertainmentIcon.png\\\">\\n                </div>\\n                <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                    <div class=\\\"inlineColumn elementSelection\\\">\\n                        <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                    </div>\\n                    <div class=\\\"inlineColumn\\\">\\n                            <h2 class=\\\"checkAll\\\">\\n                              {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                            </h2>\\n                    </div>\\n                    \\n                  </div>\\n              </div>\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <div class=\\\"row mt-4 pt-1\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n            <div class=\\\"col-md-12 checkBoxList optionsList\\\" [formGroupName]=\\\"j\\\">\\n              <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\n                {{(facilityType.get('facilityTypeName').value)}}\\n              </h5>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group mb-3\\\">\\n                    All\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                  <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\n                    {{facility.get(\\\"name\\\").value}}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </mat-expansion-panel>\\n      </div>\\n      <!-- Entertainment and Family Services ends -->\\n\\n      <!-- Cleaning Services -->\\n      <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === cleaningGroupId\\\">\\n        <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n          <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n            <mat-panel-title>\\n              <div class=\\\"row iconHeading\\\">\\n                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                  <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/cleanIcon.png\\\">\\n                </div>\\n\\n                <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                    <div class=\\\"inlineColumn elementSelection\\\">\\n                        <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                    </div>\\n                    <div class=\\\"inlineColumn\\\">\\n                            <h2 class=\\\"checkAll\\\">\\n                              {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                            </h2>\\n                    </div>\\n                    \\n                  </div>\\n              </div>\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <div class=\\\"row mt-4 pt-1\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n            <div class=\\\"col-md-12 checkBoxList optionsList\\\" [formGroupName]=\\\"j\\\">\\n              <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\n                {{(facilityType.get('facilityTypeName').value)}}\\n              </h5>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group mb-3\\\">\\n                    All\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                  <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\n                    {{facility.get(\\\"name\\\").value}}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </mat-expansion-panel>\\n      </div>\\n      <!-- Cleaning Services ends -->\\n\\n      <!-- Business Facilities -->\\n      <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === businessGroupId\\\">\\n        <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n          <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n            <mat-panel-title>\\n              <div class=\\\"row iconHeading\\\">\\n                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                  <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/buisnessIcon.png\\\">\\n                </div>\\n\\n                <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                    <div class=\\\"inlineColumn elementSelection\\\">\\n                        <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                    </div>\\n                    <div class=\\\"inlineColumn\\\">\\n                            <h2 class=\\\"checkAll\\\">\\n                              {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                            </h2>\\n                    </div>\\n                    \\n                  </div>\\n              </div>\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <div class=\\\"row mt-4 pt-1\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n            <div class=\\\"col-md-12 checkBoxList optionsList\\\" [formGroupName]=\\\"j\\\">\\n              <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\n                {{(facilityType.get('facilityTypeName').value)}}\\n              </h5>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group mb-3\\\">\\n                    All\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                  <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\n                    {{facility.get(\\\"name\\\").value}}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </mat-expansion-panel>\\n      </div>\\n      <!-- Business Facilities ends -->\\n\\n      <!-- Shops -->\\n      <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === shopsGroupId\\\">\\n        <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n          <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n            <mat-panel-title>\\n              <div class=\\\"row iconHeading\\\">\\n                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                  <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/shopIcon.png\\\">\\n                </div>\\n\\n                <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                    <div class=\\\"inlineColumn elementSelection\\\">\\n                        <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                    </div>\\n                    <div class=\\\"inlineColumn\\\">\\n                            <h2 class=\\\"checkAll\\\">\\n                              {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                            </h2>\\n                    </div>\\n                    \\n                  </div>\\n              </div>\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <div class=\\\"row mt-4 pt-1\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n            <div class=\\\"col-md-12 checkBoxList optionsList\\\" [formGroupName]=\\\"j\\\">\\n              <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\n                {{(facilityType.get('facilityTypeName').value)}}\\n              </h5>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group mb-3\\\">\\n                    All\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                  <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\n                    {{facility.get(\\\"name\\\").value}}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </mat-expansion-panel>\\n      </div>\\n      <!-- Shops ends -->\\n\\n      <!-- Miscellaneous -->\\n      <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === miscellaneousGroupId\\\">\\n        <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n          <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n            <mat-panel-title>\\n              <div class=\\\"row iconHeading\\\">\\n                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                  <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/misllaniousIcon.png\\\">\\n                </div>\\n\\n                <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                    <div class=\\\"inlineColumn elementSelection\\\">\\n                      <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                    </div>\\n                    <div class=\\\"inlineColumn\\\">\\n                            <h2 class=\\\"checkAll\\\">\\n                              {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                            </h2>\\n                    </div>\\n                    \\n                  </div>\\n              </div>\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <div class=\\\"row mt-4 pt-1\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n            <div class=\\\"col-md-12 checkBoxList optionsList\\\" [formGroupName]=\\\"j\\\">\\n              <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\n                {{(facilityType.get('facilityTypeName').value)}}\\n              </h5>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group mb-3\\\">\\n                    All\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row mt-2 \\\">\\n                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                  <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\n                    {{facility.get(\\\"name\\\").value}}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </mat-expansion-panel>\\n      </div>\\n      <!-- Miscellaneous ends -->\\n\\n      </div>\\n      <div class=\\\"controlButtons mb-4 borderTopDark pt-5 mt-2\\\">\\n        <button title=\\\"Save\\\" class=\\\"genericButton activeButton mat-primary mat-raised-button\\\" (click)=\\\"saveFacilities()\\\">Save</button>\\n        <button title=\\\"Cancel\\\" type=\\\"reset\\\" class=\\\"genericButton defaultButton mat-raised-button\\\" mat-raised-button (click)=\\\"backToList()\\\">Cancel</button>\\n        <button title=\\\"Continue\\\" class=\\\"genericButton activeButton mat-primary mat-raised-button float-right\\\" (click)=\\\"saveAndContinueFacilities()\\\">Save &amp; Continue</button>\\n      </div>\\n\\n    </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/hotel-info/facilities-services/facilities-services.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/hotel-info/facilities-services/facilities-services.component.html\n// module chunks = templates.module","import { Component, OnInit } from '@angular/core';\nimport { FacilityGroupViewModel } from '../../../../viewmodel/facilitiesservicesviewmodel/facilitygroupviewmodel';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormArray, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { FacilityTypeViewModel } from '../../../../viewmodel/facilitiesservicesviewmodel/facilitytypeviewmodel';\nimport { EXTRANETCONSTANTS } from '../../../../common/constants';\nimport { TemplateFacilitiesDataService } from '../../../../common/extranet-shared/services/templates/template-facilities-data.service';\nimport { ObjectState } from '../../../../../common/enums';\nimport { CONSTANTS } from '../../../../../common/constants';\nimport { TemplateUrlNotificationService } from '../../../../common/extranet-shared/services/templates/template-url-notification.service';\nimport { MatSnackBar } from '@angular/material';\n\nconst facilities = EXTRANETCONSTANTS.facilities;\nconst read = CONSTANTS.operation.read;\nconst edit = CONSTANTS.operation.edit;\nconst create = CONSTANTS.operation.create;\nconst duration = CONSTANTS.toasterTimeOut.duration;\n\n@Component({\n  selector: 'app-facilities-services',\n  templateUrl: './facilities-services.component.html',\n  styleUrls: ['./facilities-services.component.css']\n})\nexport class FacilitiesServicesComponent implements OnInit {\n\n  templateFacilityGroupList: FacilityGroupViewModel[];\n  templateFacilitiesList: FacilityGroupViewModel[];\n  facilitiesForm: FormGroup;\n\n  internetGroupId = facilities.facilitiesGroupIds.internetGroupId;\n  parkingGroupId = facilities.facilitiesGroupIds.parkingGroupId;\n  petsGroupId = facilities.facilitiesGroupIds.petsGroupId;\n  languagesGroupId = facilities.facilitiesGroupIds.languagesGroupId;\n  activitiesGroupId = facilities.facilitiesGroupIds.activitiesGroupId;\n  foodAndDrinkGroupId = facilities.facilitiesGroupIds.foodAndDrinkGroupId;\n  poolAndWellnessGroupId = facilities.facilitiesGroupIds.poolAndWellnessGroupId;\n  receptionServicesGroupId = facilities.facilitiesGroupIds.receptionServicesGroupId;\n  transportGroupId = facilities.facilitiesGroupIds.transportGroupId;\n  commonAreasGroupId = facilities.facilitiesGroupIds.commonAreasGroupId;\n  entertainmentGroupId = facilities.facilitiesGroupIds.entertainmentGroupId;\n  cleaningGroupId = facilities.facilitiesGroupIds.cleaningGroupId;\n  businessGroupId = facilities.facilitiesGroupIds.businessGroupId;\n  shopsGroupId = facilities.facilitiesGroupIds.shopsGroupId;\n  miscellaneousGroupId = facilities.facilitiesGroupIds.miscellaneousGroupId;\n\n  constructor(private route: ActivatedRoute,\n              private templateFacilitiesDataService: TemplateFacilitiesDataService,\n              public snackBar: MatSnackBar,\n              private router: Router,\n              private templateUrlNotificationService: TemplateUrlNotificationService) {\n              templateUrlNotificationService.changeURLRoute(route.snapshot.url[0].path);\n               }\n\n  templateId = this.route.parent.snapshot.params['id'];\n  ngOnInit() {\n    window.scrollTo(0, 0);\n    this.getTemplateFacilitiesServices();\n  }\n\n  getTemplateFacilitiesServices() {\n    this.templateFacilityGroupList = this.route.snapshot.data['facilityData'];\n\n    this.facilitiesForm = new FormGroup({\n      facilitiesGroupArray: this.buildFacilityGroupsForm(this.templateFacilityGroupList)\n    });\n  }\n\n  get facilitiesGroupArray(): FormArray{\n    return <FormArray>this.facilitiesForm.get('facilitiesGroupArray');\n  }\n\n  getTypeArrayForGroup(groupIndex: number): FormArray {\n      return <FormArray>this.facilitiesGroupArray.controls[groupIndex].get('hotelFacilityTypes');\n  }\n\n  getFacilityArrayForGroupAndType(groupIndex: number , typeIndex: number) {\n    return <FormArray> this.getTypeArrayForGroup(groupIndex).controls[typeIndex].get('facilityList');\n  }\n\n  buildFacilityGroupsForm(facilityGroups: FacilityGroupViewModel[]): FormArray {\n    let groupFormGroup: FormGroup;\n    let groupFormArray: FormArray;\n\n    facilityGroups.forEach(facilityGroup => {\n      groupFormGroup = new FormGroup({\n        facilityGroupId: new FormControl(facilityGroup.facilityGroupId),\n        facilityGroupName: new FormControl(facilityGroup.facilityGroupName),\n        hotelFacilityTypes : this.buildFacilityTypesForm(facilityGroup),\n        isConfigurable: new FormControl(facilityGroup.isConfigurable),\n        isSelected: new FormControl(facilityGroup.isSelected),\n        id: new FormControl(facilityGroup.id),\n        status: new FormControl(facilityGroup.status)\n      });\n      if (groupFormArray === null || groupFormArray === undefined) {\n        groupFormArray = new FormArray([groupFormGroup]);\n      } else {\n        groupFormArray.push(groupFormGroup);\n      }\n    });\n\n    return groupFormArray;\n  }\n\n  buildFacilityTypesForm(facilityGroup: FacilityGroupViewModel): FormArray {\n    let typeFormGroup: FormGroup;\n    let typeFormArray: FormArray;\n\n    facilityGroup.hotelFacilityTypes.forEach(facilityType => {\n      typeFormGroup = new FormGroup({\n        facilityTypeId: new FormControl(facilityType.facilityTypeId),\n        facilityGroupId: new FormControl(facilityType.facilityGroupId),\n        facilityTypeName: new FormControl(facilityType.facilityTypeName),\n        facilityList : this.buildFacilitiesForm(facilityType)\n      });\n      if (typeFormArray === null || typeFormArray === undefined) {\n        typeFormArray = new FormArray([typeFormGroup]);\n      } else {\n        typeFormArray.push(typeFormGroup);\n      }\n    });\n\n    return typeFormArray;\n  }\n\n  buildFacilitiesForm(facilityType: FacilityTypeViewModel): FormArray {\n    let facilityFormGroup: FormGroup;\n    let facilityFormArray: FormArray;\n\n    facilityType.facilityList.forEach(facility => {\n      facilityFormGroup = new FormGroup({\n        facilityRelationId: new FormControl(facility.facilityRelationId),\n        id: new FormControl(facility.id),\n        name: new FormControl(facility.name),\n        facilityTypeId: new FormControl(facility.facilityTypeId),\n        facilityGroupId: new FormControl(facility.facilityGroupId),\n        isSelected: new FormControl(facility.isSelected)\n      });\n      if (facilityFormArray === null || facilityFormArray === undefined) {\n        facilityFormArray = new FormArray([facilityFormGroup]);\n      } else {\n        facilityFormArray.push(facilityFormGroup);\n      }\n\n    });\n\n    return facilityFormArray;\n  }\n\n  public saveFacilities() {\n\n    this.templateFacilitiesList = Object.assign([], this.templateFacilityGroupList, this.facilitiesForm.value.facilitiesGroupArray);\n\n    this.updateObjectState();\n\n    this.templateFacilitiesDataService.addFacilities(this.templateFacilitiesList as FacilityGroupViewModel[], this.templateId)\n        .subscribe(data => {\n          this.router.navigate(['/templatemgmt/templates']);\n          this.snackBar.open('Facilities & Services Template Saved Successfully', '', { duration: duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n          window.scrollTo(0, 0);\n        }\n      );\n  }\n\n  public saveAndContinueFacilities() {\n\n    this.templateFacilitiesList = Object.assign([], this.templateFacilityGroupList, this.facilitiesForm.value.facilitiesGroupArray);\n\n    this.updateObjectState();\n\n    this.templateFacilitiesDataService.addFacilities(this.templateFacilitiesList as FacilityGroupViewModel[], this.templateId)\n      .subscribe(data => {\n        this.router.navigate(['/templatemgmt/template', this.templateId, edit, 'roomtype']);\n        this.snackBar.open('Facilities & Services Template Saved Successfully', '', { duration: duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n        window.scrollTo(0, 0);\n      }\n      );\n  }\n\n  updateObjectState() {\n    this.templateFacilitiesList.forEach ((facilityGroup, facilityGroupIndex) => {\n      if (facilityGroup.status === 0) {\n        if (facilityGroup.isSelected === true) {\n          facilityGroup.objectState = ObjectState.Added;\n        } else {\n          facilityGroup.objectState = ObjectState.Unchanged;\n        }\n      } else {\n        if (facilityGroup.isSelected !== this.checkOriginalObjectState(facilityGroupIndex)) {\n          facilityGroup.objectState = ObjectState.Modified;\n        } else {\n          facilityGroup.objectState = ObjectState.Unchanged;\n        }\n      }\n    });\n  }\n\n  checkOriginalObjectState(facilityGroupIndex) {\n    return this.templateFacilityGroupList[facilityGroupIndex].isSelected;\n  }\n\n  backToList() {\n     this.router.navigate(['/templatemgmt/templates']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/hotel-info/facilities-services/facilities-services.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".form-group {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.amt {\\r\\n  width: 50%;\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.buttons {\\r\\n  float: right;\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\n\\r\\ntextarea {\\r\\n  resize: none;\\r\\n}\\r\\n\\r\\n.clear {\\r\\n  clear: both;\\r\\n  overflow: hidden;\\r\\n  height: 0;\\r\\n}\\r\\n\\r\\n.hotelStatus {\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\n\\r\\n.hotelStatus {\\r\\n  margin-bottom: 0;\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\n  .hotelStatus .form-check.form-check-inline {\\r\\n    margin: 0;\\r\\n  }\\r\\n\\r\\n  .hotelStatus .custom-control-description {\\r\\n    line-height: 1.7;\\r\\n    margin-bottom: 0;\\r\\n    font-weight: normal;\\r\\n  }\\r\\n\\r\\n.mapLocator {\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n  .mapLocator .input-group-addon {\\r\\n    position: absolute;\\r\\n    right: 0;\\r\\n    top: 2px;\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n    padding: 0;\\r\\n  }\\r\\n\\r\\n  .mapLocator .input-group-addon button{\\r\\n    background: none;\\r\\n    border: none;\\r\\n  }\\r\\n\\r\\n    .mapLocator .input-group-addon .fa {\\r\\n      color: #29aae2;\\r\\n      font-size: 1.2rem;\\r\\n    }\\r\\n\\r\\n  .mapLocator .form-control {\\r\\n    padding-right: 34px;\\r\\n  }\\r\\n\\r\\n/* .custom-select {\\r\\n  background: url(../../../../../../assets/selectDropDown.png) no-repeat right .75rem center !important;\\r\\n} */\\r\\n\\r\\n\\r\\n.LeftnavSection {\\r\\n  width: 23%;\\r\\n  margin-right: 40px;\\r\\n}\\r\\n\\r\\n.LeftnavSection {\\r\\n  width: 77%;\\r\\n}\\r\\n\\r\\n /* .ng-valid[required], .ng-valid.required {\\r\\n  border-left: 5px solid #42A948;\\r\\n}\\r\\n\\r\\n.ng-invalid:not(form) {\\r\\n  border-left: 5px solid #a94442;\\r\\n}  */\\r\\n\\r\\n/*\\r\\ninput:invalid {\\r\\n  border-left: 5px solid #a94442;\\r\\n}  */\\r\\n\\r\\n/* .container-fluid.bodyContainer {\\r\\n  overflow: scroll;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n} */\\r\\n\\r\\n.table td, .table th {\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\\r\\n.table th {\\r\\n  border-bottom: 0;\\r\\n}\\r\\n\\r\\n.typeLabel {\\r\\n  font-size: 0.875rem;\\r\\n  color: #666;\\r\\n}\\r\\n\\r\\n.taxtesTypeTh {\\r\\n  width: 16.7%;\\r\\n}\\r\\n\\r\\n.taxtesRoomTh {\\r\\n  width: 21.0%;\\r\\n}\\r\\n\\r\\n.taxtesAmountTh {\\r\\n  width: 10.5%;\\r\\n}\\r\\n\\r\\n.taxtesRatesTh {\\r\\n  width: 10.5%;\\r\\n}\\r\\n\\r\\n\\r\\ntd.taxesLabel .mat-form-field{\\r\\n  width: 70%;\\r\\n}\\r\\n\\r\\n.taxesAmountLabel .percentageIcon{\\r\\n  position: absolute;\\r\\n  right: -20px;\\r\\n  top: 10px;\\r\\n}\\r\\n\\r\\n.onOffButton {\\r\\n  border: 1px solid #e0e0e0;\\r\\n}\\r\\n\\r\\n  .onOffButton .btn {\\r\\n    border-radius: 0;\\r\\n    font-size: 0.875rem;\\r\\n    box-shadow: none;\\r\\n    padding: 4px 18px;\\r\\n    border: none;\\r\\n  }\\r\\n\\r\\n    .onOffButton .btn.btn-default {\\r\\n      background: none;\\r\\n    }\\r\\n\\r\\n    .onOffButton .btn.btn-primary {\\r\\n      background: #4168a1;\\r\\n    }\\r\\n.mat-form-field{\\r\\n  margin-left: 24px;\\r\\n  margin-right: 75px;\\r\\n}\\r\\n\\r\\n.mat-form-field-infix{\\r\\n  width: 200px !important;\\r\\n}\\r\\n\\r\\n.mat-select-value{\\r\\n  color: #333;\\r\\n}\\r\\n\\r\\nmat-checkbox.mat-checkbox-checked /deep/  .mat-checkbox-background{\\r\\n  background: #4168a1;\\r\\n}\\r\\n\\r\\nmat-checkbox /deep/ .mat-checkbox-frame{\\r\\n  border: 1px solid #e2e2e2;\\r\\n}\\r\\n\\r\\nmat-button-toggle-group .mat-button-toggle-label{\\r\\n  margin-bottom: 0;\\r\\n  color: #333;\\r\\n  font-size: 0.875em;\\r\\n}\\r\\n\\r\\nmat-button-toggle-group{\\r\\n  border-radius: 0;\\r\\n  border:1px solid #e0e0e0;\\r\\n  box-shadow: none;\\r\\n}\\r\\n\\r\\nmat-button-toggle-group /deep/ .mat-button-toggle{\\r\\n  color: #333;\\r\\n  font-size: 0.875em;\\r\\n}\\r\\n\\r\\nmat-button-toggle-group /deep/ .mat-button-toggle .mat-button-toggle-label-content{\\r\\n  line-height: 22px;\\r\\n  padding: 0 15px;\\r\\n}\\r\\n\\r\\nmat-button-toggle-group /deep/ .mat-button-toggle-checked{\\r\\n  background: #4168a1;\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\nmat-button-toggle-group /deep/ .mat-button-toggle-checked .mat-button-toggle-label{\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.primaryContactTh{\\r\\n  width: 5%;\\r\\n}\\r\\n\\r\\n.contactContactTh{\\r\\n  width: 22%;\\r\\n}\\r\\n\\r\\n.titleContactTh{\\r\\n  width: 25.2%;\\r\\n}\\r\\n\\r\\n.emailContactTh{\\r\\n  width: 28.2%;\\r\\n}\\r\\n\\r\\n.contactNumberContactTh{\\r\\n  width: 27.9%;\\r\\n}\\r\\n\\r\\n.addContact{\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.addContact .btn.buttonStacked{\\r\\n  position: absolute;\\r\\n  right: 0;\\r\\n  top: 25px;\\r\\n}\\r\\n\\r\\n\\r\\n.addContact .text-primary{\\r\\n  color: #29aae2 !important;\\r\\n}\\r\\n\\r\\n.contactTable td .mat-form-field{\\r\\n  width: 70%;\\r\\n}\\r\\n\\r\\n::ng-deep .matCheckBox label.mat-checkbox-layout{\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n.genericLabel\\r\\n{\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.widthCalculate30 {\\r\\n  width: calc(100% - 30px);\\r\\n}\\r\\n\\r\\n.paddingLeft45 {\\r\\n  padding-left: 45px;\\r\\n}\\r\\n\\r\\n.specifyOptions {\\r\\n  border-top: 1px solid #d5d5d5;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/hotel-info/hotel-details/hotel-details.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/hotel-info/hotel-details/hotel-details.component.css\n// module chunks = templates.module","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <!-- <form [formGroup]=\\\"hotelInfoForm\\\" (ngSubmit)=\\\"saveHotelInfo()\\\" > -->\\n      <form [formGroup]=\\\"hotelInfoForm\\\">\\n<div class=\\\"mt-5\\\">\\n  <div class=\\\"mt-4\\\">\\n    <h1 class=\\\"mainHeading mb-4\\\">Hotel Info</h1>\\n\\n       <!-- <div class=\\\"formSections pb-0 borderBottomNone\\\">\\n        <h5 class=\\\"semiBold\\\">\\n     Hotel Status\\n    <div class=\\\"form-group hotelStatus\\\">\\n      <div class=\\\"form-check form-check-inline\\\">\\n        <mat-checkbox>Active</mat-checkbox>\\n      </div>\\n    </div>\\n  </h5>\\n      </div>-->\\n      <div class=\\\"formSections pt-3 pb-4 borderBottomNone\\\">\\n        <h5 class=\\\"semiBold mb-5\\\">Hotel Details</h5>\\n        <!-- <label>Hotel ID: CA00000001</label> -->\\n        <div class=\\\"row customeRow\\\">\\n          <div class=\\\"inlineGroup col-md-4 col-lg-3\\\">\\n              <div class=\\\"inlineColumn elementSelection\\\"><mat-checkbox *ngIf=\\\"hotelnameStatus[0]['isConfigurable']\\\"  class=\\\"matCheckBox\\\" formControlName=\\\"hotelName\\\"></mat-checkbox></div>\\n            <!-- <label>Name</label> -->\\n            <div class=\\\"inlineColumn\\\">\\n                <mat-form-field class=\\\"serachFieldDisabled disableFields\\\">\\n                    <input matInput placeholder=\\\"Search by Name\\\" required disabled=\\\"true\\\" />\\n                    <i aria-hidden=\\\"true\\\" class=\\\"fa fa-search\\\"></i>\\n                  </mat-form-field>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"inlineGroup col-md-4 col-lg-3\\\">\\n              <div class=\\\"inlineColumn elementSelection\\\"><mat-checkbox *ngIf=\\\"chainStatus[0]['isConfigurable']\\\"  class=\\\"matCheckBox\\\" formControlName=\\\"chain\\\" (change)=\\\"onChainChange($event)\\\"></mat-checkbox></div>\\n            <!-- <label>Chain</label> -->\\n            <div class=\\\"inlineColumn\\\">\\n              <mat-form-field class=\\\"disableFields \\\">\\n                <mat-select [disabled]=\\\"true\\\" placeholder=\\\"Chain\\\" >\\n                  <mat-option [value]=\\\"null\\\">Select</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              </div>\\n          </div>\\n\\n          <div class=\\\"inlineGroup col-md-4 col-lg-3\\\">\\n              <div class=\\\"inlineColumn elementSelection\\\"><mat-checkbox *ngIf=\\\"brandStatus[0]['isConfigurable']\\\"  class=\\\"matCheckBox\\\" formControlName=\\\"brand\\\"></mat-checkbox></div>\\n            <!-- <label>Brand</label> -->\\n            <div class=\\\"inlineColumn\\\">\\n              <mat-form-field class=\\\"disableFields \\\">\\n                <mat-select [disabled]=\\\"true\\\" placeholder=\\\"Brand\\\">\\n                  <mat-option [value]=\\\"null\\\">Select</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"inlineGroup  col-md-4 col-lg-3\\\">\\n              <div class=\\\"inlineColumn elementSelection\\\"><mat-checkbox *ngIf=\\\"typeStatus[0]['isConfigurable']\\\" class=\\\"matCheckBox\\\" formControlName=\\\"type\\\"></mat-checkbox></div>\\n            <!--*ngIf=\\\"isName\\\" class=\\\"genericLabel\\\" -->\\n            <div class=\\\"inlineColumn\\\">\\n              <mat-form-field class=\\\"disableFields \\\">\\n                <mat-select [disabled]=\\\"true\\\" placeholder=\\\"Type\\\">\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"inlineGroup col-md-4 col-lg-3\\\">\\n            <div class=\\\"inlineColumn elementSelection\\\">\\n              <mat-checkbox *ngIf=\\\"totalNumberOfRoomsStatus[0]['isConfigurable']\\\" class=\\\"matCheckBox\\\" formControlName=\\\"totalNumberOfRooms\\\"></mat-checkbox>\\n            </div>\\n            <div class=\\\"inlineColumn\\\">\\n              <mat-form-field class=\\\"disableFields \\\">\\n                <input matInput placeholder=\\\"Number of Rooms\\\" disabled/>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"inlineGroup  col-md-4 col-lg-3\\\">\\n            <div class=\\\"inlineColumn elementSelection\\\"><mat-checkbox *ngIf=\\\"starratingStatus[0]['isConfigurable']\\\"  class=\\\"matCheckBox\\\" formControlName=\\\"starrating\\\" [disabled]=\\\"true\\\"></mat-checkbox></div>\\n            <!-- <label>Star Rating</label> -->\\n            <div class=\\\"inlineColumn\\\">\\n              <mat-form-field class=\\\"disableFields \\\">\\n                <mat-select disabled=\\\"true\\\" placeholder=\\\"Star Rating\\\" required>\\n                  <mat-option></mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"inlineGroup  col-md-4 col-lg-3\\\">\\n              <div class=\\\"inlineColumn elementSelection\\\"><mat-checkbox *ngIf=\\\"mgpointsStatus[0]['isConfigurable']\\\" class=\\\"matCheckBox\\\" formControlName=\\\"mgpoints\\\"></mat-checkbox></div>\\n              <!-- <label>MG Points</label> -->\\n            <div class=\\\"inlineColumn\\\">\\n              <mat-form-field class=\\\"disableFields \\\">\\n                <input matInput placeholder=\\\"MG Points\\\" disabled>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n        <!-- Form section cosed-->\\n      </div>\\n      <!-- Row div cosed-->\\n\\n      <div class=\\\"formSections pt-5 pb-4 borderTop\\\">\\n        <div class=\\\"row customeRow\\\">\\n        <div class=\\\"inlineGroup  col-md-4 col-lg-3\\\">\\n          <div class=\\\"inlineColumn elementSelection\\\"><mat-checkbox *ngIf=\\\"add1Status[0]['isConfigurable']\\\" class=\\\"matCheckBox\\\" formControlName=\\\"address1\\\"></mat-checkbox></div>\\n          <!-- <label>Address1</label> -->\\n          <div class=\\\"inlineColumn\\\">\\n            <mat-form-field class=\\\"disableFields \\\">\\n              <input matInput required disabled  placeholder=\\\"Address1\\\"/>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"inlineGroup  col-md-4 col-lg-3\\\">\\n            <div class=\\\"inlineColumn elementSelection\\\"><mat-checkbox *ngIf=\\\"add2Status[0]['isConfigurable']\\\" class=\\\"matCheckBox\\\" formControlName=\\\"address2\\\"></mat-checkbox></div>\\n          <!-- <label>Address2</label> -->\\n          <div class=\\\"inlineColumn\\\">\\n            <mat-form-field class=\\\"disableFields \\\">\\n              <input matInput required disabled  placeholder=\\\"Address2\\\"/>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"inlineGroup  col-md-4 col-lg-3\\\">\\n            <div class=\\\"inlineColumn elementSelection\\\"><mat-checkbox *ngIf=\\\"countryStatus[0]['isConfigurable']\\\" class=\\\"matCheckBox\\\" formControlName=\\\"country\\\"></mat-checkbox></div>\\n          <!-- <label>Country</label> -->\\n          <div class=\\\"inlineColumn\\\">\\n            <mat-form-field class=\\\"disableFields \\\">\\n              <mat-select [disabled]=\\\"true\\\" required  placeholder=\\\"Country\\\">\\n                <mat-option [value]=\\\"null\\\">Select</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"inlineGroup  col-md-4 col-lg-3\\\">\\n            <div class=\\\"inlineColumn elementSelection\\\"><mat-checkbox *ngIf=\\\"cityStatus[0]['isConfigurable']\\\" class=\\\"matCheckBox\\\" formControlName=\\\"city\\\"></mat-checkbox></div>\\n          <!-- <label>City</label> -->\\n          <div class=\\\"inlineColumn\\\">\\n            <mat-form-field class=\\\"disableFields \\\">\\n              <mat-select [disabled]=\\\"true\\\" placeholder=\\\"City\\\" required>\\n                <mat-option [value]=\\\"null\\\">Select</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"inlineGroup  col-md-4 col-lg-3\\\">\\n            <div class=\\\"inlineColumn elementSelection\\\"><mat-checkbox *ngIf=\\\"zipStatus[0]['isConfigurable']\\\" [checked]=\\\"zipStatus[0]['isSelected']\\\" class=\\\"matCheckBox\\\" formControlName=\\\"zip\\\"></mat-checkbox></div>\\n            <!-- <label>Zip Code</label> -->\\n          <div class=\\\"inlineColumn\\\">\\n            <mat-form-field class=\\\"disableFields \\\">\\n              <input matInput placeholder=\\\"Zip Code\\\" required disabled/>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"inlineGroup col-md-4 col-lg-3\\\">\\n          <div class=\\\"mapLocator\\\">\\n              <div class=\\\"float-left checkBoxDiv\\\"><mat-checkbox *ngIf=\\\"latlongStatus[0]['isConfigurable']\\\" class=\\\"matCheckBox\\\" formControlName=\\\"latlong\\\"></mat-checkbox></div>\\n              <!-- <label>Latitude / Longitude</label> -->\\n            <div class=\\\"float-left marginLeft10 widthCalculate30\\\">\\n              <mat-form-field class=\\\"disableFields \\\">\\n                <input matInput placeholder=\\\"Latitude / Longitude\\\" required disabled/>\\n                <span class=\\\"input-group-addon\\\">\\n                  <button [disabled]=\\\"true\\\" >\\n                    <i aria-hidden=\\\"true\\\" class=\\\"fa fa-map-marker\\\"></i>\\n                  </button>\\n                </span>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"formSections pb-4 pt-4\\\">\\n        <div class=\\\"row mt-3 customeRow\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"float-left checkBoxDiv\\\">\\n                <mat-checkbox *ngIf=\\\"shortdescriptionStatus[0]['isConfigurable']\\\"  class=\\\"matCheckBox\\\" formControlName=\\\"shortdescription\\\"></mat-checkbox>\\n            </div>\\n            <div class=\\\"float-left marginLeft10 widthCalculate30\\\">\\n                <h2>\\n                  Hotel Short Description\\n                    <!-- <label>Hotel Short Description</label> -->\\n                </h2>\\n              <mat-form-field class=\\\"disableFields \\\">\\n                <textarea [disabled]=\\\"true\\\" matInput placeholder=\\\"Hotel Short Description\\\" rows=\\\"5\\\" cols=\\\"200\\\" maxlength=\\\"500\\\" required></textarea>\\n              </mat-form-field>\\n              <p class=\\\"small text-right lightGrey\\\">Max. 500 characters</p>\\n\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row mt-3 customeRow\\\">\\n          <div class=\\\"col-md-12\\\">\\n              <div class=\\\"float-left checkBoxDiv\\\">\\n                  <mat-checkbox *ngIf=\\\"longdescriptionStatus[0]['isConfigurable']\\\"  class=\\\"matCheckBox\\\" formControlName=\\\"longdescription\\\"></mat-checkbox>\\n              </div>\\n              <div class=\\\"float-left marginLeft10 widthCalculate30\\\">\\n                <h2>\\n                    Hotel Long Description\\n                    <!-- <label>Hotel Long Description</label> -->\\n                </h2>\\n                <mat-form-field class=\\\"disableFields \\\">\\n                  <textarea [disabled]=\\\"true\\\" matInput placeholder=\\\"Hotel Long Description\\\"></textarea>\\n                </mat-form-field>\\n                <p class=\\\"small text-right lightGrey\\\">Max. 1200 characters</p>\\n              </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"formSections pb-0 pt-5\\\">\\n        <!-- Checkin Check Out-->\\n        <div class=\\\"row mt-0 customeRow pb-4 customeRow\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"float-left checkBoxDiv\\\">\\n                <mat-checkbox *ngIf=\\\"checkincheckoutStatus[0]['isConfigurable']\\\"  class=\\\"matCheckBox\\\" formControlName=\\\"checkincheckout\\\"></mat-checkbox>\\n            </div>\\n            <div class=\\\"float-left marginLeft10 widthCalculate30\\\">\\n              <h2>\\n                  Check In Check Out\\n                    <!-- <label>Check In Check Out</label> -->\\n                </h2>\\n              <div class=\\\"row  mt-3 customeRow\\\">\\n                <div class=\\\"col-md-4 checkInCheckoutBorderRight form-group col-lg-3\\\">\\n                  <div class=\\\"row customeRow\\\">\\n                    <div class=\\\"col-md-12\\\"><h5 class=\\\"requiredLabel semiBold mb-4\\\">Check-in</h5></div>\\n                  </div>\\n                  <div class=\\\"row customeRow\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                      <mat-form-field class=\\\"disableFields \\\">\\n                        <mat-select disabled=\\\"true\\\" placeholder=\\\"From\\\" id=\\\"checkinfrom\\\" name=\\\"checkinfrom\\\">\\n                          <mat-option value=\\\"undefined\\\" disabled=\\\"true\\\" hidden>Select</mat-option>\\n                          <mat-option >checkinfrom.Value</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                    </div>\\n                    <!-- <div class=\\\"col-md-6\\\">\\n                      <mat-form-field >\\n                        <mat-select disabled=\\\"true\\\" placeholder=\\\"To (Optional)\\\" id=\\\"checkinto\\\" name=\\\"checkinto\\\" >\\n                          <mat-option [value]=\\\"null\\\">Select</mat-option>\\n                          <mat-option>checkinto.Value</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                    </div> -->\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-4 form-group col-lg-3\\\">\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-12 pl-3\\\"><h5 class=\\\"requiredLabel semiBold mb-4\\\">Check-out</h5></div>\\n                  </div>\\n                  <div class=\\\"row customeRow\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                      <mat-form-field class=\\\"disableFields \\\">\\n                        <mat-select disabled=\\\"true\\\" placeholder=\\\"From (Optional)\\\" id=\\\"checkoutfrom\\\" name=\\\"checkoutfrom\\\">\\n                          <mat-option [value]=\\\"null\\\">Select</mat-option>\\n                          <mat-option >checkoutfrom.Value</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                    </div>\\n                    <!-- <div class=\\\"col-md-6\\\">\\n                      <mat-form-field >\\n                      <mat-select disabled=\\\"true\\\" placeholder=\\\"To\\\" id=\\\"checkoutto\\\" name=\\\"checkoutto\\\">\\n                      <mat-option value=\\\"undefined\\\" disabled=\\\"true\\\" hidden>Select</mat-option>\\n                      <mat-option>checkoutto.Value</mat-option>\\n                      </mat-select>\\n                      </mat-form-field>\\n                    </div> -->\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n        </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"formSections pb-0 borderBottomNone pt-5 paddingRight15px\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"float-left checkBoxDiv\\\">\\n              <mat-checkbox *ngIf=\\\"contactStatus[0]['isConfigurable']\\\"  class=\\\"matCheckBox\\\" formControlName=\\\"contactdetails\\\"></mat-checkbox>\\n            </div>\\n            <div class=\\\"float-left marginLeft10 widthCalculate30\\\">\\n              <h2 class=\\\"pb-1\\\">Contact Details</h2>\\n              <div class=\\\"row mt-4\\\">\\n                <div class=\\\"form-group col-md-12 mb-0\\\">\\n                  <table class=\\\"table genericTable borderTopZero mb-0 contactTable\\\">\\n                    <thead>\\n                      <tr>\\n                        <th class=\\\"border-top-0 primaryContactTh\\\">Set as Primary</th>\\n                        <th class=\\\"border-top-0 contactContactTh\\\">Contact Person</th>\\n                        <th class=\\\"border-top-0 titleContactTh\\\">Designation</th>\\n                        <th class=\\\"border-top-0 emailContactTh\\\">Email</th>\\n                        <th class=\\\"border-top-0 contactNumberContactTh\\\">Contact Number</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <!-- <tr>\\n                        <td class=\\\"align-middle\\\">\\n                          <mat-radio-group >\\n                            <mat-radio-button [disabled]=\\\"true\\\"></mat-radio-button>\\n                          </mat-radio-group>\\n                        </td>\\n                        <td>\\n                          <mat-form-field >\\n                            <input matInput placeholder=\\\"\\\" disabled/>\\n                          </mat-form-field>\\n                        </td>\\n                        <td>\\n                          <mat-form-field >\\n                            <mat-select [disabled]=\\\"true\\\" placeholder=\\\"\\\">\\n                              <mat-option [value]=\\\"undefined\\\" disabled=\\\"true\\\">Select</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                        </td>\\n                        <td>\\n                          <mat-form-field >\\n                            <input matInput placeholder=\\\"\\\" disabled/>\\n                          </mat-form-field>\\n                        </td>\\n                        <td>\\n                          <mat-form-field >\\n                            <input matInput placeholder=\\\"\\\" disabled/>\\n                          </mat-form-field>\\n                        </td>\\n                      </tr> -->\\n                      <tr>\\n                        <td class=\\\"align-middle\\\">\\n                          <mat-radio-group class=\\\"disableFields\\\">\\n                            <mat-radio-button value=\\\"1\\\" disabled=\\\"true\\\"></mat-radio-button>\\n                          </mat-radio-group>\\n                        </td>\\n                        <td>\\n                          <mat-form-field class=\\\"disableFields\\\">\\n                            <input matInput placeholder=\\\"\\\" disabled/>\\n                          </mat-form-field>\\n                        </td>\\n                        <td>\\n                          <mat-form-field class=\\\"disableFields\\\">\\n                            <mat-select disabled=\\\"true\\\" placeholder=\\\"\\\">\\n                              <mat-option>Select</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                        </td>\\n                        <td>\\n                          <mat-form-field class=\\\"disableFields\\\">\\n                            <input matInput placeholder=\\\"\\\" disabled/>\\n                          </mat-form-field>\\n                        </td>\\n                        <td class=\\\"addContact\\\">\\n                          <mat-form-field class=\\\"disableFields\\\">\\n                            <input matInput placeholder=\\\"\\\" disabled/>\\n                          </mat-form-field>\\n\\n                          <button class=\\\"btn-default buttonStacked disableFields\\\" title=\\\"Add\\\" type=\\\"button\\\" disabled=\\\"true\\\">\\n                            <span class=\\\"btn transparent-circle mr-2 disableFields\\\" disabled><span></span></span>\\n                          </button>\\n                        </td>\\n\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"formSections pb-4 pt-4 paddingLeft30px\\\">\\n        <div class=\\\"row customeRow\\\">\\n          <div class=\\\"form-group col-md-4  col-lg-3\\\">\\n            <mat-form-field class=\\\"disableFields\\\">\\n              <input matInput placeholder=\\\"Website\\\" disabled/>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"form-group col-md-4  col-lg-3\\\">\\n            <mat-form-field class=\\\"disableFields\\\">\\n              <input matInput placeholder=\\\"Email (Reservation)\\\" disabled/>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"form-group col-md-4  col-lg-3\\\">\\n            <mat-form-field class=\\\"disableFields\\\">\\n              <input matInput placeholder=\\\"Telephone (Reservation)\\\" disabled/>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"formSections pb-1 pt-5\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"float-left checkBoxDiv\\\">\\n              <mat-checkbox *ngIf=\\\"paymentStatus[0]['isConfigurable']\\\"  class=\\\"matCheckBox\\\" formControlName=\\\"paymentdetails\\\"></mat-checkbox>\\n            </div>\\n            <div class=\\\"float-left marginLeft10 widthCalculate30\\\">\\n              <h2>Payment Details</h2>\\n              <label for=\\\"paymentMethod\\\" class=\\\"d-block semiBold mb-3 mt-4 pt-2\\\">Payment Method</label>\\n              <div class=\\\"row alignItemCenter pb-4 customeRow\\\">\\n                  <div class=\\\"col-md-4  col-lg-4\\\">\\n\\n                      <!-- <div class=\\\"col-md-5\\\">\\n                        <mat-radio-group  disabled=\\\"true\\\">\\n                          <mat-radio-button checked=\\\"false\\\" disabled=\\\"true\\\">Credit</mat-radio-button>\\n                        </mat-radio-group>\\n                      </div> -->\\n                      <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-5\\\">\\n                        <mat-radio-group class=\\\"disableFields\\\">\\n                          <mat-radio-button value=\\\"1\\\" disabled=\\\"true\\\">15 Days after Check-out</mat-radio-button>\\n                        </mat-radio-group>\\n                      </div>\\n                      <div class=\\\"col-md-5\\\">\\n                        <mat-radio-group class=\\\"disableFields\\\">\\n                          <mat-radio-button value=\\\"2\\\" disabled=\\\"true\\\">30 Days after Check-out</mat-radio-button>\\n                        </mat-radio-group>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group col-md-4  col-lg-4\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <mat-select disabled=\\\"true\\\" placeholder=\\\"Currency\\\"  name=\\\"currency\\\" required>\\n                        <mat-option  disabled=\\\"true\\\">Select</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-4  col-lg-4\\\">\\n                    <label class=\\\"d-block mb-4\\\" for=\\\"rateType\\\">Rate Type</label>\\n                    <div class=\\\"row customeRow\\\">\\n                        <div class=\\\"col-md-4\\\">\\n                          <mat-radio-group  class=\\\"disableFields\\\">\\n                            <mat-radio-button value=\\\"1\\\"  disabled=\\\"true\\\">Net</mat-radio-button>\\n                          </mat-radio-group>\\n                        </div>\\n                        <div class=\\\"col-md-4\\\">\\n                          <mat-radio-group class=\\\"disableFields\\\">\\n                            <mat-radio-button value=\\\"2\\\"  disabled=\\\"true\\\">Other</mat-radio-button>\\n                          </mat-radio-group>\\n                        </div>\\n                    </div>\\n                  </div>\\n\\n                </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"formSections pt-5 paddingRight15px\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"float-left checkBoxDiv\\\">\\n              <mat-checkbox *ngIf=\\\"extranetStatus[0]['isConfigurable']\\\"  class=\\\"matCheckBox\\\" formControlName=\\\"extranetdetails\\\"></mat-checkbox>\\n            </div>\\n            <div class=\\\"float-left marginLeft10 widthCalculate30\\\">\\n              <h2>Extranet Details</h2>\\n              <div class=\\\"row mt-4 pt-2 pb-2\\\">\\n                  <div class=\\\"form-group col-md-4  col-lg-4  mb-0\\\">\\n                    <p>Extranet Account Access</p>\\n                    <mat-button-toggle-group class=\\\"disableFields disabledToggleBtn\\\" >\\n                      <mat-button-toggle [value]=\\\"true\\\" disabled=\\\"true\\\">\\n                        Yes\\n                      </mat-button-toggle>\\n                      <mat-button-toggle [value]=\\\"false\\\" disabled=\\\"true\\\">\\n                        No\\n                      </mat-button-toggle>\\n                    </mat-button-toggle-group>\\n                  </div>\\n                  <div class=\\\"form-group col-md-4  col-lg-4  mb-0 paddingLeft45\\\">\\n                    <p>Channel Manager Connectivity</p>\\n                    <mat-button-toggle-group class=\\\"disableFields disabledToggleBtn\\\" >\\n                      <mat-button-toggle [value]=\\\"true\\\" disabled=\\\"true\\\">\\n                        Yes\\n                      </mat-button-toggle>\\n                      <mat-button-toggle [value]=\\\"false\\\" disabled=\\\"true\\\">\\n                        No\\n                      </mat-button-toggle>\\n                    </mat-button-toggle-group>\\n                  </div>\\n                  <div class=\\\"form-group col-md-4 mb-0 paddingLeft45\\\">\\n                    <mat-form-field class=\\\"mt-4 disableFields\\\">\\n                      <mat-select placeholder=\\\"Channel Manager\\\" required disabled=\\\"true\\\">\\n                        <mat-option></mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"pt-5 pb-4 paddingRight15px\\\">\\n        <div class=\\\"row\\\">\\n         <div class=\\\"col-md-12\\\">\\n            <div class=\\\"float-left checkBoxDiv\\\">\\n                <mat-checkbox *ngIf=\\\"taxesStatus[0]['isConfigurable']\\\"  class=\\\"matCheckBox\\\" formControlName=\\\"taxes\\\"></mat-checkbox>\\n            </div>\\n            <div class=\\\"float-left marginLeft10 widthCalculate30\\\">\\n              <h2>\\n                Taxes\\n              <!-- <h2>\\n                <label>Taxes</label>\\n              </h2> -->\\n              </h2>\\n              <p>\\n                Rates will be considered all INCLUSIVE unless the below section is completed\\n              </p>\\n              <table class=\\\"table genericTable mb-4\\\">\\n                <thead>\\n                  <tr>\\n                    <th class=\\\"taxtesTypeTh\\\">Type</th>\\n                    <th class=\\\"taxtesRoomTh\\\">Per Room/Person</th>\\n                    <th class=\\\"taxtesAmountTh\\\">Amount</th>\\n                    <th class=\\\"taxtesRatesTh\\\">Included in Rates</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td class=\\\"typeLabel taxesLabel\\\">\\n                      <label>VAT</label>\\n                    </td>\\n                    <td class=\\\"taxesLabel\\\">\\n                      <mat-form-field  class=\\\"disableFields\\\">\\n                        <mat-select [(ngModel)]=\\\"optionYes\\\" [ngModelOptions]=\\\"{standalone: true}\\\" disabled=\\\"true\\\">\\n                          <mat-option [value]=\\\"true\\\">Per Room</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                    </td>\\n                    <td class=\\\"taxesLabel taxesAmountLabel\\\">\\n                      <mat-form-field class=\\\"disableFields\\\">\\n                        <input matInput id=\\\"amount\\\" disabled/>\\n                        <span class=\\\"percentageIcon\\\">&nbsp;%</span>\\n                      </mat-form-field>\\n                    </td>\\n                    <td class=\\\"taxesLabel\\\">\\n                      <mat-form-field class=\\\"disableFields\\\">\\n                        <mat-select [(ngModel)]=\\\"optionYes\\\" [ngModelOptions]=\\\"{standalone: true}\\\"disabled=\\\"true\\\">\\n                          <mat-option [value]=\\\"true\\\" >Yes</mat-option>\\n\\n                        </mat-select>\\n                      </mat-form-field>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                      <td class=\\\"typeLabel taxesLabel\\\">\\n                        <label>Service Charges</label>\\n                      </td>\\n                      <td class=\\\"taxesLabel\\\">\\n                        <mat-form-field class=\\\"disableFields\\\">\\n                          <mat-select [(ngModel)]=\\\"optionYes\\\" [ngModelOptions]=\\\"{standalone: true}\\\" disabled=\\\"true\\\">\\n                            <mat-option [value]=\\\"true\\\">Per Room</mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                      </td>\\n                      <td class=\\\"taxesLabel taxesAmountLabel\\\">\\n                        <mat-form-field class=\\\"disableFields\\\">\\n                          <input matInput id=\\\"amount\\\" disabled/>\\n                          <span class=\\\"percentageIcon\\\">&nbsp;%</span>\\n                        </mat-form-field>\\n                      </td>\\n                      <td class=\\\"taxesLabel\\\">\\n                        <mat-form-field class=\\\"disableFields\\\">\\n                          <mat-select [(ngModel)]=\\\"optionYes\\\" [ngModelOptions]=\\\"{standalone: true}\\\" disabled=\\\"true\\\">\\n                            <mat-option [value]=\\\"true\\\" >Yes</mat-option>\\n\\n                          </mat-select>\\n                        </mat-form-field>\\n                      </td>\\n                    </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n        <input matInput placeholder=\\\"templateName\\\" formControlName=\\\"templateName\\\" style=\\\"    visibility: hidden\\\"/>\\n\\n      <div class=\\\"controlButtons mb-4 borderTopDark pt-5\\\">\\n        <button title=\\\"Save\\\" type=\\\"submit\\\" class=\\\"genericButton activeButton mat-primary mat-raised-button\\\"  [disabled]=\\\"!hotelInfoForm.valid\\\" (click)=\\\"saveHotelInfo()\\\">Save</button>\\n        <button title=\\\"Cancel\\\" type=\\\"button\\\" class=\\\"genericButton defaultButton mat-raised-button\\\" mat-raised-button (click)=\\\"backToList()\\\">Cancel</button>\\n        <button title=\\\"Continue\\\" class=\\\"genericButton activeButton mat-primary mat-raised-button float-right\\\"  [disabled]=\\\"!hotelInfoForm.valid\\\" type=\\\"submit\\\" (click)=\\\"saveandContinue()\\\">Save & Continue</button>\\n      </div>\\n\\n  </div>\\n  <!-- </mat-tab>\\n<mat-tab label=\\\"Facilities and Services\\\">Content 2</mat-tab>\\n</mat-tab-group> -->\\n\\n</div>\\n</form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/hotel-info/hotel-details/hotel-details.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/hotel-info/hotel-details/hotel-details.component.html\n// module chunks = templates.module","import { Component, OnInit } from '@angular/core';\nimport { EXTRANETCONSTANTS } from '../../../../common/constants';\nimport {\n  HotelInfoViewModel,\n  TemplateHotelInfoViewModel,\n  TemplateViewModel\n} from '../../../../viewmodel/templates/hotel-info/hotelinfoviewmodel';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { TemplateNameDataService } from '../../../../common/extranet-shared/services/templates/template-name-data.service';\nimport { TemplatesDataService } from '../../../../common/extranet-shared/services/templates/templates-data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ObjectState, EntityState } from '../../../../../common/enums';\nimport { CONSTANTS } from '../../../../../common/constants';\nimport { TemplateUrlNotificationService } from '../../../../common/extranet-shared/services/templates/template-url-notification.service';\nimport { MatSnackBar } from '@angular/material';\n\nconst hotelinfo = EXTRANETCONSTANTS.templates.hotelinfo;\nconst read = CONSTANTS.operation.read;\nconst edit = CONSTANTS.operation.edit;\nconst create = CONSTANTS.operation.create;\n\n@Component({\n  selector: 'app-hotel-details',\n  templateUrl: './hotel-details.component.html',\n  styleUrls: ['./hotel-details.component.css']\n})\nexport class HotelDetailsComponent implements OnInit {\n  isRead: boolean;\n  operation: string;\n  templateId: string;\n  templateName: string;\n  isName = true;\n  name = hotelinfo.name;\n  chain = hotelinfo.chain;\n  brand = hotelinfo.brand;\n  type = hotelinfo.type;\n  address1 = hotelinfo.address1;\n  address2 = hotelinfo.address2;\n  country = hotelinfo.country;\n  city = hotelinfo.city;\n  zip = hotelinfo.zip;\n  latlong = hotelinfo.latlong;\n  starrating = hotelinfo.starrating;\n  mgpoints = hotelinfo.mgpoints;\n  shortdescription = hotelinfo.shortdescription;\n  longdescription = hotelinfo.longdescription;\n  contactdetails = hotelinfo.contactdetails;\n  paymentdetails = hotelinfo.paymentdetails;\n  extranetdetails = hotelinfo.extranetdetails;\n  taxes = hotelinfo.taxes;\n  checkincheckout = hotelinfo.checkincheckout;\n  totalNumberOfRooms = hotelinfo.totalNumberOfRooms;\n  optionYes = true;\n  hotelnameStatus: HotelInfoViewModel[];\n  chainStatus: HotelInfoViewModel[];\n  brandStatus: HotelInfoViewModel[];\n  typeStatus: HotelInfoViewModel[];\n  add1Status: HotelInfoViewModel[];\n  add2Status: HotelInfoViewModel[];\n  countryStatus: HotelInfoViewModel[];\n  cityStatus: HotelInfoViewModel[];\n  zipStatus: HotelInfoViewModel[];\n  latlongStatus: HotelInfoViewModel[];\n  starratingStatus: HotelInfoViewModel[];\n  mgpointsStatus: HotelInfoViewModel[];\n  shortdescriptionStatus: HotelInfoViewModel[];\n  longdescriptionStatus: HotelInfoViewModel[];\n  contactStatus: HotelInfoViewModel[];\n  paymentStatus: HotelInfoViewModel[];\n  extranetStatus: HotelInfoViewModel[];\n  taxesStatus: HotelInfoViewModel[];\n  checkincheckoutStatus: HotelInfoViewModel[];\n  totalNumberOfRoomsStatus: HotelInfoViewModel[];\n\n  formFieldList: HotelInfoViewModel[];\n  initialFormFieldList: HotelInfoViewModel[];\n  hotelInfoForm: FormGroup;\n\n  templateHotelInfoViewModel: TemplateHotelInfoViewModel;\n  constructor(\n    private router: Router,\n    public snackBar: MatSnackBar,\n    public templateNameDataService: TemplateNameDataService,\n    private templateDataService: TemplatesDataService,\n    private activatedRoute: ActivatedRoute,\n    private templateUrlNotificationService: TemplateUrlNotificationService\n  ) {\n      templateUrlNotificationService.changeURLRoute(activatedRoute.snapshot.url[0].path);\n  }\n\n  ngOnInit() {\n    this.isRead = true;\n    window.scrollTo(0, 0);\n    this.operation = this.activatedRoute.parent.snapshot.params['operation'];\n    this.templateId = this.activatedRoute.parent.snapshot.params['id'];\n\n    this.getHotelFieldsList();\n    this.formFieldList = this.templateHotelInfoViewModel.hotelFields;\n    this.getFieldStatus();\n    this.hotelInfoForm = new FormGroup({\n      hotelName: new FormControl(this.hotelnameStatus[0]['isSelected']),\n      chain: new FormControl(this.chainStatus[0]['isSelected']),\n      brand: new FormControl({value: this.brandStatus[0]['isSelected'], disabled: true}),\n      type: new FormControl(this.typeStatus[0]['isSelected']),\n      totalNumberOfRooms: new FormControl(this.totalNumberOfRoomsStatus[0]['isSelected']),\n      address1: new FormControl(this.add1Status[0]['isSelected']),\n      address2: new FormControl(this.add2Status[0]['isSelected']),\n      country: new FormControl(this.countryStatus[0]['isSelected']),\n      city: new FormControl(this.cityStatus[0]['isSelected']),\n      zip: new FormControl(this.zipStatus[0]['isSelected']),\n      latlong: new FormControl(this.latlongStatus[0]['isSelected']),\n      starrating: new FormControl(this.starratingStatus[0]['isSelected']),\n      mgpoints: new FormControl(this.mgpointsStatus[0]['isSelected']),\n      shortdescription: new FormControl(\n        this.shortdescriptionStatus[0]['isSelected']\n      ),\n      longdescription: new FormControl(\n        this.longdescriptionStatus[0]['isSelected']\n      ),\n      contactdetails: new FormControl(this.contactStatus[0]['isSelected']),\n      paymentdetails: new FormControl(this.paymentStatus[0]['isSelected']),\n      extranetdetails: new FormControl(this.extranetStatus[0]['isSelected']),\n      taxes: new FormControl(this.taxesStatus[0]['isSelected']),\n      checkincheckout: new FormControl(\n        this.checkincheckoutStatus[0]['isSelected']\n      ),\n      templateName: new FormControl('', Validators.required)\n    });\n    this.templateNameDataService.templateName.subscribe(templateNameEntered => {\n      if (templateNameEntered !== undefined && templateNameEntered !== null) {\n        this.templateName = templateNameEntered.trim();\n      }\n      // console.log('this.templateName-' + this.templateName);\n      this.hotelInfoForm.controls['templateName'].setValue(this.templateName);\n    });\n\n  }\n\n  private getHotelFieldsList() {\n    // tslint:disable-next-line:max-line-length\n    if ( this.activatedRoute.snapshot.data['hotelFieldData'] !== undefined && this.activatedRoute.snapshot.data['hotelFieldData'] !== null) {\n     this.templateHotelInfoViewModel = this.activatedRoute.snapshot.data['hotelFieldData'];\n    // // console.log('Template Hotel Info data - ' +  JSON.stringify(this.templateHotelInfoViewModel ));\n    this.getTemplateName(this.templateHotelInfoViewModel.name);\n    }\n  }\n\n  getTemplateName(tempName: string) {\n    this.templateNameDataService.changeTemplateName(tempName);\n  }\n\n  onChainChange(event) {\n    if (event.checked) {\n      this.hotelInfoForm.controls['brand'].setValue(true);\n    } else {\n      this.hotelInfoForm.controls['brand'].setValue(false);\n    }\n  }\n\n  getFieldStatus() {\n    this.hotelnameStatus = this.formFieldList.filter(\n      arr => arr.code === this.name\n    );\n    this.chainStatus = this.formFieldList.filter(\n      arr => arr.code === this.chain\n    );\n    this.brandStatus = this.formFieldList.filter(\n      arr => arr.code === this.brand\n    );\n    this.typeStatus = this.formFieldList.filter(arr => arr.code === this.type);\n    this.totalNumberOfRoomsStatus = this.formFieldList.filter(arr => arr.code === this.totalNumberOfRooms);\n    this.add1Status = this.formFieldList.filter(\n      arr => arr.code === this.address1\n    );\n    this.add2Status = this.formFieldList.filter(\n      arr => arr.code === this.address2\n    );\n    this.countryStatus = this.formFieldList.filter(\n      arr => arr.code === this.country\n    );\n    this.cityStatus = this.formFieldList.filter(arr => arr.code === this.city);\n    this.zipStatus = this.formFieldList.filter(arr => arr.code === this.zip);\n    this.latlongStatus = this.formFieldList.filter(\n      arr => arr.code === this.latlong\n    );\n    this.starratingStatus = this.formFieldList.filter(\n      arr => arr.code === this.starrating\n    );\n    this.mgpointsStatus = this.formFieldList.filter(\n      arr => arr.code === this.mgpoints\n    );\n    this.shortdescriptionStatus = this.formFieldList.filter(\n      arr => arr.code === this.shortdescription\n    );\n    this.longdescriptionStatus = this.formFieldList.filter(\n      arr => arr.code === this.longdescription\n    );\n    this.contactStatus = this.formFieldList.filter(\n      arr => arr.code === this.contactdetails\n    );\n    this.paymentStatus = this.formFieldList.filter(\n      arr => arr.code === this.paymentdetails\n    );\n    this.extranetStatus = this.formFieldList.filter(\n      arr => arr.code === this.extranetdetails\n    );\n    this.taxesStatus = this.formFieldList.filter(\n      arr => arr.code === this.taxes\n    );\n    this.checkincheckoutStatus = this.formFieldList.filter(\n      arr => arr.code === this.checkincheckout\n    );\n    // this.checkincheckoutStatus[0].objectState = ObjectState.Added;\n  }\n\n  public saveHotelInfo() {\n    if (this.hotelInfoForm.valid) {\n        this.createSavingData(this.operation.toLowerCase().trim());\n    // // console.log('Template Hotel Info data for saving - ' +  JSON.stringify(this.templateHotelInfoViewModel ));\n      this.templateDataService.saveTemplateHotelFields(this.templateHotelInfoViewModel).subscribe(\n        (response) => {\n          this.router.navigate(['/templatemgmt/templates']);\n          this.snackBar.open('Hotel Info Template Saved Successfully', '',\n          { duration: CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n          window.scrollTo(0, 0);\n        }\n      );\n    }\n  }\n\n  public saveandContinue() {\n    if (this.hotelInfoForm.valid) {\n        this.createSavingData(this.operation.toLowerCase().trim());\n      this.templateDataService.saveTemplateHotelFields(this.templateHotelInfoViewModel).subscribe(\n        (response) => {\n          this.router.navigate(['/templatemgmt/redirect', response.result]);\n          this.snackBar.open('Hotel Info Template Saved Successfully', '', { duration: CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n          window.scrollTo(0, 0);\n        }\n      );\n    }\n  }\n\n  createSavingData(operation: string) {\n    let arrayHotelFields: HotelInfoViewModel[];\n    arrayHotelFields = [];\n\n    if (operation === create) {\n      this.hotelnameStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n        'hotelName'\n      ].value;\n      this.hotelnameStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.hotelnameStatus[0]);\n      this.chainStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n        'chain'\n      ].value;\n      this.chainStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.chainStatus[0]);\n      this.brandStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n        'brand'\n      ].value;\n      this.brandStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.brandStatus[0]);\n      this.typeStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n        'type'\n      ].value;\n      this.typeStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.typeStatus[0]);\n      this.totalNumberOfRoomsStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n        'totalNumberOfRooms'\n      ].value;\n      this.totalNumberOfRoomsStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.totalNumberOfRoomsStatus[0]);\n      this.add1Status[0]['isSelected'] = this.hotelInfoForm.controls[\n        'address1'\n      ].value;\n      this.add1Status[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.add1Status[0]);\n      this.add2Status[0]['isSelected'] = this.hotelInfoForm.controls[\n        'address2'\n      ].value;\n      this.add2Status[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.add2Status[0]);\n      this.countryStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n        'country'\n      ].value;\n      this.countryStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.countryStatus[0]);\n      this.cityStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n        'city'\n      ].value;\n      this.cityStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.cityStatus[0]);\n      this.zipStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n        'zip'\n      ].value;\n      this.zipStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.zipStatus[0]);\n      this.latlongStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n        'latlong'\n      ].value;\n      this.latlongStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.latlongStatus[0]);\n      this.starratingStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n        'starrating'\n      ].value;\n      this.starratingStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.starratingStatus[0]);\n      this.mgpointsStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n        'mgpoints'\n      ].value;\n      this.mgpointsStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.mgpointsStatus[0]);\n      this.shortdescriptionStatus[0][\n        'isSelected'\n      ] = this.hotelInfoForm.controls['shortdescription'].value;\n      this.shortdescriptionStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.shortdescriptionStatus[0]);\n      this.longdescriptionStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n        'longdescription'\n      ].value;\n      this.longdescriptionStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.longdescriptionStatus[0]);\n      this.contactStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n        'contactdetails'\n      ].value;\n      this.contactStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.contactStatus[0]);\n      this.paymentStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n        'paymentdetails'\n      ].value;\n      this.paymentStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.paymentStatus[0]);\n      this.extranetStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n        'extranetdetails'\n      ].value;\n      this.extranetStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.extranetStatus[0]);\n      this.taxesStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n        'taxes'\n      ].value;\n      this.taxesStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.taxesStatus[0]);\n      this.checkincheckoutStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n        'checkincheckout'\n      ].value;\n      this.checkincheckoutStatus[0]['objectState'] = ObjectState.Added;\n      arrayHotelFields.push(this.checkincheckoutStatus[0]);\n      this.templateHotelInfoViewModel.name = this.hotelInfoForm.controls[\n        'templateName'\n      ].value;\n      this.templateHotelInfoViewModel.objectState = ObjectState.Added;\n      this.templateDataService.newTemplateName = this.hotelInfoForm.controls[    'templateName'].value;\n    } else if (operation === edit) {\n      if (\n        this.hotelnameStatus[0]['isSelected'] !==\n        this.hotelInfoForm.controls['hotelName'].value\n      ) {\n        this.hotelnameStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n          'hotelName'\n        ].value;\n        if (this.hotelnameStatus[0]['status'] === EntityState.New) {\n          this.hotelnameStatus[0]['objectState'] = ObjectState.Added;\n        } else {\n          this.hotelnameStatus[0]['objectState'] = ObjectState.Modified;\n        }\n      } else {\n        this.hotelnameStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.hotelnameStatus[0]);\n      if (\n        this.totalNumberOfRoomsStatus[0]['isSelected'] !==\n        this.hotelInfoForm.controls['totalNumberOfRooms'].value\n      ) {\n        this.totalNumberOfRoomsStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n          'totalNumberOfRooms'\n        ].value;\n        if (this.totalNumberOfRoomsStatus[0]['status'] === EntityState.New) {\n          this.totalNumberOfRoomsStatus[0]['objectState'] = ObjectState.Added;\n        } else {\n          this.totalNumberOfRoomsStatus[0]['objectState'] = ObjectState.Modified;\n        }\n      } else {\n        this.totalNumberOfRoomsStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.totalNumberOfRoomsStatus[0]);\n      if (\n        this.chainStatus[0]['isSelected'] !==\n        this.hotelInfoForm.controls['chain'].value\n      ) {\n        this.chainStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n          'chain'\n        ].value;\n       if ( this.chainStatus[0]['status'] === EntityState.New) {\n        this.chainStatus[0]['objectState'] = ObjectState.Added; } else {\n      this.chainStatus[0]['objectState'] = ObjectState.Modified;\n    } } else {\n        this.chainStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.chainStatus[0]);\n      if (\n        this.brandStatus[0]['isSelected'] !==\n        this.hotelInfoForm.controls['brand'].value\n      ) {\n        this.brandStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n          'brand'\n        ].value;\n        if ( this.brandStatus[0]['status'] === EntityState.New) {\n        this.brandStatus[0]['objectState'] = ObjectState.Added; } else {\n          this.brandStatus[0]['objectState'] = ObjectState.Modified;\n        } }  else {\n        this.brandStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.brandStatus[0]);\n      if (\n        this.typeStatus[0]['isSelected'] !==\n        this.hotelInfoForm.controls['type'].value\n      ) {\n        this.typeStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n          'type'\n        ].value;\n        if ( this.typeStatus[0]['status'] === EntityState.New) {\n          this.typeStatus[0]['objectState'] = ObjectState.Added; } else {\n            this.typeStatus[0]['objectState'] = ObjectState.Modified;\n          } } else {\n        this.typeStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.typeStatus[0]);\n      if (\n        (this.add1Status[0]['isSelected'] !== this.hotelInfoForm.controls[\n          'address1'\n        ].value)\n      ) {\n        this.add1Status[0]['isSelected'] = this.hotelInfoForm.controls[\n          'address1'\n        ].value;\n        if ( this.add1Status[0]['status'] === EntityState.New) {\n          this.add1Status[0]['objectState'] = ObjectState.Added; } else {\n            this.add1Status[0]['objectState'] = ObjectState.Modified;\n          } } else {\n        this.add1Status[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.add1Status[0]);\n      if (\n        this.add2Status[0]['isSelected'] !==\n        this.hotelInfoForm.controls['address2'].value\n      ) {\n        this.add2Status[0]['isSelected'] = this.hotelInfoForm.controls[\n          'address2'\n        ].value;\n        if ( this.add2Status[0]['status'] === EntityState.New) {\n          this.add2Status[0]['objectState'] = ObjectState.Added; } else {\n            this.add2Status[0]['objectState'] = ObjectState.Modified;\n          } } else {\n        this.add2Status[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.add2Status[0]);\n      if (\n        this.countryStatus[0]['isSelected'] !==\n        this.hotelInfoForm.controls['country'].value\n      ) {\n        this.countryStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n          'country'\n        ].value;\n        if ( this.countryStatus[0]['status'] === EntityState.New) {\n          this.countryStatus[0]['objectState'] = ObjectState.Added; } else {\n            this.countryStatus[0]['objectState'] = ObjectState.Modified;\n          } } else {\n        this.countryStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.countryStatus[0]);\n      if (\n        this.cityStatus[0]['isSelected'] !==\n        this.hotelInfoForm.controls['city'].value\n      ) {\n        this.cityStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n          'city'\n        ].value;\n        if ( this.cityStatus[0]['status'] === EntityState.New) {\n          this.cityStatus[0]['objectState'] = ObjectState.Added; } else {\n            this.cityStatus[0]['objectState'] = ObjectState.Modified;\n          } } else {\n        this.cityStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.cityStatus[0]);\n      if (\n        this.zipStatus[0]['isSelected'] !==\n        this.hotelInfoForm.controls['zip'].value\n      ) {\n        this.zipStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n          'zip'\n        ].value;\n        if ( this.zipStatus[0]['status'] === EntityState.New) {\n          this.zipStatus[0]['objectState'] = ObjectState.Added; } else {\n            this.zipStatus[0]['objectState'] = ObjectState.Modified;\n          } } else {\n        this.zipStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.zipStatus[0]);\n      if (\n      this.latlongStatus[0]['isSelected'] !== this.hotelInfoForm.controls[\n        'latlong'].value) {\n          this.latlongStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n            'latlong'].value;\n            if ( this.latlongStatus[0]['status'] === EntityState.New) {\n              this.latlongStatus[0]['objectState'] = ObjectState.Added; } else {\n                this.latlongStatus[0]['objectState'] = ObjectState.Modified;\n              } } else {\n        this.latlongStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.latlongStatus[0]);\n\n      if (\n        this.starratingStatus[0]['isSelected'] !==\n        this.hotelInfoForm.controls['starrating'].value\n      ) {\n        this.starratingStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n          'starrating'\n        ].value;\n        if ( this.starratingStatus[0]['status'] === EntityState.New) {\n          this.starratingStatus[0]['objectState'] = ObjectState.Added; } else {\n            this.starratingStatus[0]['objectState'] = ObjectState.Modified;\n          } } else {\n        this.starratingStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.starratingStatus[0]);\n      if (\n        this.mgpointsStatus[0]['isSelected'] !==\n        this.hotelInfoForm.controls['mgpoints'].value\n      ) {\n        this.mgpointsStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n          'mgpoints'\n        ].value;\n        if ( this.mgpointsStatus[0]['status'] === EntityState.New) {\n          this.mgpointsStatus[0]['objectState'] = ObjectState.Added; } else {\n            this.mgpointsStatus[0]['objectState'] = ObjectState.Modified;\n          } } else {\n        this.mgpointsStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.mgpointsStatus[0]);\n      if (\n        this.shortdescriptionStatus[0]['isSelected'] !==\n        this.hotelInfoForm.controls['shortdescription'].value\n      ) {\n        this.shortdescriptionStatus[0][\n          'isSelected'\n        ] = this.hotelInfoForm.controls['shortdescription'].value;\n        if ( this.shortdescriptionStatus[0]['status'] === EntityState.New) {\n          this.shortdescriptionStatus[0]['objectState'] = ObjectState.Added; } else {\n            this.shortdescriptionStatus[0]['objectState'] = ObjectState.Modified;\n          } }  else {\n        this.shortdescriptionStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.shortdescriptionStatus[0]);\n      if (\n        this.longdescriptionStatus[0]['isSelected'] !==\n        this.hotelInfoForm.controls['longdescription'].value\n      ) {\n        this.longdescriptionStatus[0][\n          'isSelected'\n        ] = this.hotelInfoForm.controls['longdescription'].value;\n        if ( this.longdescriptionStatus[0]['status'] === EntityState.New) {\n          this.longdescriptionStatus[0]['objectState'] = ObjectState.Added; } else {\n            this.longdescriptionStatus[0]['objectState'] = ObjectState.Modified;\n          } } else {\n        this.longdescriptionStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.longdescriptionStatus[0]);\n      if (\n        this.contactStatus[0]['isSelected'] !==\n        this.hotelInfoForm.controls['contactdetails'].value\n      ) {\n        this.contactStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n          'contactdetails'\n        ].value;\n        if ( this.contactStatus[0]['status'] === EntityState.New) {\n          this.contactStatus[0]['objectState'] = ObjectState.Added; } else {\n            this.contactStatus[0]['objectState'] = ObjectState.Modified;\n          } } else {\n        this.contactStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.contactStatus[0]);\n      if (\n        this.paymentStatus[0]['isSelected'] !==\n        this.hotelInfoForm.controls['paymentdetails'].value\n      ) {\n        this.paymentStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n          'paymentdetails'\n        ].value;\n        if ( this.paymentStatus[0]['status'] === EntityState.New) {\n          this.paymentStatus[0]['objectState'] = ObjectState.Added; } else {\n            this.paymentStatus[0]['objectState'] = ObjectState.Modified;\n          } }  else {\n        this.paymentStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.paymentStatus[0]);\n      if (\n        this.extranetStatus[0]['isSelected'] !==\n        this.hotelInfoForm.controls['extranetdetails'].value\n      ) {\n        this.extranetStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n          'extranetdetails'\n        ].value;\n        if ( this.extranetStatus[0]['status'] === EntityState.New) {\n          this.extranetStatus[0]['objectState'] = ObjectState.Added; } else {\n            this.extranetStatus[0]['objectState'] = ObjectState.Modified;\n          } } else {\n        this.extranetStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.extranetStatus[0]);\n      if (\n        this.taxesStatus[0]['isSelected'] !==\n        this.hotelInfoForm.controls['taxes'].value\n      ) {\n        this.taxesStatus[0]['isSelected'] = this.hotelInfoForm.controls[\n          'taxes'\n        ].value;\n        if ( this.taxesStatus[0]['status'] === EntityState.New) {\n          this.taxesStatus[0]['objectState'] = ObjectState.Added; } else {\n            this.taxesStatus[0]['objectState'] = ObjectState.Modified;\n          } }  else {\n        this.taxesStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.taxesStatus[0]);\n      if (\n        this.checkincheckoutStatus[0]['isSelected'] !==\n        this.hotelInfoForm.controls['checkincheckout'].value\n      ) {\n        this.checkincheckoutStatus[0][\n          'isSelected'\n        ] = this.hotelInfoForm.controls['checkincheckout'].value;\n        if ( this.checkincheckoutStatus[0]['status'] === EntityState.New) {\n          this.checkincheckoutStatus[0]['objectState'] = ObjectState.Added; } else {\n            this.checkincheckoutStatus[0]['objectState'] = ObjectState.Modified;\n          } }else {\n        this.checkincheckoutStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayHotelFields.push(this.checkincheckoutStatus[0]);\n      if (\n        this.templateHotelInfoViewModel.name !==\n        this.hotelInfoForm.controls['templateName'].value\n      ) {\n        this.templateHotelInfoViewModel.name = this.hotelInfoForm.controls[\n          'templateName'\n        ].value;\n        this.templateHotelInfoViewModel.objectState = ObjectState.Modified;\n      } else {\n        this.templateHotelInfoViewModel.objectState = ObjectState.Unchanged;\n      }\n    }\n    this.templateHotelInfoViewModel.hotelFields = arrayHotelFields;\n  }\n\n  backToList() {\n    this.router.navigate(['/templatemgmt/templates']);\n }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/hotel-info/hotel-details/hotel-details.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".hotelsName {\\r\\n    vertical-align: middle;\\r\\n    padding: 0.55rem 2rem 0.55rem 0.8rem;\\r\\n    background: #fff;\\r\\n    color: #666;\\r\\n    border-radius: .25rem;\\r\\n    font-size: 0.875rem;\\r\\n    position: relative;\\r\\n    border: 1px solid #ebebeb;\\r\\n    margin:0 10px 10px 0;\\r\\n    display: inline-block;\\r\\n  \\r\\n  }\\r\\n  \\r\\n  .hotelsName:after {\\r\\n    content: 'X';\\r\\n    position: absolute;\\r\\n    top: 7.5px;\\r\\n    left: 162px;\\r\\n    font-size: 0.9375rem;\\r\\n  }\\r\\n  \\r\\n  .selectedRooms {\\r\\n    vertical-align: middle;\\r\\n    color: #333;\\r\\n    font-family: Proxima Nova Semibold;\\r\\n    font-size: 1rem;\\r\\n  }\\r\\n  \\r\\n  .checkBoxList {\\r\\n    padding: 20px;\\r\\n    border-bottom: 1px solid #ebebeb;\\r\\n  }\\r\\n  \\r\\n  .amenitiesType .checkBoxList:last-child {\\r\\n    border-bottom: none;\\r\\n  } \\r\\n\\r\\n.checkBoxList {\\r\\n    padding: 20px;\\r\\n    border-bottom: 1px solid #ebebeb;\\r\\n}\\r\\n\\r\\n.checklists .checkBoxList:last-child {\\r\\n    border-bottom: none;\\r\\n}\\r\\n\\r\\n.checkBoxList span {\\r\\n font-size: 18px;\\r\\n font-family: 'maven_proregular';\\r\\n}\\r\\n\\r\\n.iconHeading mat-checkbox {\\r\\n    top: -4px;\\r\\n} \", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/amenities/amenities.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/rate/amenities/amenities.component.css\n// module chunks = templates.module","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"mt-5\\\">\\n    <h1 class=\\\"mainHeading mb-4\\\">Room Amenities</h1>\\n    <div class=\\\"row pt-1\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"globalSearch\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Search by Amenities Name, Category etc.\\\" type=\\\"text\\\" disabled>\\n          <button class=\\\"searchButton\\\" type=\\\"submit\\\">\\n          <i aria-hidden=\\\"true\\\" class=\\\"fa fa-search\\\"></i>\\n        </button>\\n        </div>\\n      </div>\\n    </div>\\n    <h5 class=\\\"h5 semiboldText mt-5\\\">Please select amenities that applies</h5>\\n    <form [formGroup]=\\\"amenitiesForm\\\">\\n      <div formArrayName=\\\"amenitiesGroupArray\\\" *ngFor=\\\"let amenityGroup of amenitiesGroupArray.controls; let i=index\\\">\\n\\n        <!-- General -->\\n        <div class=\\\"formSections pb-0 pt-4 borderBottomNone\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(amenitiesGroupArray.controls[i].get('code').value) === '201'\\\">\\n          <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n\\n            <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n              <mat-panel-title>\\n                <div class=\\\"row iconHeading\\\">\\n                  <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                    <img alt=\\\"\\\" src=\\\"assets/AmenitiesIcon/generalIcon.png\\\">\\n                  </div>\\n                  <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                      <div class=\\\"inlineColumn elementSelection\\\">\\n                          <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(amenitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                      </div>\\n                      <div class=\\\"inlineColumn\\\">\\n                          <h2 class=\\\"checkAll\\\">\\n                              {{amenitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                            </h2>\\n                      </div>\\n                    </div>\\n                </div>\\n              </mat-panel-title>\\n            </mat-expansion-panel-header>\\n\\n            <div class=\\\"row\\\" formArrayName=\\\"roomFacilityTypes\\\" *ngFor=\\\"let amenityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n              <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\n\\n                <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" *ngIf=\\\"(amenityType.get('facilityTypeName').value) != null\\\">\\n                  {{(amenityType.get('facilityTypeName').value)}}\\n                </h5>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-12 checkBoxList border-bottom-0\\\">\\n                    <div class=\\\"form-group borderTopNone p-0 border-bottom-0 mb-0\\\">\\n                      <span class=\\\"paddingLeft30px\\\">All</span>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row checklists borderTopNone p-0\\\">\\n                  <div class=\\\"col-md-12 checkBoxList\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let amenity of getAmenityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                    <div class=\\\"form-group mb-0\\\" [formGroupName]=\\\"k\\\">\\n                        <span class=\\\"paddingLeft30px\\\">\\n                          {{amenity.get(\\\"name\\\").value}}\\n                        </span>\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n              </div>\\n            </div>\\n            \\n          </mat-expansion-panel>\\n        </div>\\n        <!-- General -->\\n\\n        <!-- Bathroom -->\\n        <div class=\\\"formSections pb-0 pt-4 borderBottomNone\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(amenitiesGroupArray.controls[i].get('code').value) === '202'\\\">\\n          <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n\\n            <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n              <mat-panel-title>\\n                <div class=\\\"row iconHeading\\\">\\n                  <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                    <img alt=\\\"\\\" src=\\\"assets/AmenitiesIcon/bathroomIcon.png\\\">\\n                  </div>\\n                  <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                    <div class=\\\"inlineColumn elementSelection\\\">\\n                      <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(amenitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                    </div>\\n                    <div class=\\\"inlineColumn\\\">\\n                      <h2 class=\\\"checkAll\\\">\\n                        {{amenitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                      </h2>\\n                    </div>\\n                  </div>\\n                </div>\\n              </mat-panel-title>\\n            </mat-expansion-panel-header>\\n\\n            <div class=\\\"row\\\" formArrayName=\\\"roomFacilityTypes\\\" *ngFor=\\\"let amenityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n              <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\n\\n                <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" *ngIf=\\\"(amenityType.get('facilityTypeName').value) != null\\\">\\n                  {{(amenityType.get('facilityTypeName').value)}}\\n                </h5>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-12 checkBoxList border-bottom-0\\\">\\n                    <div class=\\\"form-group borderTopNone p-0 border-bottom-0 mb-0\\\">\\n                      <span class=\\\"paddingLeft30px\\\">All</span>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row checklists borderTopNone p-0\\\">\\n                  <div class=\\\"col-md-12 checkBoxList\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let amenity of getAmenityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                    <div class=\\\"form-group mb-0\\\" [formGroupName]=\\\"k\\\">\\n                        <span class=\\\"paddingLeft30px\\\">\\n                          {{amenity.get(\\\"name\\\").value}}\\n                        </span> \\n                    </div>\\n                  </div>\\n                </div>\\n                \\n              </div>\\n            </div>\\n            \\n          </mat-expansion-panel>\\n        </div>\\n        <!-- Bathroom -->\\n\\n        <!-- Media And Technology -->\\n        <div class=\\\"formSections pb-0 pt-4 borderBottomNone\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(amenitiesGroupArray.controls[i].get('code').value) === '203'\\\">\\n          <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n\\n            <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n              <mat-panel-title>\\n                <div class=\\\"row iconHeading\\\">\\n                  <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                    <img alt=\\\"\\\" src=\\\"assets/AmenitiesIcon/mediaIcon.png\\\">\\n                  </div>\\n                  <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                    <div class=\\\"inlineColumn elementSelection\\\">\\n                      <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(amenitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\">\\n                      </mat-checkbox>\\n                    </div>\\n                    <div class=\\\"inlineColumn\\\">\\n                      <h2 class=\\\"checkAll\\\">\\n                        {{amenitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                      </h2>\\n                    </div>\\n                  </div>\\n                </div>\\n              </mat-panel-title>\\n            </mat-expansion-panel-header>\\n\\n            <div class=\\\"row\\\" formArrayName=\\\"roomFacilityTypes\\\" *ngFor=\\\"let amenityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n              <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\n\\n                <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" *ngIf=\\\"(amenityType.get('facilityTypeName').value) != null\\\">\\n                  {{(amenityType.get('facilityTypeName').value)}}\\n                </h5>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-12 checkBoxList border-bottom-0\\\">\\n                    <div class=\\\"form-group borderTopNone p-0 border-bottom-0 mb-0\\\">                    \\n                      <span class=\\\"paddingLeft30px\\\">All</span>                    \\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row checklists borderTopNone p-0\\\">\\n                  <div class=\\\"col-md-12 checkBoxList\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let amenity of getAmenityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                    <div class=\\\"form-group mb-0\\\" [formGroupName]=\\\"k\\\">                      \\n                        <span class=\\\"paddingLeft30px\\\">\\n                          {{amenity.get(\\\"name\\\").value}}\\n                        </span>                     \\n                    </div>\\n                  </div>\\n                </div>\\n                \\n              </div>\\n            </div>\\n            \\n          </mat-expansion-panel>\\n        </div>\\n        <!-- Media And Technology -->\\n\\n        <!-- Food & Drink -->\\n        <div class=\\\"formSections pb-0 pt-4 borderBottomNone\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(amenitiesGroupArray.controls[i].get('code').value) === '204'\\\">\\n          <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n\\n            <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n              <mat-panel-title>\\n                <div class=\\\"row iconHeading\\\">\\n                  <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                    <img alt=\\\"\\\" src=\\\"assets/AmenitiesIcon/foodIcon.png\\\">\\n                  </div>\\n                  <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                    <div class=\\\"inlineColumn elementSelection\\\">\\n                      <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(amenitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                    </div>\\n                    <div class=\\\"inlineColumn\\\">\\n                      <h2 class=\\\"checkAll\\\">\\n                        {{amenitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                      </h2>\\n                    </div>\\n                  </div>\\n                </div>\\n              </mat-panel-title>\\n            </mat-expansion-panel-header>\\n\\n            <div class=\\\"row\\\" formArrayName=\\\"roomFacilityTypes\\\" *ngFor=\\\"let amenityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n              <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\n\\n                <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" *ngIf=\\\"(amenityType.get('facilityTypeName').value) != null\\\">\\n                  {{(amenityType.get('facilityTypeName').value)}}\\n                </h5>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-12 checkBoxList border-bottom-0\\\">\\n                    <div class=\\\"form-group borderTopNone p-0 border-bottom-0 mb-0\\\">\\n                        <span class=\\\"paddingLeft30px\\\">All</span> \\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row checklists borderTopNone p-0\\\">\\n                  <div class=\\\"col-md-12 checkBoxList\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let amenity of getAmenityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                    <div class=\\\"form-group mb-0\\\" [formGroupName]=\\\"k\\\">                     \\n                        <span class=\\\"paddingLeft30px\\\">\\n                          {{amenity.get(\\\"name\\\").value}}\\n                        </span>\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n              </div>\\n            </div>\\n            \\n          </mat-expansion-panel>\\n        </div>\\n        <!-- Food & Drink -->\\n\\n        <!-- Services & Extras -->\\n        <div class=\\\"formSections pb-0 pt-4 borderBottomNone\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(amenitiesGroupArray.controls[i].get('code').value) === '205'\\\">\\n          <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n\\n            <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n              <mat-panel-title>\\n                <div class=\\\"row iconHeading\\\">\\n                  <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                    <img alt=\\\"\\\" src=\\\"assets/AmenitiesIcon/servicesIcon.png\\\">\\n                  </div>\\n                  <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                    <div class=\\\"inlineColumn elementSelection\\\">\\n                      <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(amenitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                    </div>\\n                    <div class=\\\"inlineColumn\\\">\\n                      <h2 class=\\\"checkAll\\\">\\n                        {{amenitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                      </h2>\\n                    </div>\\n                  </div>\\n                </div>\\n              </mat-panel-title>\\n            </mat-expansion-panel-header>\\n\\n            <div class=\\\"row\\\" formArrayName=\\\"roomFacilityTypes\\\" *ngFor=\\\"let amenityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n              <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\n\\n                <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" *ngIf=\\\"(amenityType.get('facilityTypeName').value) != null\\\">\\n                  {{(amenityType.get('facilityTypeName').value)}}\\n                </h5>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-12 checkBoxList border-bottom-0\\\">\\n                    <div class=\\\"form-group borderTopNone p-0 border-bottom-0 mb-0\\\">\\n                        <span class=\\\"paddingLeft30px\\\">All</span> \\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row checklists borderTopNone p-0\\\">\\n                  <div class=\\\"col-md-12 checkBoxList\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let amenity of getAmenityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                    <div class=\\\"form-group mb-0\\\" [formGroupName]=\\\"k\\\">\\n                        <span class=\\\"paddingLeft30px\\\">\\n                          {{amenity.get(\\\"name\\\").value}}\\n                        </span>\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n              </div>\\n            </div>\\n            \\n          </mat-expansion-panel>\\n        </div>\\n        <!-- Services & Extras -->\\n\\n        <!-- Outdoor & View -->\\n        <div class=\\\"formSections pb-0 pt-4 borderBottomNone\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(amenitiesGroupArray.controls[i].get('code').value) === '206'\\\">\\n          <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n\\n            <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n              <mat-panel-title>\\n                <div class=\\\"row iconHeading\\\">\\n                  <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                    <img alt=\\\"\\\" src=\\\"assets/AmenitiesIcon/outdoorIcon.png\\\">\\n                  </div>\\n                  <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                    <div class=\\\"inlineColumn elementSelection\\\">\\n                      <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(amenitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                    </div>\\n                    <div class=\\\"inlineColumn\\\">\\n                      <h2 class=\\\"checkAll\\\">\\n                        {{amenitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                      </h2>\\n                    </div>\\n                  </div>\\n                </div>\\n              </mat-panel-title>\\n            </mat-expansion-panel-header>\\n\\n            <div class=\\\"row\\\" formArrayName=\\\"roomFacilityTypes\\\" *ngFor=\\\"let amenityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n              <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\n\\n                <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" *ngIf=\\\"(amenityType.get('facilityTypeName').value) != null\\\">\\n                  {{(amenityType.get('facilityTypeName').value)}}\\n                </h5>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-12 checkBoxList border-bottom-0\\\">\\n                    <div class=\\\"form-group borderTopNone p-0 border-bottom-0 mb-0\\\">\\n                        <span class=\\\"paddingLeft30px\\\">All</span>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row checklists borderTopNone p-0\\\">\\n                  <div class=\\\"col-md-12 checkBoxList\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let amenity of getAmenityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                    <div class=\\\"form-group mb-0\\\" [formGroupName]=\\\"k\\\">\\n                        <span class=\\\"paddingLeft30px\\\">\\n                          {{amenity.get(\\\"name\\\").value}}\\n                        </span> \\n                    </div>\\n                  </div>\\n                </div>\\n                \\n              </div>\\n            </div>\\n            \\n          </mat-expansion-panel>\\n        </div>\\n        <!-- Outdoor & View -->\\n\\n        <!-- Accessibility -->\\n        <div class=\\\"formSections pb-0 pt-4 borderBottomNone\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(amenitiesGroupArray.controls[i].get('code').value) === '207'\\\">\\n          <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n\\n            <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n              <mat-panel-title>\\n                <div class=\\\"row iconHeading\\\">\\n                  <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                    <img alt=\\\"\\\" src=\\\"assets/AmenitiesIcon/accessibilityIcon.png\\\">\\n                  </div>\\n                  <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                    <div class=\\\"inlineColumn elementSelection\\\">\\n                      <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(amenitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                    </div>\\n                    <div class=\\\"inlineColumn\\\">\\n                      <h2 class=\\\"checkAll\\\" >\\n                        {{amenitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                      </h2>\\n                    </div>\\n                  </div>\\n                </div>\\n              </mat-panel-title>\\n            </mat-expansion-panel-header>\\n\\n            <div class=\\\"row\\\" formArrayName=\\\"roomFacilityTypes\\\" *ngFor=\\\"let amenityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n              <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\n\\n                <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" *ngIf=\\\"(amenityType.get('facilityTypeName').value) != null\\\">\\n                  {{(amenityType.get('facilityTypeName').value)}}\\n                </h5>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-12 checkBoxList border-bottom-0\\\">\\n                    <div class=\\\"form-group borderTopNone p-0 border-bottom-0 mb-0\\\">\\n                        <span class=\\\"paddingLeft30px\\\">All</span>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row checklists borderTopNone p-0\\\">\\n                  <div class=\\\"col-md-12 checkBoxList\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let amenity of getAmenityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                    <div class=\\\"form-group mb-0\\\" [formGroupName]=\\\"k\\\">\\n                        <span class=\\\"paddingLeft30px\\\">\\n                          {{amenity.get(\\\"name\\\").value}}\\n                        </span>\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n              </div>\\n            </div>\\n            \\n          </mat-expansion-panel>\\n        </div>\\n        <!-- Accessibility -->\\n\\n        <!-- Entertainment & Family Services -->\\n        <div class=\\\"formSections pb-0 pt-4 borderBottomNone\\\" [formGroupName]=\\\"i\\\" *ngIf=\\\"(amenitiesGroupArray.controls[i].get('code').value) === '208'\\\">\\n          <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true' disabled>\\n\\n            <mat-expansion-panel-header class=\\\"panelHeader\\\">\\n              <mat-panel-title>\\n                <div class=\\\"row iconHeading\\\">\\n                  <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\n                    <img alt=\\\"\\\" src=\\\"assets/AmenitiesIcon/entertainmentIcon.png\\\">\\n                  </div>\\n                  <div class=\\\"col-md-11 pl-2 inlineGroup\\\">\\n                      <div class=\\\"inlineColumn elementSelection\\\">\\n                          <mat-checkbox class=\\\"checkAll\\\" formControlName=\\\"isSelected\\\" *ngIf=\\\"(amenitiesGroupArray.controls[i].get('isConfigurable').value) === true\\\"></mat-checkbox>\\n                      </div>\\n                      <div class=\\\"inlineColumn\\\">\\n                          <h2 class=\\\"checkAll\\\">\\n                              {{amenitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\n                            </h2>\\n                      </div>\\n                    </div>\\n                </div>\\n              </mat-panel-title>\\n            </mat-expansion-panel-header>\\n\\n            <div class=\\\"row\\\" formArrayName=\\\"roomFacilityTypes\\\" *ngFor=\\\"let amenityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\n              <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\n\\n                <h5 class=\\\"pl-0 h5 semiboldText mb-3\\\" *ngIf=\\\"(amenityType.get('facilityTypeName').value) != null\\\">\\n                  {{(amenityType.get('facilityTypeName').value)}}\\n                </h5>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-12 checkBoxList border-bottom-0\\\">\\n                    <div class=\\\"form-group borderTopNone p-0 border-bottom-0 mb-0\\\">\\n                        <span class=\\\"paddingLeft30px\\\">All</span>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row checklists borderTopNone p-0\\\">\\n                  <div class=\\\"col-md-12 checkBoxList\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let amenity of getAmenityArrayForGroupAndType(i,j).controls; let k=index\\\">\\n                    <div class=\\\"form-group mb-0\\\" [formGroupName]=\\\"k\\\">\\n                        <span class=\\\"paddingLeft30px\\\">\\n                          {{amenity.get(\\\"name\\\").value}}\\n                        </span>\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n              </div>\\n            </div>\\n            \\n          </mat-expansion-panel>\\n        </div>\\n        <!-- Entertainment & Family Services -->\\n\\n      </div>\\n\\n      <div class=\\\"controlButtons pt-5 mb-4 borderTopDark\\\">\\n        <button title=\\\"Save\\\" class=\\\"genericButton activeButton mat-primary mat-raised-button\\\" (click)=\\\"saveAmenities()\\\">Save</button>\\n        <button title=\\\"Cancel\\\" class=\\\"genericButton defaultButton mat-raised-button\\\" mat-raised-button (click)=\\\"backToList()\\\">Cancel</button>\\n        <button title=\\\"Save & Continue\\\" class=\\\"genericButton activeButton mat-primary mat-raised-button float-right\\\"(click)=\\\"saveandContinue()\\\">Save & Continue</button>\\n      </div>\\n    </form>\\n  </div>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/amenities/amenities.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/rate/amenities/amenities.component.html\n// module chunks = templates.module","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TemplateUrlNotificationService } from '../../../../common/extranet-shared/services/templates/template-url-notification.service';\nimport { CONSTANTS } from '../../../../../common/constants';\nimport { AmenitiesGroupViewModel } from '../../../../viewmodel/templates/amenities/amenitiesgroupviewmodel';\nimport { FormArray, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { AmenitiesTypeViewModel } from '../../../../viewmodel/templates/amenities/amenitiestypeviewmodel';\nimport { ObjectState } from '../../../../../common/enums';\nimport { TemplateAmenitiesDataService } from '../../../../common/extranet-shared/services/templates/template-amenities-data.service';\nimport { MatSnackBar } from '@angular/material';\n\nconst read = CONSTANTS.operation.read;\nconst edit = CONSTANTS.operation.edit;\nconst create = CONSTANTS.operation.create;\nconst duration = CONSTANTS.toasterTimeOut.duration;\n\n@Component({\n  selector: 'app-amenities',\n  templateUrl: './amenities.component.html',\n  styleUrls: ['./amenities.component.css']\n})\nexport class AmenitiesComponent implements OnInit {\n\n  templateAmenitiesGroupList: AmenitiesGroupViewModel[];\n  templateAmenitiesList: AmenitiesGroupViewModel[];\n  amenitiesForm: FormGroup;\n\n  constructor(\n    private router: Router,\n    public snackBar: MatSnackBar,\n    private activatedRoute: ActivatedRoute,\n    private templateUrlNotificationService: TemplateUrlNotificationService,\n    private templateAmenitiesDataService: TemplateAmenitiesDataService\n  ) {\n      templateUrlNotificationService.changeURLRoute(activatedRoute.snapshot.url[0].path);\n  }\n\n  templateId = this.activatedRoute.parent.snapshot.params['id'];\n\n  ngOnInit() {\n    window.scrollTo(0, 0);\n    this.getTemplateAmenitiesServices();\n  }\n\n  getTemplateAmenitiesServices() {\n    this.templateAmenitiesGroupList = this.activatedRoute.snapshot.data['amenitiesData'];\n\n    this.amenitiesForm = new FormGroup({\n      amenitiesGroupArray: this.buildAmenityGroupsForm(this.templateAmenitiesGroupList)\n    });\n  }\n\n  get amenitiesGroupArray(): FormArray{\n    return <FormArray>this.amenitiesForm.get('amenitiesGroupArray');\n  }\n\n  getTypeArrayForGroup(groupIndex: number): FormArray {\n      return <FormArray>this.amenitiesGroupArray.controls[groupIndex].get('roomFacilityTypes');\n  }\n\n  getAmenityArrayForGroupAndType(groupIndex: number , typeIndex: number) {\n    return <FormArray> this.getTypeArrayForGroup(groupIndex).controls[typeIndex].get('facilityList');\n  }\n\n  buildAmenityGroupsForm(amenityGroups: AmenitiesGroupViewModel[]): FormArray {\n    let groupFormGroup: FormGroup;\n    let groupFormArray: FormArray;\n\n    amenityGroups.forEach(amenityGroup => {\n      groupFormGroup = new FormGroup({\n        facilityGroupName: new FormControl(amenityGroup.facilityGroupName),\n        roomFacilityTypes: this.buildAmenityTypesForm(amenityGroup),\n        id: new FormControl(amenityGroup.id),\n        facilityGroupId: new FormControl(amenityGroup.facilityGroupId),\n        code: new FormControl(amenityGroup.code),\n        isSelected: new FormControl(amenityGroup.isSelected),\n        isConfigurable: new FormControl(amenityGroup.isConfigurable),\n        status: new FormControl(amenityGroup.status)\n      });\n      if (groupFormArray === null || groupFormArray === undefined) {\n        groupFormArray = new FormArray([groupFormGroup]);\n      } else {\n        groupFormArray.push(groupFormGroup);\n      }\n    });\n\n    return groupFormArray;\n  }\n\n  buildAmenityTypesForm(amenityGroup: AmenitiesGroupViewModel): FormArray {\n    let typeFormGroup: FormGroup;\n    let typeFormArray: FormArray;\n\n    amenityGroup.roomFacilityTypes.forEach(amenityType => {\n      typeFormGroup = new FormGroup({\n        facilityTypeId: new FormControl(amenityType.facilityTypeId),\n        facilityTypeName: new FormControl(amenityType.facilityTypeName),\n        facilityGroupId: new FormControl(amenityType.facilityGroupId),\n        facilityList : this.buildAmenitiesForm(amenityType)\n      });\n      if (typeFormArray === null || typeFormArray === undefined) {\n        typeFormArray = new FormArray([typeFormGroup]);\n      } else {\n        typeFormArray.push(typeFormGroup);\n      }\n    });\n\n    return typeFormArray;\n  }\n\n  buildAmenitiesForm(amenityType: AmenitiesTypeViewModel): FormArray {\n    let amenityFormGroup: FormGroup;\n    let amenityFormArray: FormArray;\n\n    amenityType.facilityList.forEach(amenity => {\n      amenityFormGroup = new FormGroup({\n        id: new FormControl(amenity.id),\n        name: new FormControl(amenity.name),\n        facilityTypeId: new FormControl(amenity.facilityTypeId),\n        facilityGroupId: new FormControl(amenity.facilityGroupId)\n      });\n      if (amenityFormArray === null || amenityFormArray === undefined) {\n        amenityFormArray = new FormArray([amenityFormGroup]);\n      } else {\n        amenityFormArray.push(amenityFormGroup);\n      }\n\n    });\n\n    return amenityFormArray;\n  }\n\n  public saveAmenities() {\n\n    this.templateAmenitiesList = Object.assign([], this.templateAmenitiesGroupList, this.amenitiesForm.value.amenitiesGroupArray);\n\n    this.updateObjectState();\n\n    this.templateAmenitiesDataService.addAmenities(this.templateAmenitiesList as AmenitiesGroupViewModel[], this.templateId)\n        .subscribe(data => {\n          this.router.navigate(['/templatemgmt/templates']);\n          this.snackBar.open('Amenities Template Saved Successfully', '', { duration: duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n          window.scrollTo(0, 0);\n        }\n      );\n  }\n\n  public saveandContinue() {\n    this.templateAmenitiesList = Object.assign([], this.templateAmenitiesGroupList, this.amenitiesForm.value.amenitiesGroupArray);\n\n    this.updateObjectState();\n\n    this.templateAmenitiesDataService.addAmenities(this.templateAmenitiesList as AmenitiesGroupViewModel[], this.templateId)\n        .subscribe(data => {\n          this.router.navigate(['/templatemgmt/template', this.templateId, edit, 'mealplan']);\n          this.snackBar.open('Amenities Template Saved Successfully', '', { duration: duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n          window.scrollTo(0, 0);\n        }\n      );\n  }\n\n  updateObjectState() {\n    this.templateAmenitiesList.forEach ((amenityGroup, amenityGroupIndex) => {\n      if (amenityGroup.status === 0) {\n        if (amenityGroup.isSelected === true) {\n          amenityGroup.objectState = ObjectState.Added;\n        } else {\n          amenityGroup.objectState = ObjectState.Unchanged;\n        }\n      } else {\n        if (amenityGroup.isSelected !== this.checkOriginalObjectState(amenityGroupIndex)) {\n          amenityGroup.objectState = ObjectState.Modified;\n        } else {\n          amenityGroup.objectState = ObjectState.Unchanged;\n        }\n      }\n    });\n  }\n\n  checkOriginalObjectState(amenityGroupIndex) {\n    return this.templateAmenitiesGroupList[amenityGroupIndex].isSelected;\n  }\n\n  backToList() {\n    this.router.navigate(['/templatemgmt/templates']);\n }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/amenities/amenities.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n.breakfastDetails{\\r\\n    font-size:1.125rem;\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.mealPlanContainer .checklists {\\r\\n\\tborder-bottom: 1px solid #ebebeb;\\r\\n}\\r\\n\\r\\n.first{\\r\\n\\tborder-top: 1px solid #ebebeb;\\r\\n}\\r\\n\\r\\n.mealPlanRules{\\r\\nfont-size: 0.8125rem;\\r\\n    color: #666;\\r\\n}\\r\\n\\r\\n.currencySelect{\\r\\n    display:-webkit-box;\\r\\n    display:-ms-flexbox;\\r\\n    display:flex;\\r\\n    width: 165px;\\r\\n}\\r\\n\\r\\n.mealType {\\r\\n    font-size: 18px;\\r\\n    font-family: 'maven_proregular';\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/meal-plan/meal-plan.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/rate/meal-plan/meal-plan.component.css\n// module chunks = templates.module","module.exports = \"<div class=\\\"container-fluid mealPlanContainer\\\">\\n  <div class=\\\"mt-5\\\">\\n    <h1 class=\\\"mainHeading mb-4\\\">Meal Plan</h1>\\n    <form>\\n      <div class=\\\"formSections pb-3 pt-3\\\" *ngFor=\\\"let meal of mealTypes\\\">\\n        <div class=\\\"inlineGroup\\\">\\n          <div class=\\\"inlineColumn elementSelection\\\">\\n            <mat-checkbox class=\\\"semiBold\\\" [disabled]=\\\"true\\\" [checked]=\\\"meal.isSelected\\\"></mat-checkbox>\\n          </div>\\n          <div class=\\\"inlineColumn\\\">\\n              <span class=\\\"mealType\\\">{{meal.meal}}</span>\\n    \\n              <div>\\n                <div>\\n                  <div class=\\\"row mb-4 mt-4 customeRow\\\">\\n                    <div class=\\\"col-md-3\\\">\\n                      <div class=\\\"row customeRow\\\">\\n                        <div class=\\\"col-md-4 pr-0\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"\\\" name=\\\"currency\\\" disabled value=\\\"IDR\\\">\\n                          </mat-form-field>\\n                        </div>\\n                        <div class=\\\"col-md-8 pl-0\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"\\\" type=\\\"number\\\" name=\\\"price\\\" class=\\\"text-right hideUpDownArrow\\\" disabled=\\\"true\\\">\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12 text-right roomRateText\\\">\\n                          Per person, per day\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n    \\n                  <h2 class=\\\"pb-4 pt-3\\\"> {{meal.meal}} Details</h2>\\n                  <div class=\\\"breakFastSelection pr-3 pb-3\\\" *ngFor=\\\"let cuisine of cuisineTypes\\\">\\n                    <div>\\n                      <mat-checkbox class=\\\"pt-2 pb-2 pl-2 mr-2 mealTypeCheckbox\\\" disabled>{{cuisine.cusine}}</mat-checkbox>\\n                    </div>\\n                  </div>\\n                </div>\\n    \\n                <div>\\n                </div>\\n              </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"controlButtons mb-4 mt-5\\\">\\n        <button title=\\\"Save\\\" type=\\\"button\\\" class=\\\"genericButton activeButton mat-primary mat-raised-button\\\" (click)=\\\"saveMealPlan()\\\">Save</button>\\n        <button title=\\\"Cancel\\\" type=\\\"button\\\" class=\\\"genericButton defaultButton mat-raised-button\\\" mat-raised-button (click)=\\\"backToList()\\\">Cancel</button>\\n        <button title=\\\"Save & Continue\\\" type=\\\"button\\\" class=\\\"genericButton activeButton mat-primary mat-raised-button float-right\\\" (click)=\\\"saveandContinue()\\\">Save & Continue</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/meal-plan/meal-plan.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/rate/meal-plan/meal-plan.component.html\n// module chunks = templates.module","import { AssociateMealplanDataService } from './../../../../common/extranet-shared/services/associate-mealplan-data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TemplateUrlNotificationService } from '../../../../common/extranet-shared/services/templates/template-url-notification.service';\nimport { MealTypeViewModel } from './../../../../viewmodel/associatemealplanviewmodel/mealtypeviewmodel';\nimport { CuisineTypeViewModel } from './../../../../viewmodel/associatemealplanviewmodel/cuisinetypeviewmodel';\nimport { CurrencyViewModel } from './../../../../../common/viewmodels/currencyviewmodel';\n\n@Component({\n  selector: 'app-meal-plan',\n  templateUrl: './meal-plan.component.html',\n  styleUrls: ['./meal-plan.component.css']\n})\nexport class MealPlanComponent implements OnInit {\n\n  templateId = this.activatedRoute.parent.snapshot.params['id'];\n  mealTypes: MealTypeViewModel[];\n  cuisineTypes: CuisineTypeViewModel[];\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private templateUrlNotificationService: TemplateUrlNotificationService,\n    private mealplanService: AssociateMealplanDataService) {\n    templateUrlNotificationService.changeURLRoute(activatedRoute.snapshot.url[0].path);\n  }\n\n  ngOnInit() {\n    window.scrollTo(0, 0);\n    this.getMealPlans();\n  }\n\n  public saveMealPlan() {\n    this.router.navigate(['/templatemgmt/templates']);\n  }\n\n  public saveandContinue() {\n    this.router.navigate(['/templatemgmt/template', this.templateId, 'edit', 'childpolicy']);\n  }\n\n  backToList() {\n    this.router.navigate(['/templatemgmt/templates']);\n  }\n\n  getMealPlans() {\n    this.mealTypes = this.activatedRoute.snapshot.data['mealTypesData'];\n    this.cuisineTypes = this.activatedRoute.snapshot.data['cuisineTypesData'];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/meal-plan/meal-plan.component.ts","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".specifyOptions {\\r\\n    border-top: 1px solid #d5d5d5;\\r\\n  }\\r\\n\\r\\n  .maxWidth170px {\\r\\n    max-width: 170px;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/policies/cancellation-payment/cancellation-payment.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/rate/policies/cancellation-payment/cancellation-payment.component.css\n// module chunks = templates.module","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"mt-5\\\">\\r\\n    <h1 class=\\\"mainHeading\\\">Create New Cancellation Policy</h1>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"formSections pt-2 pb-3\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"form-group paddingLeft42px  col-md-5 col-lg-5\\\">\\r\\n              <mat-form-field class=\\\"example-full-width disableFields\\\">\\r\\n                <input matInput placeholder=\\\"What is the name of your policy?\\\" id=\\\"name\\\" required disabled />\\r\\n              </mat-form-field>\\r\\n              <span class=\\\"nameNote\\\">This name is just of you. Not displayed to Customers</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"form-group paddingLeft42px  col-md-12 col-lg-12\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12 pt-4 mt-2\\\">\\r\\n                  <h2 class=\\\"pb-3\\\">Cancellation Preference</h2>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <mat-radio-group class=\\\"w-100 d-flex disableFields\\\">\\r\\n                      <div class=\\\"col-md-5 maxWidth170px\\\">\\r\\n                        <mat-radio-button value=\\\"1\\\" disabled=\\\"true\\\">Non-Refundable</mat-radio-button>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-4 maxWidth170px\\\">\\r\\n                        <mat-radio-button value=\\\"2\\\" disabled=\\\"true\\\">Flexible</mat-radio-button>\\r\\n                      </div>\\r\\n                    </mat-radio-group>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row mt-2 m-0 p-3 alignItemCenter lightBlueContainer\\\">\\r\\n              <h6 class=\\\"pl-2 h6\\\">Specify condition(s)</h6>\\r\\n              <div class=\\\"row m-0\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"row mb-3\\\">\\r\\n                      <mat-radio-group class=\\\"w-100 d-flex disableFields\\\">\\r\\n                        <div class=\\\"col-md-5 maxWidth170px\\\">\\r\\n                            <mat-radio-button value=\\\"1\\\" disabled=\\\"true\\\">First Amount</mat-radio-button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4 maxWidth170px\\\">\\r\\n                            <mat-radio-button value=\\\"2\\\" disabled=\\\"true\\\">Full Night</mat-radio-button>\\r\\n                        </div>\\r\\n                      </mat-radio-group>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row specifyOptions m-0\\\">\\r\\n                <div class=\\\"col-md-1\\\">\\r\\n                  <mat-form-field class=\\\"disableFields\\\">\\r\\n                    <input matInput disabled/>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4 pl-0 pr-0 text-center\\\">Day(s) before Arrival, Cancellation fees is</div>\\r\\n                <div class=\\\"col-md-1\\\">\\r\\n                  <mat-form-field class=\\\"disableFields\\\">\\r\\n                    <input matInput disabled/>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-1\\\">% of</div>\\r\\n                <div class=\\\"pl-0 col-md-5 text-right\\\">\\r\\n                    <span class=\\\"btn transparent-circle mr-2\\\"><span></span></span>\\r\\n                </div>\\r\\n              </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row formSections borderBottomNone\\\">\\r\\n          <div class=\\\"form-group paddingLeft42px  col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <h2>No Show</h2>\\r\\n                <h6 class=\\\"h6 pb-2 pb-3 pt-3\\\">Is there any charges for No show?</h6>\\r\\n                <mat-button-toggle-group class=\\\"disableFields disabledToggleBtn\\\">\\r\\n                  <mat-button-toggle [value]=\\\"true\\\" disabled=\\\"true\\\">\\r\\n                    Yes\\r\\n                  </mat-button-toggle>\\r\\n                  <mat-button-toggle [value]=\\\"false\\\" disabled=\\\"true\\\">\\r\\n                    No\\r\\n                  </mat-button-toggle>\\r\\n                </mat-button-toggle-group>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-5 pt-4\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <mat-radio-group class=\\\"w-100 d-flex disableFields\\\">\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                      <mat-radio-button value=\\\"1\\\" disabled>First Night</mat-radio-button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                      <mat-radio-button value=\\\"2\\\" disabled>Full Amount</mat-radio-button>\\r\\n                    </div>\\r\\n                  </mat-radio-group>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n      <div class=\\\"col-md-12 controlButtons mb-4 borderTopDark pt-5\\\">\\r\\n        <button title=\\\"Save\\\" type=\\\"button\\\" class=\\\"genericButton activeButton mat-primary mat-raised-button\\\" (click)=\\\"saveCancellationPolicy()\\\">Save</button>\\r\\n        <button title=\\\"Cancel\\\" type=\\\"button\\\" class=\\\"genericButton defaultButton mat-raised-button\\\" mat-raised-button (click)=\\\"backToList()\\\">Cancel</button>\\r\\n        <button class=\\\"genericButton activeButton mat-primary mat-raised-button float-right\\\" title=\\\"Save & Continue\\\" type=\\\"button\\\" (click)=\\\"saveandContinue()\\\">Save & Continue</button>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/policies/cancellation-payment/cancellation-payment.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/rate/policies/cancellation-payment/cancellation-payment.component.html\n// module chunks = templates.module","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TemplateUrlNotificationService } from '../../../../../common/extranet-shared/services/templates/template-url-notification.service';\n\n@Component({\n  selector: 'app-cancellation-payment',\n  templateUrl: './cancellation-payment.component.html',\n  styleUrls: ['./cancellation-payment.component.css']\n})\nexport class CancellationPaymentComponent implements OnInit {\n  templateId = this.activatedRoute.parent.snapshot.params['id'];\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private templateUrlNotificationService: TemplateUrlNotificationService) {\n    templateUrlNotificationService.changeURLRoute(activatedRoute.snapshot.url[0].path);\n  }\n\n  ngOnInit() {\n    window.scrollTo(0, 0);\n  }\n\n  public saveandContinue() {\n    this.router.navigate(['/templatemgmt/template', this.templateId, 'edit', 'ratecategory']);\n  }\n\n  saveCancellationPolicy() {\n    this.router.navigate(['/templatemgmt/templates']);\n  }\n\n  backToList() {\n    this.router.navigate(['/templatemgmt/templates']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/policies/cancellation-payment/cancellation-payment.component.ts","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/policies/child-extra-bed/child-extra-bed.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/rate/policies/child-extra-bed/child-extra-bed.component.css\n// module chunks = templates.module","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"mt-5\\\">\\n    <h1 class=\\\"mainHeading mb-4\\\">Create New Children & Extra Bed Policy</h1>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-9\\\">\\n        <div class=\\\"formSections paddingLeft30px pt-4 pb-4\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-12 col-lg-12\\\">\\n              <h2>Child</h2>\\n              <h6 class=\\\"h6 pb-0 pt-3 darkGreyText\\\">Do you allow children at your property?</h6>\\n              <span class=\\\"font-italic pb-4 nameNote d-block pt-0 text-left\\\">(You can specify the ages and prices later)</span>\\n              <mat-button-toggle-group class=\\\"disableFields disabledToggleBtn\\\">\\n                <mat-button-toggle [value]=\\\"true\\\" disabled=\\\"true\\\">\\n                  Yes\\n                </mat-button-toggle>\\n                <mat-button-toggle [value]=\\\"false\\\" disabled=\\\"true\\\">\\n                  No\\n                </mat-button-toggle>\\n              </mat-button-toggle-group>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-12 pt-4 mb-0\\\">\\n              <h6 class=\\\"h6 requiredLabel disabledLabel\\\">What age are children allowed?</h6>\\n              <div class=\\\"row customeRow\\\">\\n                <div class=\\\"col-md-3\\\">\\n                  <mat-form-field class=\\\"disableFields\\\">\\n                    <mat-select placeholder=\\\"Min. Age\\\" [disabled]=\\\"true\\\">\\n\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <mat-form-field class=\\\"disableFields\\\">\\n                    <mat-select placeholder=\\\"Max. Age\\\" [disabled]=\\\"true\\\">\\n\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"formSections paddingLeft30px\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-12 pt-0 pb-0 mb-0\\\">\\n              <h2>Cot & Extra Bed Options</h2>\\n              <h6 class=\\\"h6 pb-3 pt-2 darkGreyText\\\">Can you provide cots in any of your rooms/units (upon request)</h6>\\n              <mat-button-toggle-group class=\\\"disableFields disabledToggleBtn\\\">\\n                <mat-button-toggle [value]=\\\"true\\\" disabled=\\\"true\\\">\\n                  Yes\\n                </mat-button-toggle>\\n                <mat-button-toggle [value]=\\\"false\\\" disabled=\\\"true\\\">\\n                  No\\n                </mat-button-toggle>\\n              </mat-button-toggle-group>\\n              <h2 class=\\\"pt-4 mt-2 pb-3\\\">Cots</h2>\\n              <h6 class=\\\"h6 pb-3 pt-2 darkGreyText\\\">Set your prices and age restrictions for cots.</h6>\\n              <div class=\\\"ageSet mt-3\\\">\\n\\n\\n                <div class=\\\"row customeRow\\\">\\n                  <div class=\\\"col-md-3 mb-0\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <mat-select placeholder=\\\"Age Upto\\\" required disabled>\\n                        <mat-option>Select</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row customeRow\\\">\\n                  <div class=\\\"col-md-3 mb-0\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <mat-select placeholder=\\\"Price\\\" required disabled>\\n                        <mat-option>Free</mat-option>\\n                        <mat-option>Paid</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-3 mb-0\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                      <input matInput placeholder=\\\"Enter Price\\\" disabled=\\\"true\\\"/>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"formSections paddingLeft30px\\\">\\n            <div class=\\\"col-md-12 pt-2 pl-0\\\">\\n              <h2>Extra Beds</h2>\\n              <h6 class=\\\"h6 pb-3 pt-2 darkGreyText\\\">Can you provide extra beds in any of your rooms/ units (upon request)?</h6>\\n              <mat-button-toggle-group class=\\\"disableFields disabledToggleBtn\\\">\\n                <mat-button-toggle [value]=\\\"true\\\" disabled=\\\"true\\\">\\n                  Yes\\n                </mat-button-toggle>\\n                <mat-button-toggle [value]=\\\"false\\\" disabled=\\\"true\\\">\\n                  No\\n                </mat-button-toggle>\\n              </mat-button-toggle-group>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"formSections borderBottomNone paddingLeft30px pb-3\\\">\\n            <div class=\\\"form-group col-md-12 pt-2 pl-0\\\">\\n              <h2>Maximum Children and Extra Beds per Room/Units</h2>\\n              <h6 class=\\\"h6 pb-3 pt-2 darkGreyText\\\">Set maximum children and extra beds per room/units.</h6>\\n              <table class=\\\"table genericTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th class=\\\"hotelNameTH align-middle\\\">Name</th>\\n                    <th class=\\\"guestsTH\\\">Number of Guest</th>\\n                    <th class=\\\"bedsTH align-middle\\\">Beds</th>\\n                    <th class=\\\"maxChildrenTH align-middle\\\">Maximum Children *</th>\\n                    <th class=\\\"extraBedsTH align-middle\\\">Extra Beds *</th>\\n                  </tr>\\n                </thead>\\n              </table>\\n            </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"controlButtons mb-4 borderTopDark pt-5\\\">\\n      <button title=\\\"Save\\\" type=\\\"button\\\" class=\\\"genericButton activeButton mat-primary mat-raised-button\\\"  (click)=\\\"savePolicy()\\\">Save</button>\\n      <button title=\\\"Cancel\\\" type=\\\"button\\\" class=\\\"genericButton defaultButton mat-raised-button\\\" mat-raised-button (click)=\\\"backToList()\\\">Cancel</button>\\n      <button class=\\\"genericButton activeButton mat-primary mat-raised-button float-right\\\" title=\\\"Save & Continue\\\" type=\\\"button\\\" (click)=\\\"saveandContinue()\\\">Save & Continue</button>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/policies/child-extra-bed/child-extra-bed.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/rate/policies/child-extra-bed/child-extra-bed.component.html\n// module chunks = templates.module","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TemplateUrlNotificationService } from '../../../../../common/extranet-shared/services/templates/template-url-notification.service';\n\n@Component({\n  selector: 'app-child-extra-bed',\n  templateUrl: './child-extra-bed.component.html',\n  styleUrls: ['./child-extra-bed.component.css']\n})\nexport class ChildExtraBedComponent implements OnInit {\n  templateId = this.activatedRoute.parent.snapshot.params['id'];\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute,\n    private templateUrlNotificationService: TemplateUrlNotificationService) {\n    templateUrlNotificationService.changeURLRoute(activatedRoute.snapshot.url[0].path);\n  }\n\n  ngOnInit() {\n    window.scrollTo(0, 0);\n  }\n\n  public saveandContinue() {\n    this.router.navigate(['/templatemgmt/template', this.templateId, 'edit', 'cancellationpolicy']);\n  }\n\n  public savePolicy() {\n    this.router.navigate(['/templatemgmt/templates']);\n  }\n\n  backToList() {\n    this.router.navigate(['/templatemgmt/templates']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/policies/child-extra-bed/child-extra-bed.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/rate-category/rate-category.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/rate/rate-category/rate-category.component.css\n// module chunks = templates.module","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"mt-5\\\">\\n    <h2 class=\\\"mainHeading mb-4\\\">Create New Rate Category</h2>\\n    <div class=\\\"formSections pb-3  paddingLeft30px pt-0\\\">\\n      <div class=\\\"form-group col-md-12 p-0\\\">\\n          <h2 class=\\\"pb-3\\\">Contract type</h2>\\n          <mat-radio-group class=\\\"disableFields row\\\">\\n              <div class=\\\"col-md-1\\\">\\n                <mat-radio-button value=\\\"1\\\" disabled=\\\"true\\\">Static</mat-radio-button>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <mat-radio-button value=\\\"2\\\" disabled=\\\"true\\\">Dynamic</mat-radio-button>\\n              </div>\\n          </mat-radio-group>\\n      </div>\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-4\\\">\\n          <mat-form-field disabled class=\\\"disableFields \\\">\\n            <input matInput placeholder=\\\"Name of your rate category? *\\\"  required disabled/>\\n          </mat-form-field>\\n          <span class=\\\"mb-3 d-block nameNote\\\">This name is just of you. Not displayed to Customers</span>\\n        </div>\\n  </div>\\n    </div>\\n\\n\\n    <div class=\\\"formSections pb-3 paddingLeft30px\\\">\\n      <h2>Which room types?</h2>\\n    </div>\\n\\n    <div class=\\\"formSections pb-3 paddingLeft30px\\\">\\n      <h2>Which cancellation policy?</h2>\\n    </div>\\n\\n    <div class=\\\"formSections pb-3 paddingLeft30px\\\">\\n      <h2>Which meal types?</h2>\\n    </div>\\n\\n    <div class=\\\"formSections pb-3 borderBottomNone paddingLeft30px\\\">\\n      <h2>Which market?</h2>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12 mt-5 controlButtons mb-4\\\">\\n        <button class=\\\"genericButton activeButton mat-primary mat-raised-button\\\" title=\\\"Save\\\" (click)=\\\"saveRateCategory()\\\">Save</button>\\n        <button class=\\\"genericButton defaultButton mat-raised-button\\\" mat-raised-button title=\\\"Cancel\\\" (click)=\\\"backToList()\\\">Cancel</button>\\n        <button class=\\\"genericButton activeButton mat-primary mat-raised-button float-right\\\" title=\\\"Continue\\\" (click)=\\\"saveAndContinueRateCategory()\\\">Save &amp; Continue</button>\\n      </div>\\n    </div>\\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/rate-category/rate-category.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/rate/rate-category/rate-category.component.html\n// module chunks = templates.module","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CONSTANTS } from '../../../../../common/constants';\nimport { TemplateUrlNotificationService } from '../../../../common/extranet-shared/services/templates/template-url-notification.service';\n\nconst read = CONSTANTS.operation.read;\nconst edit = CONSTANTS.operation.edit;\nconst create = CONSTANTS.operation.create;\n\n@Component({\n  selector: 'app-rate-category',\n  templateUrl: './rate-category.component.html',\n  styleUrls: ['./rate-category.component.css']\n})\nexport class RateCategoryComponent implements OnInit {\n  constructor(private router: Router,  private activatedRoute: ActivatedRoute,\n    private templateUrlNotificationService: TemplateUrlNotificationService\n  ) {\n      templateUrlNotificationService.changeURLRoute(activatedRoute.snapshot.url[0].path);\n  }\n\n  templateId = this.activatedRoute.parent.snapshot.params['id'];\n\n  ngOnInit() {\n    window.scrollTo(0, 0);\n  }\n\n  public saveRateCategory() {\n    this.router.navigate(['/templatemgmt/templates']);\n  }\n\n  backToList() {\n    this.router.navigate(['/templatemgmt/templates']);\n }\n\n public saveAndContinueRateCategory() {\n    this.router.navigate(['/templatemgmt/template', this.templateId, edit, 'allocation']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/rate-category/rate-category.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/room-type/room-type.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/rate/room-type/room-type.component.css\n// module chunks = templates.module","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"mt-5\\\">\\n    <form [formGroup] = \\\"roomTypeForm\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <h1 class=\\\"mainHeading pb-2\\\">Create New Room Type</h1>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row customeRow mt-4\\\">\\n          <div class=\\\"inlineGroup  col-md-4 col-lg-3 mb-3\\\">\\n            <div class=\\\"inlineColumn elementSelection\\\">\\n                <mat-checkbox class=\\\"d-flex pb-2\\\" *ngIf=\\\"roomtypeStatus[0]['isConfigurable']\\\" formControlName=\\\"roomtype\\\" ></mat-checkbox>\\n            </div>\\n            <div class=\\\"inlineColumn\\\">\\n              <mat-form-field class=\\\"disableFields\\\">\\n              <mat-select  placeholder=\\\"Room Type\\\" required disabled>\\n              <mat-option>Room Type</mat-option>\\n              <mat-option>Garden Facing</mat-option>\\n              <mat-option>Sea Facing</mat-option>\\n              </mat-select>\\n              </mat-form-field>\\n            </div> \\n          </div>\\n          <div class=\\\"inlineGroup col-md-4 col-lg-3 mb-3\\\">\\n              <div class=\\\"inlineColumn elementSelection\\\">\\n                  <mat-checkbox class=\\\"d-flex pb-2\\\"  *ngIf=\\\"roomnameStatus[0]['isConfigurable']\\\" formControlName=\\\"roomname\\\"></mat-checkbox>\\n              </div>\\n              <div class=\\\"inlineColumn\\\">\\n                  <mat-form-field class=\\\"disableFields\\\">\\n                      <input matInput placeholder=\\\"Room Name\\\" required disabled />\\n                  </mat-form-field>\\n              </div>\\n          </div>\\n          <div class=\\\"col-md-4 col-lg-3 inlineGroup mb-3\\\">\\n              <div class=\\\"inlineColumn elementSelection\\\">\\n                <mat-checkbox class=\\\"d-flex pb-2\\\" *ngIf=\\\"roomsizeStatus[0]['isConfigurable']\\\" formControlName=\\\"roomsize\\\"></mat-checkbox>\\n              </div>\\n              <div class=\\\"inlineColumn\\\">\\n                  <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-7 mr-0 pr-0 pl-3\\\">\\n                  <mat-form-field class=\\\"disableFields\\\">\\n                    <input matInput placeholder=\\\"Room Size\\\" required disabled>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-5 mr-0 pl-0 pr-3\\\">\\n                    <mat-form-field class=\\\"disableFields\\\">\\n                        <mat-select placeholder=\\\"m2\\\">\\n                        <mat-option>Sq ft.</mat-option>\\n                        </mat-select>\\n                        </mat-form-field>\\n                  </div>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"inlineGroup col-md-4 col-lg-3 mb-3\\\">\\n            <div class=\\\"inlineColumn elementSelection\\\">\\n              <mat-checkbox class=\\\"d-flex pb-2\\\" *ngIf=\\\"totalnumberofroomsStatus[0]['isConfigurable']\\\" formControlName=\\\"totalnumberofrooms\\\"></mat-checkbox>\\n            </div>\\n            <div class=\\\"inlineColumn\\\">\\n              <mat-form-field class=\\\"disableFields\\\">\\n                <input matInput placeholder=\\\"Number of Rooms \\\" required disabled />\\n              </mat-form-field> \\n            </div>  \\n          </div>\\n         <div class=\\\"inlineGroup col-md-4 col-lg-3 mb-3\\\">\\n            <div class=\\\"inlineColumn elementSelection\\\">\\n              <mat-checkbox class=\\\"d-flex pb-2\\\" *ngIf=\\\"totalNumberofdoubleroomsStatus[0]['isConfigurable']\\\" formControlName=\\\"totalNumberofdoublerooms\\\"></mat-checkbox>\\n            </div>\\n            <div class=\\\"inlineColumn\\\">  \\n              <mat-form-field class=\\\"disableFields\\\">\\n                <input matInput placeholder=\\\"Number of Double Rooms\\\" disabled/>\\n              </mat-form-field>\\n            </div>  \\n        </div>\\n        <div class=\\\"inlineGroup col-md-4 col-lg-3 mb-3\\\">\\n            <div class=\\\"inlineColumn elementSelection\\\">\\n              <mat-checkbox class=\\\"d-flex pb-2\\\" *ngIf=\\\"totalnumberofTwinroomsStatus[0]['isConfigurable']\\\" formControlName=\\\"totalnumberofTwinrooms\\\"></mat-checkbox>\\n            </div>\\n            <div class=\\\"inlineColumn\\\">  \\n              <mat-form-field class=\\\"disableFields\\\">\\n                <input matInput placeholder=\\\"Number of Twin Rooms\\\" disabled/>\\n              </mat-form-field>\\n            </div>\\n        </div>\\n      </div>\\n    <div class=\\\"row pb-5 customeRow\\\">\\n        <div class=\\\"inlineGroup col-md-4 col-lg-3 mb-0\\\">\\n          <div class=\\\"inlineColumn elementSelection\\\">\\n            <mat-checkbox class=\\\"d-flex pb-2\\\" *ngIf=\\\"isfreesaleStatus[0]['isConfigurable']\\\" formControlName=\\\"isfreesale\\\"></mat-checkbox>\\n          </div>\\n          <div class=\\\"inlineColumn\\\">   \\n            <p for=\\\"extranetaccountaccess\\\">Is Free Sale</p>\\n            <mat-button-toggle-group class=\\\"disableFields disabledToggleBtn\\\">\\n              <mat-button-toggle [value]=\\\"true\\\" disabled=\\\"true\\\">\\n                Yes\\n              </mat-button-toggle>\\n              <mat-button-toggle [value]=\\\"false\\\" disabled=\\\"true\\\">\\n                No\\n              </mat-button-toggle>\\n            </mat-button-toggle-group>\\n          </div>  \\n        </div>\\n\\n        <div class=\\\"inlineGroup col-md-4  col-lg-3  mb-0\\\">\\n            <div class=\\\"inlineColumn elementSelection\\\">\\n                <mat-checkbox class=\\\"d-flex pb-2\\\" *ngIf=\\\"smokingroomStatus[0]['isConfigurable']\\\" formControlName=\\\"smokingroom\\\"></mat-checkbox>\\n              </div>\\n              <div class=\\\"inlineColumn\\\">\\n                <p for=\\\"extranetaccountaccess\\\">Smoking</p>\\n                <mat-button-toggle-group class=\\\"disableFields disabledToggleBtn\\\">\\n                    <mat-button-toggle [value]=\\\"true\\\" disabled=\\\"true\\\">\\n                      Yes\\n                    </mat-button-toggle>\\n                    <mat-button-toggle [value]=\\\"false\\\" disabled=\\\"true\\\">\\n                      No\\n                    </mat-button-toggle>\\n                </mat-button-toggle-group>\\n              </div>\\n        </div>\\n      </div>\\n    <div class=\\\"pt-4 formSections pb-4 borderTopDark\\\">\\n      <div class=\\\"row customeRow mt-3\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"float-left checkBoxDiv\\\">\\n                <mat-checkbox *ngIf=\\\"roomDescriptionStatus[0]['isConfigurable']\\\" formControlName=\\\"roomDescription\\\"></mat-checkbox>\\n              </div>\\n              <div class=\\\"float-left marginLeft10 widthCalculate30\\\">\\n                  <h2 class=\\\"pb-4\\\">Room Description</h2>\\n                  <mat-form-field class=\\\"disableFields\\\">\\n                      <textarea rows=\\\"5\\\" cols=\\\"200\\\" maxlength=\\\"500\\\" matInput required disabled></textarea>\\n                    </mat-form-field>\\n                <p class=\\\"small text-right lightGrey mb-0\\\">Max. 500 characters</p>\\n              </div>\\n        </div>\\n      </div>\\n    </div>\\n  <div class=\\\"pt-5 borderBottomNone\\\">\\n      <div class=\\\"row customeRow\\\">\\n        <div class=\\\"col-md-12\\\">\\n              <div class=\\\"float-left checkBoxDiv\\\">\\n                  <mat-checkbox class=\\\"d-flex pb-2\\\" *ngIf=\\\"bedoptionsStatus[0]['isConfigurable']\\\" formControlName=\\\"bedoptions\\\">Bed Options</mat-checkbox>\\n                </div>\\n            <div class=\\\"col-md-12 float-left marginLeft10 widthCalculate30 p-0\\\">\\n                  <h2 class=\\\"pb-4\\\">Bed Options</h2>\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"form-group col-md-4 col-lg-3 mt-0 mb-0 paddingLeft15px\\\">\\n                          <mat-form-field class=\\\"disableFields\\\">\\n                          <mat-select placeholder=\\\"Number of Guests\\\" required disabled>\\n                            <mat-option>1</mat-option>\\n                            <mat-option>2</mat-option>\\n                            <mat-option>3</mat-option>\\n                            <mat-option>4</mat-option>\\n                          </mat-select>\\n                          </mat-form-field>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"mt-4 mb-4 row lightBlueContainer position-relative pb-3 ml-0 mr-0\\\">\\n                        <div class=\\\"col-md-12 pl-3 pr-3\\\">\\n                          <div class=\\\"row customeRow\\\">\\n                            <div class=\\\"col-md-12 pb-3\\\"><h6 class=\\\"semiboldText\\\">Standard Arrangement</h6></div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-8 p-0\\\">\\n                                    <div class=\\\"row\\\">\\n                                      <div class=\\\"col-md-5\\\">\\n                          <mat-form-field class=\\\"disableFields\\\">\\n                                        <mat-select placeholder=\\\"Bed Type available\\\" required disabled>\\n                                            <mat-option>Select</mat-option>\\n                                        </mat-select>\\n                            </mat-form-field>\\n                                      </div>\\n                                      <div class=\\\"col-md-2 icon-multiply\\\"></div>\\n                                      <div class=\\\"col-md-5\\\">\\n                          <mat-form-field class=\\\"disableFields\\\">\\n                                        <mat-select placeholder=\\\"Number of Beds\\\" required disabled>\\n                                          <mat-option>1</mat-option>\\n                                          <mat-option>2</mat-option>\\n                                          <mat-option>3</mat-option>\\n                                          <mat-option>4</mat-option>\\n                                        </mat-select>\\n                            </mat-form-field>\\n                                      </div> \\n                                    </div>\\n                                  </div>\\n                                  <div class=\\\"col-md-4 pt-3 pr-3 controlButtons text-right\\\">\\n                                      <button class=\\\"genericButton defaultButton genericSmallButton float-none mat-raised-button\\\" mat-raised-button type=\\\"button\\\" title=\\\"Add Another Bed\\\">\\n                                        Add Another Bed\\n                                      </button>\\n                                  </div>\\n                            </div>\\n                \\n                      </div>\\n                    </div>\\n            </div>\\n        </div>\\n      </div>\\n\\n      \\n</div>\\n        <div class=\\\"col-md-12 mt-4 controlButtons mb-4\\\">\\n          <button class=\\\"mr-2 genericButton activeButton mat-primary mat-raised-button\\\" title=\\\"Save\\\" type=\\\"submit\\\" (click)=\\\"saveRoomTypeInfo()\\\">Save</button>\\n          <button class=\\\"genericButton defaultButton mat-raised-button\\\" mat-raised-button title=\\\"Cancel\\\" type=\\\"submit\\\" (click) = \\\"backToList()\\\">Cancel</button>\\n          <button class=\\\"genericButton activeButton mat-primary mat-raised-button float-right\\\" title=\\\"Continue\\\" type=\\\"submit\\\" (click)=\\\"saveandContinue()\\\">Save & Continue</button>\\n        </div>\\n    </form>\\n  </div>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/room-type/room-type.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/rate/room-type/room-type.component.html\n// module chunks = templates.module","import { Component, OnInit } from '@angular/core';\nimport { EXTRANETCONSTANTS } from '../../../../common/constants';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { TemplateNameDataService } from '../../../../common/extranet-shared/services/templates/template-name-data.service';\nimport { TemplatesDataService } from '../../../../common/extranet-shared/services/templates/templates-data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ObjectState, EntityState } from '../../../../../common/enums';\nimport { CONSTANTS } from '../../../../../common/constants';\nimport { TemplateUrlNotificationService } from '../../../../common/extranet-shared/services/templates/template-url-notification.service';\nimport { TemplateRoomtypeinfoviewmodel, Roomtypeinfoviewmodel } from '../../../../viewmodel/templates/room-type/roomtypeinfoviewmodel';\nimport { TemplateRoomTypeDataService } from '../../../../common/extranet-shared/services/templates/template-room-type-data.service';\nimport { MatSnackBar } from '@angular/material';\n\n\nconst read = CONSTANTS.operation.read;\nconst edit = CONSTANTS.operation.edit;\nconst create = CONSTANTS.operation.create;\n\nconst roomTypeInfo = EXTRANETCONSTANTS.templates.roomtype;\n\n@Component({\n  selector: 'app-room-type',\n  templateUrl: './room-type.component.html',\n  styleUrls: ['./room-type.component.css']\n})\nexport class RoomTypeComponent implements OnInit {\n  isRead: boolean;\n  operation: string;\n  templateName: string;\n  templateId = this.activatedRoute.parent.snapshot.params['id'];\n\n  roomtype = roomTypeInfo.roomtype;\n  roomname = roomTypeInfo.roomname;\n  roomsize = roomTypeInfo.roomsize;\n  totalnumberofrooms = roomTypeInfo.totalnumberofrooms;\n  totalNumberofdoublerooms = roomTypeInfo.totalNumberofdoublerooms;\n  totalnumberofTwinrooms = roomTypeInfo.totalnumberofTwinrooms;\n  isfreesale = roomTypeInfo.isfreesale;\n  smokingroom = roomTypeInfo.smokingroom;\n  roomDescription = roomTypeInfo.roomDescription;\n  bedoptions = roomTypeInfo.bedoptions;\n\n  templateRoomtypeinfoviewmodel: TemplateRoomtypeinfoviewmodel;\n  roomtypeiFields: Roomtypeinfoviewmodel[];\n\n  roomtypeStatus: Roomtypeinfoviewmodel[];\n  roomnameStatus: Roomtypeinfoviewmodel[];\n  roomsizeStatus: Roomtypeinfoviewmodel[];\n  totalnumberofroomsStatus: Roomtypeinfoviewmodel[];\n  totalNumberofdoubleroomsStatus: Roomtypeinfoviewmodel[];\n  totalnumberofTwinroomsStatus: Roomtypeinfoviewmodel[];\n  isfreesaleStatus: Roomtypeinfoviewmodel[];\n  smokingroomStatus: Roomtypeinfoviewmodel[];\n  roomDescriptionStatus: Roomtypeinfoviewmodel[];\n  bedoptionsStatus: Roomtypeinfoviewmodel[];\n\n  roomTypeForm: FormGroup;\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private templateRoomTypeDataService: TemplateRoomTypeDataService,\n    private templateUrlNotificationService: TemplateUrlNotificationService,\n    public snackBar: MatSnackBar\n  ) {\n    templateUrlNotificationService.changeURLRoute(activatedRoute.snapshot.url[0].path);\n     }\n\n  ngOnInit() {\n    window.scrollTo(0, 0);\n    this.operation = this.activatedRoute.parent.snapshot.params['operation'];\n    this.templateId = this.activatedRoute.parent.snapshot.params['id'];\n    this.getRoomTypeFieldsList();\n    this.getRoomFieldStatus();\n\n    this.roomTypeForm = new FormGroup({\n      roomtype : new FormControl(this.roomtypeStatus[0]['isSelected']),\n      roomname : new FormControl(this.roomnameStatus[0]['isSelected']),\n      roomsize : new FormControl(this.roomsizeStatus[0]['isSelected']),\n      totalnumberofrooms : new FormControl(this.totalnumberofroomsStatus[0]['isSelected']),\n      totalNumberofdoublerooms : new FormControl(this.totalNumberofdoubleroomsStatus[0]['isSelected']),\n      totalnumberofTwinrooms : new FormControl(this.totalnumberofTwinroomsStatus[0]['isSelected']),\n      isfreesale : new FormControl(this.isfreesaleStatus[0]['isSelected']),\n      smokingroom : new FormControl(this.smokingroomStatus[0]['isSelected']),\n      roomDescription : new FormControl(this.roomDescriptionStatus[0]['isSelected']),\n      bedoptions : new FormControl(this.bedoptionsStatus[0]['isSelected']),\n    });\n\n  }\n\n  private getRoomTypeFieldsList() {\n    this.templateRoomtypeinfoviewmodel = this.activatedRoute.snapshot.data['roomTypeData'];\n    this.roomtypeiFields = this.templateRoomtypeinfoviewmodel.roomFields;\n    // console.log('this.templateRoomtypeinfoviewmodel -' + JSON.stringify(this.templateRoomtypeinfoviewmodel));\n    // console.log('this.roomtypeiFields -' + JSON.stringify(this.roomtypeiFields));\n  }\n\n  private getRoomFieldStatus() {\n    this.roomtypeStatus = this.roomtypeiFields.filter( arr => arr.code === this.roomtype );\n    this.roomnameStatus = this.roomtypeiFields.filter(arr => arr.code === this.roomname);\n    this.roomsizeStatus = this.roomtypeiFields.filter(arr => arr.code === this.roomsize);\n    this.totalnumberofroomsStatus = this.roomtypeiFields.filter(arr => arr.code === this.totalnumberofrooms);\n    this.totalNumberofdoubleroomsStatus = this.roomtypeiFields.filter(arr => arr.code === this.totalNumberofdoublerooms);\n    this.totalnumberofTwinroomsStatus = this.roomtypeiFields.filter(arr => arr.code === this.totalnumberofTwinrooms);\n    this.isfreesaleStatus = this.roomtypeiFields.filter(arr => arr.code === this.isfreesale);\n    this.smokingroomStatus = this.roomtypeiFields.filter( arr => arr.code === this.smokingroom );\n    this.roomDescriptionStatus = this.roomtypeiFields.filter(arr => arr.code === this.roomDescription );\n    this.bedoptionsStatus = this.roomtypeiFields.filter(arr => arr.code === this.bedoptions);\n\n  }\n\n  createSavingData(operation: string) {\n    let arrayRoomTypeFields: Roomtypeinfoviewmodel[];\n    arrayRoomTypeFields = [];\n    if (operation === create) {\n      this.roomtypeStatus[0]['isSelected'] = this.roomTypeForm.controls[\n        'roomtype'\n      ].value;\n      this.roomtypeStatus[0]['objectState'] = ObjectState.Added;\n      arrayRoomTypeFields.push(this.roomtypeStatus[0]);\n      this.roomnameStatus[0]['isSelected'] = this.roomTypeForm.controls[\n        'roomname'\n      ].value;\n      this.roomnameStatus[0]['objectState'] = ObjectState.Added;\n      arrayRoomTypeFields.push(this.roomnameStatus[0]);\n      this.roomsizeStatus[0]['isSelected'] = this.roomTypeForm.controls[\n        'roomsize'\n      ].value;\n      this.roomsizeStatus[0]['objectState'] = ObjectState.Added;\n      arrayRoomTypeFields.push(this.roomsizeStatus[0]);\n      this.totalnumberofroomsStatus[0]['isSelected'] = this.roomTypeForm.controls[\n        'totalnumberofrooms'\n      ].value;\n      this.totalnumberofroomsStatus[0]['objectState'] = ObjectState.Added;\n      arrayRoomTypeFields.push(this.totalnumberofroomsStatus[0]);\n\n      this.totalNumberofdoubleroomsStatus[0]['isSelected'] = this.roomTypeForm.controls[\n        'totalNumberofdoublerooms'\n      ].value;\n      this.totalNumberofdoubleroomsStatus[0]['objectState'] = ObjectState.Added;\n      arrayRoomTypeFields.push(this.totalNumberofdoubleroomsStatus[0]);\n\n      this.totalnumberofTwinrooms[0]['isSelected'] = this.roomTypeForm.controls[\n        'totalnumberofTwinrooms'\n      ].value;\n      this.totalnumberofTwinroomsStatus[0]['objectState'] = ObjectState.Added;\n      arrayRoomTypeFields.push(this.totalnumberofTwinroomsStatus[0]);\n      this.isfreesaleStatus[0]['isSelected'] = this.roomTypeForm.controls[\n        'isfreesale'\n      ].value;\n      this.isfreesaleStatus[0]['objectState'] = ObjectState.Added;\n      arrayRoomTypeFields.push(this.isfreesaleStatus[0]);\n\n      this.smokingroomStatus[0]['isSelected'] = this.roomTypeForm.controls[\n        'smokingroom'\n      ].value;\n      this.smokingroomStatus[0]['objectState'] = ObjectState.Added;\n      arrayRoomTypeFields.push(this.smokingroomStatus[0]);\n      this.roomDescriptionStatus[0]['isSelected'] = this.roomTypeForm.controls[\n        'roomDescription'\n      ].value;\n      this.roomDescriptionStatus[0]['objectState'] = ObjectState.Added;\n      arrayRoomTypeFields.push(this.roomDescriptionStatus[0]);\n      this.bedoptionsStatus[0]['isSelected'] = this.roomTypeForm.controls[\n        'bedoptions'\n      ].value;\n      this.bedoptionsStatus[0]['objectState'] = ObjectState.Added;\n      arrayRoomTypeFields.push(this.bedoptionsStatus[0]);\n    } else if (operation === edit) {\n      if (\n        this.roomtypeStatus[0]['isSelected'] !==\n        this.roomTypeForm.controls['roomtype'].value\n      ) {\n        this.roomtypeStatus[0]['isSelected'] = this.roomTypeForm.controls[\n          'roomtype'].value;\n        if ( this.roomtypeStatus[0]['status'] === EntityState.New) {\n          this.roomtypeStatus[0]['objectState'] = ObjectState.Added; } else {\n        this.roomtypeStatus[0]['objectState'] = ObjectState.Modified;\n      } } else {\n        this.roomtypeStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayRoomTypeFields.push(this.roomtypeStatus[0]);\n      if (\n        this.roomnameStatus[0]['isSelected'] !==\n        this.roomTypeForm.controls['roomname'].value\n      ) {\n        this.roomnameStatus[0]['isSelected'] = this.roomTypeForm.controls[\n          'roomname' ].value;\n        if ( this.roomnameStatus[0]['status'] === EntityState.New) {\n          this.roomnameStatus[0]['objectState'] = ObjectState.Added; } else {\n        this.roomnameStatus[0]['objectState'] = ObjectState.Modified;\n      } } else {\n        this.roomnameStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayRoomTypeFields.push(this.roomnameStatus[0]);\n      if (\n        this.roomsizeStatus[0]['isSelected'] !==\n        this.roomTypeForm.controls['roomsize'].value\n      ) {\n        this.roomsizeStatus[0]['isSelected'] = this.roomTypeForm.controls[\n          'roomsize'].value;\n       // this.roomsizeStatus[0]['objectState'] = ObjectState.Modified;\n       if ( this.roomsizeStatus[0]['status'] === EntityState.New) {\n        this.roomsizeStatus[0]['objectState'] = ObjectState.Added; } else {\n      this.roomsizeStatus[0]['objectState'] = ObjectState.Modified;\n    } }  else {\n        this.roomsizeStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayRoomTypeFields.push(this.roomsizeStatus[0]);\n      if (\n        this.totalnumberofroomsStatus[0]['isSelected'] !==\n        this.roomTypeForm.controls['totalnumberofrooms'].value\n      ) {\n        this.totalnumberofroomsStatus[0]['isSelected'] = this.roomTypeForm.controls[\n          'totalnumberofrooms'].value;\n        if ( this.totalnumberofroomsStatus[0]['status'] === EntityState.New) {\n          this.totalnumberofroomsStatus[0]['objectState'] = ObjectState.Added; } else {\n        this.totalnumberofroomsStatus[0]['objectState'] = ObjectState.Modified;\n      } }else {\n        this.totalnumberofroomsStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayRoomTypeFields.push(this.totalnumberofroomsStatus[0]);\n      if (\n        (this.totalNumberofdoubleroomsStatus[0]['isSelected'] !== this.roomTypeForm.controls[\n          'totalNumberofdoublerooms'\n        ].value)\n      ) {\n        this.totalNumberofdoubleroomsStatus[0]['isSelected'] = this.roomTypeForm.controls[\n          'totalNumberofdoublerooms'\n        ].value;\n        if ( this.totalNumberofdoubleroomsStatus[0]['status'] === EntityState.New) {\n          this.totalNumberofdoubleroomsStatus[0]['objectState'] = ObjectState.Added; } else {\n        this.totalNumberofdoubleroomsStatus[0]['objectState'] = ObjectState.Modified;\n      } }else {\n        this.totalNumberofdoubleroomsStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayRoomTypeFields.push(this.totalNumberofdoubleroomsStatus[0]);\n      if (\n        this.totalnumberofTwinroomsStatus[0]['isSelected'] !==\n        this.roomTypeForm.controls['totalnumberofTwinrooms'].value\n      ) {\n        this.totalnumberofTwinroomsStatus[0]['isSelected'] = this.roomTypeForm.controls[\n          'totalnumberofTwinrooms'\n        ].value;\n        if ( this.totalnumberofTwinroomsStatus[0]['status'] === EntityState.New) {\n          this.totalnumberofTwinroomsStatus[0]['objectState'] = ObjectState.Added; } else {\n        this.totalnumberofTwinroomsStatus[0]['objectState'] = ObjectState.Modified;\n      } } else {\n        this.totalnumberofTwinroomsStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayRoomTypeFields.push(this.totalnumberofTwinroomsStatus[0]);\n      if (\n        this.isfreesaleStatus[0]['isSelected'] !==\n        this.roomTypeForm.controls['isfreesale'].value\n      ) {\n        this.isfreesaleStatus[0]['isSelected'] = this.roomTypeForm.controls[\n          'isfreesale'].value;\n        if ( this.isfreesaleStatus[0]['status'] === EntityState.New) {\n          this.isfreesaleStatus[0]['objectState'] = ObjectState.Added; } else {\n        this.isfreesaleStatus[0]['objectState'] = ObjectState.Modified;\n      } }  else {\n        this.isfreesaleStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayRoomTypeFields.push(this.isfreesaleStatus[0]);\n      if (\n        this.smokingroomStatus[0]['isSelected'] !==\n        this.roomTypeForm.controls['smokingroom'].value\n      ) {\n        this.smokingroomStatus[0]['isSelected'] = this.roomTypeForm.controls[\n          'smokingroom'].value;\n        if ( this.smokingroomStatus[0]['status'] === EntityState.New) {\n          this.smokingroomStatus[0]['objectState'] = ObjectState.Added; } else {\n        this.smokingroomStatus[0]['objectState'] = ObjectState.Modified;\n      } }  else {\n        this.smokingroomStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayRoomTypeFields.push(this.smokingroomStatus[0]);\n      if (\n        this.roomDescriptionStatus[0]['isSelected'] !==\n        this.roomTypeForm.controls['roomDescription'].value\n      ) {\n        this.roomDescriptionStatus[0]['isSelected'] = this.roomTypeForm.controls[\n          'roomDescription'].value;\n        if ( this.roomDescriptionStatus[0]['status'] === EntityState.New) {\n          this.roomDescriptionStatus[0]['objectState'] = ObjectState.Added; } else {\n        this.roomDescriptionStatus[0]['objectState'] = ObjectState.Modified;\n      } }  else {\n        this.roomDescriptionStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayRoomTypeFields.push(this.roomDescriptionStatus[0]);\n      if (\n      this.bedoptionsStatus[0]['isSelected'] !== this.roomTypeForm.controls[\n        'bedoptions'].value) {\n          this.bedoptionsStatus[0]['isSelected'] = this.roomTypeForm.controls[\n            'bedoptions'].value;\n            if ( this.bedoptionsStatus[0]['status'] === EntityState.New) {\n              this.bedoptionsStatus[0]['objectState'] = ObjectState.Added; } else {\n            this.bedoptionsStatus[0]['objectState'] = ObjectState.Modified;\n          } } else {\n        this.bedoptionsStatus[0]['objectState'] = ObjectState.Unchanged;\n      }\n      arrayRoomTypeFields.push(this.bedoptionsStatus[0]);\n    }\n    this.templateRoomtypeinfoviewmodel.objectState = ObjectState.Unchanged;\n    this.templateRoomtypeinfoviewmodel.roomFields = arrayRoomTypeFields;\n  }\n\n  public saveRoomTypeInfo() {\n    // console.log('Room Type Saving -');\n    if (this.roomTypeForm.valid) {\n        this.createSavingData(this.operation.toLowerCase().trim());\n        // console.log('Save room data -' + JSON.stringify(this.templateRoomtypeinfoviewmodel));\n      this.templateRoomTypeDataService.saveTemplateRoomTypeFields (this.templateRoomtypeinfoviewmodel).subscribe(\n        (response) => {\n          this.router.navigate(['/templatemgmt/templates']);\n          this.snackBar.open('Rate Type Template Saved Successfully', '', { duration: CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n        window.scrollTo(0, 0);\n        }\n      );\n    }\n  }\n\n  public saveandContinue() {\n    if (this.roomTypeForm.valid) {\n      this.createSavingData(this.operation.toLowerCase().trim());\n    this.templateRoomTypeDataService.saveTemplateRoomTypeFields (this.templateRoomtypeinfoviewmodel).subscribe(\n      (response) => {\n        this.router.navigate(['/templatemgmt/template', this.templateId, edit, 'amenities']);\n        this.snackBar.open('Rate Type Template Saved Successfully', '', { duration: CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n        window.scrollTo(0, 0);\n      }\n    );\n  }\n  }\n\n  backToList() {\n    this.router.navigate(['/templatemgmt/templates']);\n }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/rate/room-type/room-type.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/redirect/redirect.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/redirect/redirect.component.css\n// module chunks = templates.module","module.exports = \"<p>\\n  redirect works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/redirect/redirect.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/redirect/redirect.component.html\n// module chunks = templates.module","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { TemplatesDataService } from '../../../common/extranet-shared/services/templates/templates-data.service';\nimport { TemplateViewModel } from '../../../viewmodel/templates/hotel-info/hotelinfoviewmodel';\n\nconst read = CONSTANTS.operation.read;\nconst edit = CONSTANTS.operation.edit;\nconst create = CONSTANTS.operation.create;\nconst templateViewModel = new TemplateViewModel();\n\n@Component({\n  selector: 'app-redirect',\n  templateUrl: './redirect.component.html',\n  styleUrls: ['./redirect.component.css']\n})\n\nexport class RedirectComponent implements OnInit {\n  tempid: any;\n  isRead: boolean;\n  operation: string;\n  hotelId: string;\n  constructor(private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private templatesDataService: TemplatesDataService\n  ) { }\n\n  ngOnInit() {\n    this.tempid = this.activatedRoute.snapshot.params['tempid'];\n    templateViewModel.id = +this.tempid;\n    // // console.log('Redirect component templateViewModel - ' + JSON.stringify(templateViewModel));\n\n    // this.templatesDataService.getTemplateHotelFields(templateViewModel);\n    this.router.navigate(['/templatemgmt/template', this.tempid, edit, 'facilitiesservices']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/redirect/redirect.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".genericTable mat-header-cell, .genericTable mat-row mat-cell {\\r\\n    width: 28%;\\r\\n}\\r\\n\\r\\n.genericTable mat-header-cell:last-child, .genericTable mat-row mat-cell:last-child {\\r\\n    width: 16%;\\r\\n}\\r\\n.highlight:nth-child(2){\\r\\n  background-color: #b1e593; /* #55a029;*/\\r\\n}\\r\\n.templateNameError {\\r\\n  margin: -10px 0 15px 0 ;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template-list/template-list.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/template-list/template-list.component.css\n// module chunks = templates.module","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"mt-4 pt-2\\\">\\n\\n    <h1 class=\\\"mainHeading borderBottomNone pb-0\\\">Templates</h1>\\n    <div class=\\\"row mt-4 mb-5\\\">\\n      <form [formGroup]=\\\"searchTemplates\\\" (ngSubmit)=\\\"findTemplates(searchTemplates.get('searchText').value,searchTemplates.get('startDate').value,searchTemplates.get('endDate').value)\\\"\\n        class=\\\"w-100\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"lightBlueContainer pb-2 pl-4 pr-4 pt-4\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"row\\\">\\n\\n                  <div class=\\\"col-md-2\\\">\\n                    <mat-form-field class=\\\"width80percent\\\">\\n                      <span matPrefix>From &nbsp;</span>\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"sdate\\\">\\n                        <mat-icon matDatepickerToggleIcon>\\n                          <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                        </mat-icon>\\n                      </mat-datepicker-toggle>\\n                      <input matInput readonly [matDatepicker]=\\\"sdate\\\" placeholder=\\\"DD-MMM-YY\\\" formControlName=\\\"startDate\\\">\\n                      <mat-datepicker #sdate></mat-datepicker>\\n                    </mat-form-field>\\n                    <span class=\\\"btn transparent-circle smallDeleteIcon ml-1\\\" title=\\\"Delete\\\">\\n                      <i aria-hidden=\\\"true\\\" class=\\\"fa fa-times-thin\\\" (click)=\\\"checkIsFromDateCleared();\\\"></i>\\n                    </span>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <mat-form-field class=\\\"width80percent\\\">\\n                      <span matPrefix>To &nbsp;</span>\\n                      <input matInput readonly [matDatepicker]=\\\"enddate\\\" placeholder=\\\"DD-MMM-YY\\\" formControlName=\\\"endDate\\\" [min]=\\\"searchTemplates.get('startDate').value\\\">\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"enddate\\\">\\n                        <mat-icon matDatepickerToggleIcon>\\n                          <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                        </mat-icon>\\n                      </mat-datepicker-toggle>\\n                      <mat-datepicker #enddate></mat-datepicker>\\n                    </mat-form-field>\\n                    <span class=\\\"btn transparent-circle smallDeleteIcon ml-1\\\" title=\\\"Delete\\\">\\n                      <i aria-hidden=\\\"true\\\" class=\\\"fa fa-times-thin\\\" (click)=\\\"checkIsToDateCleared();\\\"></i>\\n                    </span>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"Search by Template Name,  Last Modified By,  Last Modified Date/Time\\\" formControlName=\\\"searchText\\\" (keydown.backspace)=\\\"checkIsInputCleared()\\\" (keyup.enter)=\\\"searchBtn.click()\\\">\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-2 text-right controlButtons\\\">\\n                    <button [hidden]='isRead' class=\\\"genericButton activeButton mat-primary mat-raised-button genericSmallButton top10px\\\" #searchBtn (click)=\\\"searchBtn.click()\\\"\\n                      title=\\\"Search\\\" type=\\\"submit\\\">\\n                      Search</button>\\n                  </div>\\n\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n    <div class=\\\"row mb-3\\\">\\n      <div *ngIf=\\\"createView\\\" class=\\\"col-md-12 text-right controlButtons\\\">\\n        <button [hidden]='isRead' class=\\\"defaultButton genericButton genericSmallButton mat-raised-button\\\" mat-raised-button title=\\\"Create New Template\\\" type=\\\"button\\\" (click)=\\\"createTemplate()\\\">\\n          <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i><span>Create New Template</span>\\n        </button>\\n      </div>\\n    </div>\\n    <mat-table #table [dataSource]=\\\"!isSearch ? templatesDataSource : filteredData\\\" matSort matSortActive=\\\"updatedDate\\\" matSortDirection=\\\"desc\\\"\\n      class=\\\"genericTable mb-2 flexNone\\\">\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header (click)=\\\"makeCopyFalse()\\\"> Template Name </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"updatedBy\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header (click)=\\\"makeCopyFalse()\\\"> Last Modified By </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\"> {{element.updatedBy}} </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"updatedDate\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header (click)=\\\"makeCopyFalse()\\\"> Last Modified Date/Time </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">\\n          <span>{{element.updatedDate |date:'dd-MMM-yy'}}</span>\\n          <span class=\\\"d-inline ml-2\\\">{{element.updatedDate | date: \\\"hh:mm a\\\"}}</span>\\n        </mat-cell>\\n      </ng-container>\\n\\n      <ng-container *ngIf=\\\"createView || deleteView\\\" matColumnDef=\\\"actions\\\" class=\\\"text-center\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"invisible\\\"> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\" class=\\\"placeholderColorGray\\\">\\n          <mat-select placeholder=\\\"Actions\\\" name=\\\"Actions\\\" [(ngModel)]=\\\"actions\\\">\\n            <mat-option value=\\\"{{element.id}}-edit\\\" #edit (click)=\\\"GoTemplateUpdate(edit.value)\\\">Edit</mat-option>\\n            <mat-option value=\\\"{{element.id}}-{{element.name}}-copy\\\" #copy (click)=\\\"GoTemplateCopy(copy.value)\\\">Copy</mat-option>\\n            <mat-option value=\\\"{{element.id}}-delete\\\" #delete (click)=\\\"GoTemplateDelete(delete.value)\\\">Delete</mat-option>\\n            <mat-option *ngIf=\\\"deleteView\\\" value=\\\"{{element.id}}-delete\\\">Delete</mat-option>\\n          </mat-select>\\n        </mat-cell>\\n\\n      </ng-container>\\n\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [ngClass]=\\\"{'highlight': isCopy}\\\"></mat-row>\\n    </mat-table>\\n    <br>\\n    <br>\\n    <div style=\\\"color:orange\\\" *ngIf=\\\"noDataAvailable\\\">\\n      No Template is created.\\n    </div>\\n    <div class=\\\"paginationWrapper\\\">\\n      <span class=\\\"pageCount\\\" *ngIf=\\\"!noDataAvailable\\\">Page: {{(pageEvent) ? pageEvent.pageIndex + 1 : 1}} of {{(pageEvent) ? Math.ceil(pageEvent.length/pageEvent.pageSize)\\n        : Math.ceil(totalRecords/20)}}</span>\\n      <mat-paginator *ngIf=\\\"!noDataAvailable\\\" (click)=\\\"makeCopyFalse()\\\" class=\\\"genericPagination\\\" (page)=\\\"pageEvent = $event\\\" #paginator1\\n        [pageSize]=\\\"20\\\" [pageSizeOptions]=\\\"[5, 10, 20, 50]\\\">\\n      </mat-paginator>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template-list/template-list.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/template-list/template-list.component.html\n// module chunks = templates.module","import { Component, OnInit, ViewChild, Input, ChangeDetectorRef, EventEmitter, Output, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatTableDataSource, MatPaginator, MatSort, MatSnackBar } from '@angular/material';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { TemplatesDataService } from '../../../common/extranet-shared/services/templates/templates-data.service';\nimport { Templateslistviewmodel } from '../../../viewmodel/templates/templates-details/templateslistviewmodel';\nimport { FormGroup, Validators, FormControl, AbstractControl } from '@angular/forms';\nimport { UserProfileService } from '../../../../common/shared/services/user-profile.service';\nimport { DateAdapter, NativeDateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { DatePipe } from '@angular/common';\nimport { DialogsService } from './../../../common/extranet-shared/dialogs/dialogs.service';\nimport { rowsAnimation } from './template.animations';\nimport { PageEvent } from '@angular/material';\n\nconst DATE_FORMATS = {\n  parse: {\n    dateInput: { month: 'short', year: 'numeric', day: 'numeric' }\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  }\n};\n\nexport class DatePickerDateAdapter extends NativeDateAdapter {\n  format(date: Date, displayFormat: Object): string {\n    date.setMinutes((date.getTimezoneOffset() * -1));\n    if (displayFormat === 'input') {\n      const day = date.getDate();\n      const month = date.toLocaleString('en-us', { month: 'long' });\n      const year = date.getFullYear();\n      return this._to2digit(day) + '-' + month.substring(0, 3) + '-' + year % 100;\n    } else {\n      return date.toDateString();\n    }\n  }\n\n  private _to2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n}\n\n@Component({\n  selector: 'app-template-list',\n  templateUrl: './template-list.component.html',\n  styleUrls: ['./template-list.component.css'],\n  providers: [\n    { provide: DateAdapter, useClass: DatePickerDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS },\n  ],\n  animations: [rowsAnimation],\n})\nexport class TemplateListComponent implements OnInit {\n  privileges: string[];\n  deleteView = false;\n  createView = false;\n  readView = false;\n  operation: string;\n  isRead: boolean;\n  displayedColumns = []; // ['name', 'createdBy', 'createdDate', 'actions'];\n  templatesDataSource: MatTableDataSource<Templateslistviewmodel>;\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  searchTemplates: FormGroup;\n  hotelId: string;\n  noDataAvailable: boolean;\n  templatesList: Templateslistviewmodel[];\n  filteredData: MatTableDataSource<Templateslistviewmodel>;\n  isSearch: boolean;\n  minChar: boolean;\n  result: any;\n  actions: string;\n  isDeleted: boolean;\n  isCopy = false;\n  pageEvent: PageEvent;\n  Math: any;\n  totalRecords: number;\n  searchNo: number;\n  @Input()\n  _dateValue; // notice the '_'\n\n  // @Input() title: string;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    public snackBar: MatSnackBar,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private templatesDataService: TemplatesDataService,\n    private userProfileService: UserProfileService,\n    public datepipe: DatePipe,\n    private dialogsService: DialogsService,\n    private templateDataService: TemplatesDataService,\n    private changeDetectorRefs: ChangeDetectorRef) {\n    this.Math = Math;\n  }\n\n  ngOnInit() {\n    window.scrollTo(0, 0);\n    //   const intervalID = setInterval(function(){\n    //    // // console.log(new Date());\n    //    this.makeCopyFalse();\n    // }, 2000);\n    this.templateDataService.templateHotelFieldsDetails = undefined;\n    this.isSearch = false;\n    this.searchTemplates = new FormGroup({\n      startDate: new FormControl(),\n      endDate: new FormControl(),\n      searchText: new FormControl()\n    });\n    this.getPrivileges();\n    this.getTemplateList();\n  }\n\n  private createTemplate() {\n    this.router.navigate(['../template', 0, this.create], {\n      relativeTo: this.activatedRoute\n    });\n  }\n\n  getPrivileges() {\n    this.privileges = this.userProfileService.GetUserPermissionsForFeature(\n      CONSTANTS.application.extranet,\n      CONSTANTS.featuretypeid.Templates\n    );\n    // // console.log(' ### User Privileges #### ' + this.privileges);\n    for (const privilege of this.privileges) {\n      if (privilege === 'VW') {\n        this.readView = true;\n      } else if (privilege === 'CR') {\n        this.createView = true;\n      } else if (privilege === 'DE') {\n        this.deleteView = true;\n      }\n    }\n\n    if (this.createView || this.deleteView) {\n      this.displayedColumns = ['name', 'updatedBy', 'updatedDate', 'actions'];\n    } else {\n      this.displayedColumns = ['name', 'updatedBy', 'updatedDate'];\n    }\n  }\n\n  findTemplates(filterValue: string, filterFrom: string, filterTo: string) {\n    this.makeCopyFalse();\n    if (filterFrom !== null || filterTo !== null || (filterValue !== null && filterValue.length >= 3)) {\n      this.isSearch = true;\n    }\n    if (filterFrom !== null) {\n      filterFrom = this.datepipe.transform(filterFrom, 'yyyy-MM-dd');\n    }\n    if (filterTo !== null) {\n      filterTo = this.datepipe.transform(filterTo, 'yyyy-MM-dd');\n    }\n    if (filterValue !== null) {\n      filterValue = filterValue.trim();\n      filterValue = filterValue.toLowerCase();\n    }\n    this.filteredData = new MatTableDataSource<Templateslistviewmodel>(this.templatesList.filter(template => {\n      const searchDate = this.datepipe.transform(template.createdDate, 'dd-MMM-yy hh:mm a');\n      const date = this.datepipe.transform(template.createdDate, 'yyyy-MM-dd');\n      if (filterValue !== null && (filterFrom === null && filterTo === null)) {\n        return template.name.toLowerCase().includes(filterValue) ||\n          template.createdBy.toLowerCase().includes(filterValue) ||\n          searchDate.toLowerCase().includes(filterValue);\n      } else if (filterFrom !== null && (filterTo === null && filterValue === null)) {\n        return date >= filterFrom;\n      } else if (filterTo !== null && (filterFrom === null && filterValue === null)) {\n        return date <= filterTo;\n      } else if (filterValue === null && (filterFrom !== null && filterTo !== null)) {\n        return filterFrom <= date && date <= filterTo;\n      } else if (filterFrom === null && (filterValue !== null && filterTo !== null)) {\n        return (template.name.toLowerCase().includes(filterValue) ||\n          template.createdBy.toLowerCase().includes(filterValue) ||\n          searchDate.toLowerCase().includes(filterValue)) &&\n          date <= filterTo;\n      } else if (filterTo === null && (filterFrom !== null && filterValue !== null)) {\n        return (template.name.toLowerCase().includes(filterValue) ||\n          template.createdBy.toLowerCase().includes(filterValue) ||\n          searchDate.toLowerCase().includes(filterValue)) &&\n          date >= filterFrom;\n      } else if (filterFrom !== null && filterTo !== null && filterValue !== null) {\n        return (template.name.toLowerCase().includes(filterValue) ||\n          template.createdBy.toLowerCase().includes(filterValue) ||\n          searchDate.toLowerCase().includes(filterValue)) &&\n          filterFrom <= date && date <= filterTo;\n      }\n    }));\n    this.filteredData.sort = this.sort;\n    this.filteredData.paginator = this.paginator;\n    this.paginator.firstPage();\n  }\n\n  checkIsInputCleared() {\n    this.paginator.page.emit();\n    if (this.searchTemplates.get('searchText').value.length === 1 &&\n      this.searchTemplates.get('startDate').value === null &&\n      this.searchTemplates.get('endDate').value === null) {\n      this.filteredData = new MatTableDataSource<Templateslistviewmodel>(this.templatesList);\n      this.filteredData.paginator = this.paginator;\n      this.filteredData.sort = this.sort;\n      this.isSearch = false;\n    }\n  }\n\n  checkIsFromDateCleared() {\n    this.paginator.page.emit();\n    this.searchTemplates.get('startDate').setValue(null);\n    if ((this.searchTemplates.get('searchText').value === null || this.searchTemplates.get('searchText').value === '') &&\n      this.searchTemplates.get('endDate').value === null) {\n      this.getTemplateList();\n    }\n  }\n\n  checkIsToDateCleared() {\n    this.paginator.page.emit();\n    this.searchTemplates.get('endDate').setValue(null);\n    if ((this.searchTemplates.get('searchText').value === null || this.searchTemplates.get('searchText').value === '') &&\n      this.searchTemplates.get('startDate').value === null) {\n      this.getTemplateList();\n    }\n  }\n\n  GoTemplateUpdate(value) {\n    this.isCopy = false;\n    const val = value.split('-');\n    const templateId = val[0];\n    this.operation = val[1];\n    this.router.navigate(\n      ['../template', templateId, this.operation.trim().toLowerCase()],\n      { relativeTo: this.activatedRoute }\n    );\n  }\n\n  GoTemplateCopy(value) {\n    const val = value.split('-');\n    const templateId = val[0];\n    const templateName = val[1];\n    this.operation = val[2];\n    this.dialogsService\n      .openCopyModal(templateId, templateName, this.templatesList).subscribe(res => {\n        this.result = res;\n        if (this.result !== null) {\n          this.templatesDataService.copyTemplate(this.result).subscribe(\n            (response) => {\n              // console.log(JSON.stringify(response));\n              this.snackBar.open('The copy of the template is created successfully', '',\n                { duration: CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top', panelClass: 'showSnackBar' });\n              this.getTemplateList();\n              this.isCopy = true;\n            }\n          );\n        }\n        this.actions = null;\n      });\n  }\n\n  GoTemplateDelete(value) {\n    this.isCopy = false;\n    this.isCopy = false;\n    const val = value.split('-');\n    const templateId = val[0];\n    this.dialogsService\n      .confirm('Confirm', 'Are you sure you want to delete this template?').subscribe(res => {\n        this.result = res;\n        if (this.result) {\n          this.deleteTemplate(templateId);\n        } else {\n          this.actions = null;\n        }\n      });\n  }\n\n  deleteTemplate(templateId) {\n    this.templatesDataService.deleteTemplate(templateId).subscribe((isDeleted) => {\n      this.isDeleted = isDeleted;\n      this.snackBar.open('Template Deleted Successfully', '', { duration: CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top', panelClass: 'showSnackBar' });\n      this.getTemplateList();\n    });\n  }\n\n  getTemplateList() {\n    this.isSearch = false;\n    this.templatesDataService.getTemplatesList().subscribe(templatesList => {\n      if (templatesList !== null) {\n        this.templatesDataSource = new MatTableDataSource<Templateslistviewmodel>(templatesList.result);\n        // // console.log('templatesList.result - ' + JSON.stringify(templatesList.result));\n        this.changeDetectorRefs.detectChanges();\n        this.templatesList = templatesList.result;\n        this.totalRecords = this.templatesList.length;\n        this.templatesDataService.templateListDto = templatesList.result;\n        this.paginator._pageIndex = 0;\n        this.templatesDataSource.paginator = this.paginator;\n        this.templatesDataSource.sort = this.sort;\n        if (templatesList.result.length === 0) {\n          this.noDataAvailable = true;\n        } else {\n          this.noDataAvailable = false;\n        }\n\n      } else {\n        this.noDataAvailable = true;\n      }\n    });\n    window.scrollTo(0, 0);\n  }\n  makeCopyFalse() {\n    // // console.log(this.paginator);\n    this.isCopy = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template-list/template-list.component.ts","import { trigger, sequence, state, animate, transition, style } from '@angular/animations';\r\n\r\nexport const rowsAnimation =\r\n    trigger('rowsAnimation', [\r\n      transition('void => *', [\r\n        style({ height: '*', opacity: '0', transform: 'translateX(-550px)', 'box-shadow': 'none' }),\r\n        sequence([\r\n          animate('.55s ease', style({ background: 'green', height: '*', opacity: '.2', transform: 'translateX(0)', 'box-shadow': 'none'  })),\r\n          animate('.55s ease', style({ height: '*', opacity: 1, transform: 'translateX(0)' }))\r\n        ])\r\n      ])\r\n    ]);\r\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template-list/template.animations.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template-nav-menu/template-nav-menu.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/template-nav-menu/template-nav-menu.component.css\n// module chunks = templates.module","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n  <div class=\\\"mt-4\\\">\\n    <div class=\\\"customBreadcrumb mb-4\\\">\\n        <span>Template </span><span>&gt; {{breadcrumbs}} Template</span>\\n    </div>\\n    <h1 class=\\\"mainHeading borderBottomNone customBreadcrumb\\\">{{breadcrumbs}} Template <span class=\\\"mandatoryInfo float-right\\\">Indicates Mandatory Fields</span></h1>\\n    <p class=\\\"m-0\\\">Complete below steps to create your new template</p>\\n    <div class=\\\"row mb-4 mt-5\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"lightBlueContainer pb-2 pl-2 pr-2 pt-3 mb-3\\\">\\n          <div class=\\\"form-group col-md-4 mb-0\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Template Name\\\"  (keyup)=\\\"checkTemplateName()\\\" (change)=\\\"getTemplateName()\\\" [(ngModel)]=\\\"templateName\\\"\\n                required  [disabled]=\\\"isNameEditable\\\"/>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-12 templateNameError\\\">\\n            <mat-error *ngIf=\\\"uniqueNameError\\\">\\n              Template name already exists.\\n            </mat-error>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"mb-4\\\">\\n      <mat-chip-list *ngIf=\\\"isDisabledTab\\\" class=\\\"genericProcessFlow\\\">\\n        <mat-chip *ngFor=\\\" let chip of chipsList; let i=index\\\" [selected]=\\\"chip.selected\\\" [color]=\\\"chip.chipcolor\\\" disabled>\\n          <span class=\\\"fa-stack fa-lg\\\">\\n            <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n            <i class=\\\"fa fa-stack-1x fa-inverse\\\">{{i+1}}</i>\\n          </span>{{chip.chipname}}</mat-chip>\\n      </mat-chip-list>\\n      <mat-chip-list *ngIf=\\\"!isDisabledTab\\\" class=\\\"genericProcessFlow\\\">\\n        <mat-chip *ngFor=\\\" let chip of chipsList; let i=index\\\" (click)=\\\"changeChip(chip, chipsList)\\\" [selected]=\\\"chip.selected\\\" [color]=\\\"chip.chipcolor\\\"\\n          [routerLink]=\\\"[chip.routerLink]\\\">\\n          <span class=\\\"fa-stack fa-lg\\\">\\n            <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n            <i class=\\\"fa fa-stack-1x fa-inverse\\\">{{i+1}}</i>\\n          </span>{{chip.chipname}}</mat-chip>\\n      </mat-chip-list>\\n    </div>\\n    <nav mat-tab-nav-bar *ngIf=\\\"showhotelinfo\\\" id=\\\"hotelinfo\\\" class=\\\"genericTab mb-4\\\">\\n      <a mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"Hotel Info\\\" [routerLink]=\\\"['hoteldetails']\\\">Hotel Info</a>\\n      <a *ngIf=\\\"!isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"Facilities and Services\\\" [routerLink]=\\\"['facilitiesservices']\\\">Facilities and Services</a>\\n      <a *ngIf=\\\"isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"Facilities and Services\\\">Facilities and Services</a>\\n    </nav>\\n    <nav mat-tab-nav-bar *ngIf=\\\"showRate\\\" id=\\\"rate\\\" class=\\\"genericTab mb-4\\\">\\n      <a *ngIf=\\\"!isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"room type\\\" [routerLink]=\\\"['roomtype']\\\">Room Type</a>\\n      <a *ngIf=\\\"!isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"amenities\\\" [routerLink]=\\\"['amenities']\\\">Amenities</a>\\n      <a *ngIf=\\\"!isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"mealplan\\\" [routerLink]=\\\"['mealplan']\\\">Meal Plan</a>\\n\\n      <a *ngIf=\\\"!isDisabledTab && !iscancellationpolicy\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"Policies\\\" [routerLink]=\\\"['childpolicy']\\\">Policies</a>\\n\\n      <a *ngIf=\\\"!isDisabledTab && iscancellationpolicy\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"Policies\\\" [routerLink]=\\\"['cancellationpolicy']\\\">Policies</a>\\n\\n      <a *ngIf=\\\"!isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"rate category\\\" [routerLink]=\\\"['ratecategory']\\\">Rate Category</a>\\n\\n      <a *ngIf=\\\"isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"room type\\\">Room Type</a>\\n      <a *ngIf=\\\"isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"amenities\\\">Amenities</a>\\n      <a *ngIf=\\\"isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"mealplan\\\">Meal Plan</a>\\n      <a *ngIf=\\\"isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"Policies\\\">Policies</a>\\n      <a *ngIf=\\\"isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"rate category\\\">Rate Category</a>\\n    </nav>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template-nav-menu/template-nav-menu.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/template-nav-menu/template-nav-menu.component.html\n// module chunks = templates.module","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TemplateNameDataService } from '../../../common/extranet-shared/services/templates/template-name-data.service';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { Observable } from 'rxjs/Observable';\nimport { TemplateUrlNotificationService } from '../../../common/extranet-shared/services/templates/template-url-notification.service';\nimport { TemplatesDataService } from '../../../common/extranet-shared/services/templates/templates-data.service';\n\nconst read = CONSTANTS.operation.read;\nconst edit = CONSTANTS.operation.edit;\nconst create = CONSTANTS.operation.create;\n@Component({\n  selector: 'app-template-nav-menu',\n  templateUrl: './template-nav-menu.component.html',\n  styleUrls: ['./template-nav-menu.component.css']\n})\nexport class TemplateNavMenuComponent implements OnInit {\n  path: string;\ntemplateName: string;\nisRead: boolean;\noperation: string;\ntemplateId: number;\nisDisabledTab: boolean;\ncolorClass = '';\nstate1 = true;\nstate2 = false;\nstate3 = false;\nstate4 = false;\nshowhotelinfo: boolean;\nshowRate: boolean;\nisNameEditable: boolean;\niscancellationpolicy = false;\ntemplateEnteredName: string;\nbreadcrumbs: string;\nuniqueNameError = false;\n\nchipsList = [\n  {\n    chipId: 1,\n    chipname: 'Hotel Info',\n    chipcolor: 'primary',\n    chipchild: 'hotelinfo',\n    routerLink: 'hoteldetails',\n    selected: true\n  },\n  {\n    chipId: 2,\n    chipname: 'Rate',\n    chipcolor: 'accent',\n    chipchild: 'Rate',\n    routerLink: 'roomtype',\n    selected: false\n  },\n  {\n    chipId: 3,\n    chipname: 'Allocations',\n    chipcolor: 'accent',\n    chipchild: 'allocation',\n    routerLink: 'allocation',\n    selected: false\n  },\n  {\n    chipId: 4,\n    chipname: 'Contract Terms',\n    chipcolor: 'accent',\n    chipchild: '',\n    routerLink: 'contractterms',\n    selected: false\n  }\n];\nparams: any;\ncoming: any;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private templatesDataService: TemplatesDataService,\n    public templateNameDataService: TemplateNameDataService,\n    public templateUrlNotificationService: TemplateUrlNotificationService\n  ) {}\n\n  ngOnInit() {\n\n    this.operation = this.activatedRoute.snapshot.params['operation'];\n    this.templateId = +this.activatedRoute.snapshot.params['id'];\n\n    if (this.operation === create) {\n      this.breadcrumbs = 'Create New ';\n    } else {\n      this.breadcrumbs = 'Edit ';\n    }\n\n    this.templateUrlNotificationService.urlPath.subscribe(path => {\n      if (this.operation === edit && this.templatesDataService.templateHotelFieldsDetails !== undefined) {\n        this.templateName = this.templatesDataService.templateHotelFieldsDetails.name;\n        } else if (this.operation === edit) {\n          this.templateName = this.templatesDataService.newTemplateName;\n        }\n      if (this.router.url.indexOf('hoteldetails') >= 0) {\n        this.isNameEditable = false;\n      } else {\n        this.isNameEditable = true;\n      }\n      if (this.router.url.indexOf('cancellationpolicy') >= 0) {\n        this.iscancellationpolicy = true;\n      } else {\n        this.iscancellationpolicy = false;\n      }\n      if (this.operation.trim().toLocaleLowerCase() === create && this.templateId === 0) {\n        this.isDisabledTab = true;\n      } else {\n        this.isDisabledTab = false;\n      }\n      this.path = path;\n      if ( this.path === 'hoteldetails' || this.path === 'facilitiesservices' ) {\n        this.changeChip (this.chipsList[0], this.chipsList);\n       } else if (this.path === 'roomtype' || this.path === 'amenities' ||\n       this.path === 'mealplan' || this.path === 'ratecategory' || this.path === 'childpolicy'\n       || this.path === 'cancellationpolicy') {\n        this.changeChip (this.chipsList[1], this.chipsList);\n       } else if (this.path === 'allocation') {\n        this.changeChip (this.chipsList[2], this.chipsList);\n       } else if (this.path === 'contractterms') {\n        this.changeChip (this.chipsList[3], this.chipsList);\n       }\n  });\n\n    if (this.templateName !== '') {\n      this.getTemplateName();\n    }\n\n    this.showhotelinfo = true;\n    this.showRate = false;\n}\n\n  getTemplateName() {\n    if (this.router.url.indexOf('hoteldetails') >= 0) {\n      this.isNameEditable = false;\n    } else {\n      this.isNameEditable = true;\n    }\n    // this.checkUniqueTemplateName();\n    if (this.uniqueNameError) {\n       this.templateNameDataService.changeTemplateName('');\n    } else {\n       this.templateNameDataService.changeTemplateName(this.templateName);\n    }\n  }\n\n  checkTemplateName() {\n    if (this.router.url.indexOf('hoteldetails') >= 0) {\n      this.isNameEditable = false;\n    } else {\n      this.isNameEditable = true;\n    }\n    this.checkUniqueTemplateName();\n    // if (this.uniqueNameError === true) {\n    //    this.templateNameDataService.changeTemplateName('');\n    // } else {\n    //    this.templateNameDataService.changeTemplateName(this.templateName);\n    // }\n  }\n  checkUniqueTemplateName() {\n    if (this.templateName !== undefined && this.templateName !== null) {\n      if (this.templatesDataService.templateListDto === undefined) {\n        this.uniqueNameError = false;\n      } else {\n        this.templatesDataService.templateNameExist(this.templateName.trim()).subscribe ( data => {\n          if (data.result === false) {\n            this.uniqueNameError = false;\n            this.templateNameDataService.changeTemplateName(this.templateName);\n          } else {\n            this.uniqueNameError = true;\n            this.templateNameDataService.changeTemplateName('');\n          }\n        } );\n      }\n    }\n  }\n\n  changeChip(chip, chipsList) {\n      if (chip.selected) {\n        chip.chipcolor = 'primary';\n      } else {\n        for (const cc of chipsList) {\n         if (cc.chipId !== chip.chipId) {\n          cc.selected = false;\n          cc.chipcolor = 'accent';\n         }\n        }\n        chip.selected = !chip.selected;\n        chip.chipcolor = 'primary';\n        if (chip.chipId === 1) {\n          this.showhotelinfo = true;\n          this.showRate = false;\n        } else if (chip.chipId === 2) {\n          this.showhotelinfo = false;\n          this.showRate = true;\n        } else {\n          this.showhotelinfo = false;\n          this.showRate = false;\n        }\n      }\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template-nav-menu/template-nav-menu.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template/template.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/template/template.component.css\n// module chunks = templates.module","module.exports = \"<!-- <p>\\n  template works!\\n</p> -->\\n<div>\\n  <app-template-nav-menu></app-template-nav-menu>\\n</div>\\n<div >\\n  <div class=\\\"body-style\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template/template.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/templates/template/template.component.html\n// module chunks = templates.module","import { Component, OnInit } from '@angular/core';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { ActivatedRoute } from '@angular/router';\nimport { TemplatesDataService } from '../../../common/extranet-shared/services/templates/templates-data.service';\nimport { TemplateViewModel } from '../../../viewmodel/templates/hotel-info/hotelinfoviewmodel';\nimport { TemplateNameDataService } from '../../../common/extranet-shared/services/templates/template-name-data.service';\n\nconst read = CONSTANTS.operation.read;\nconst edit = CONSTANTS.operation.edit;\nconst create = CONSTANTS.operation.create;\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.css']\n})\nexport class TemplateComponent implements OnInit {\n\n  isCreate: boolean;\n  templateId: string;\n  templateName: string;\n  operation: string;\n  // templateViewModel: TemplateViewModel;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private templateDataService: TemplatesDataService,\n    public templateNameDataService: TemplateNameDataService\n  ) {}\n\n  ngOnInit() {\n    this.operation = this.activatedRoute.snapshot.params['operation'];\n    this.templateId = this.activatedRoute.snapshot.params['id'];\n    this.getTemplateDetails();\n  }\n\n  private getTemplateDetails() {\n      // // console.log('I M at getTemplateDetails from Template component' + JSON.stringify(this.templateDataService.templateHotelFieldsDetails));\n      console.log('this.operation -' + this.operation );\n\n      if (this.operation === edit && this.templateDataService.templateHotelFieldsDetails !== undefined) {\n        this.templateName = this.templateDataService.templateHotelFieldsDetails.name;\n        this.templateNameDataService.changeTemplateName(this.templateName);\n      }\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/template/template.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HotelDetailsComponent } from './hotel-info/hotel-details/hotel-details.component';\nimport { TemplateComponent } from './template/template.component';\nimport { AllocationsComponent } from './allocations/allocations.component';\nimport { TemplateListComponent } from './template-list/template-list.component';\nimport { TemplateNavMenuComponent } from './template-nav-menu/template-nav-menu.component';\nimport { ContractTermsComponent } from './contract-terms/contract-terms.component';\nimport { RoomTypeComponent } from './rate/room-type/room-type.component';\nimport { AmenitiesComponent } from './rate/amenities/amenities.component';\nimport { MealPlanComponent } from './rate/meal-plan/meal-plan.component';\nimport { RateCategoryComponent } from './rate/rate-category/rate-category.component';\nimport { ChildExtraBedComponent } from './rate/policies/child-extra-bed/child-extra-bed.component';\nimport { CancellationPaymentComponent } from './rate/policies/cancellation-payment/cancellation-payment.component';\nimport { FacilitiesServicesComponent } from './hotel-info/facilities-services/facilities-services.component';\nimport { TemplateHotelFieldsResolverService } from '../../common/extranet-shared/services/templates/template-hotel-fields-resolver.service';\nimport { RedirectComponent } from './redirect/redirect.component';\nimport { TemplateFacilitiesResolverService } from '../../common/extranet-shared/services/templates/template-facilities-resolver.service';\nimport { MealtypesResolverService } from './../../common/extranet-shared/services/mealtypes-resolver.service';\nimport { CuisinetypesResolverService } from './../../common/extranet-shared/services/cuisinetypes-resolver.service';\nimport { CurrencyResolverService } from './../../common/extranet-shared/services/currency-resolver.service';\nimport { TemplateRoomTypeFieldsResolverService } from '../../common/extranet-shared/services/templates/template-room-type-fields-resolver.service';\nimport { ContractTermsResolverService } from '../../common/extranet-shared/services/templates/contract-terms-resolver.service';\nimport { TemplateAmenitiesResolverService } from '../../common/extranet-shared/services/templates/template-amenities-resolver.service';\nimport { TemplatesDataResolverService } from './../../common/extranet-shared/services/templates/templates-data-resolver.service';\n\nconst routes: Routes = [\n    { path: '', redirectTo: 'templates', pathMatch: 'full' },\n    { path: 'templates', component: TemplateListComponent, resolve: { templateListData: TemplatesDataResolverService } },\n    { path: 'redirect/:tempid', component: RedirectComponent },\n    {\n        path: 'template/:id/:operation', component: TemplateComponent,\n        children: [\n            { path: '', redirectTo: 'hoteldetails', pathMatch: 'full' },\n            {\n                path: 'hoteldetails', component: HotelDetailsComponent,\n                resolve: { hotelFieldData: TemplateHotelFieldsResolverService }\n            },\n            {\n                path: 'facilitiesservices',\n                component: FacilitiesServicesComponent,\n                resolve: { facilityData: TemplateFacilitiesResolverService }\n            },\n            {\n                path: 'roomtype', component: RoomTypeComponent,\n                resolve: { roomTypeData: TemplateRoomTypeFieldsResolverService }\n            },\n            {\n                path: 'amenities',\n                component: AmenitiesComponent,\n                resolve: { amenitiesData: TemplateAmenitiesResolverService }\n            },\n            {\n                path: 'mealplan', component: MealPlanComponent,\n                resolve: {\n                    currencyData: CurrencyResolverService, mealTypesData: MealtypesResolverService,\n                    cuisineTypesData: CuisinetypesResolverService\n                }\n            },\n            { path: 'childpolicy', component: ChildExtraBedComponent },\n            { path: 'cancellationpolicy', component: CancellationPaymentComponent },\n            { path: 'ratecategory', component: RateCategoryComponent },\n            { path: 'allocation', component: AllocationsComponent },\n            {\n                path: 'contractterms',\n                component: ContractTermsComponent,\n                resolve: { contractTermsData: ContractTermsResolverService, hotelFieldData: TemplateHotelFieldsResolverService }\n            },\n        ]\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class TemplatesRoutingModule { }\n\nexport const routedTemplateComponents = [\n    HotelDetailsComponent,\n    FacilitiesServicesComponent,\n    TemplateComponent,\n    AllocationsComponent,\n    TemplateListComponent,\n    TemplateNavMenuComponent,\n    ContractTermsComponent,\n    RoomTypeComponent,\n    AmenitiesComponent,\n    MealPlanComponent,\n    RateCategoryComponent,\n    ChildExtraBedComponent,\n    CancellationPaymentComponent,\n    RedirectComponent\n];\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/templates-routing.module.ts","import { NgModule, forwardRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TemplatesRoutingModule, routedTemplateComponents } from './templates-routing.module';\nimport { MaterialModule } from '../../../common/material/material.module';\nimport { DatePipe } from '@angular/common';\nimport { TemplateNameDataService } from '../../common/extranet-shared/services/templates/template-name-data.service';\nimport { TemplateUrlNotificationService } from '../../common/extranet-shared/services/templates/template-url-notification.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TemplatesRoutingModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [routedTemplateComponents],\n  providers: [DatePipe, TemplateNameDataService, TemplateUrlNotificationService]\n})\n\nexport class TemplatesModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/templates/templates.module.ts"],"sourceRoot":"webpack:///"}