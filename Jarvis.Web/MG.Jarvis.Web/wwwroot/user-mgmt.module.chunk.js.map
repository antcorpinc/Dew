{"version":3,"sources":["D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/agency-resolver.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/application-resolver.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/department-resolver.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/designation-resolver.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/hotel-chain-resolver.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/hotel-partner-resolver.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/hotel-resolver.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/role-resolver.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/constants.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/pipes/orderbypipe.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-info/agent-user-info.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-info/agent-user-info.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-info/agent-user-info.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-list/agent-user-list.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-list/agent-user-list.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-list/agent-user-list.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-type/hotel-type.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-type/hotel-type.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-type/hotel-type.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-info/hotel-user-info.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-info/hotel-user-info.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-info/hotel-user-info.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-list/hotel-user-list.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-list/hotel-user-list.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-list/hotel-user-list.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/individual-hotel-user-info/individual-hotel-user-info.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/individual-hotel-user-info/individual-hotel-user-info.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/individual-hotel-user-info/individual-hotel-user-info.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/supplier-user-info/supplier-user-info.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/supplier-user-info/supplier-user-info.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/supplier-user-info/supplier-user-info.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-info/mg-user-info.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-info/mg-user-info.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-info/mg-user-info.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-list/mg-user-list.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-list/mg-user-list.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-list/mg-user-list.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/roles-permission/roles-permissions-info/roles-permissions-info.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/roles-permission/roles-permissions-info/roles-permissions-info.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/roles-permission/roles-permissions-info/roles-permissions-info.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/roles-permission/roles-permissions-list/roles-permissions-list.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/roles-permission/roles-permissions-list/roles-permissions-list.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/roles-permission/roles-permissions-list/roles-permissions-list.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/user-mgmt-routing.module.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/user-mgmt.module.ts"],"names":[],"mappings":"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","file":"user-mgmt.module.chunk.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { BackofficeLookupService } from './backoffice-lookup';\nimport { AgencyViewModel } from '../../../viewmodel/usersviewmodel/agencyviewmodel';\n\n@Injectable()\nexport class AgencyResolverService {\n  constructor( private backofficeLookupService: BackofficeLookupService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<AgencyViewModel[]> {\n      return this.backofficeLookupService.getAgencies();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/agency-resolver.service.ts","import { Injectable } from '@angular/core';\nimport { BackofficeLookupService } from './backoffice-lookup';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { MgApplicationViewModel } from '../../../viewmodel/usersviewmodel/mgapplicationlistviewmodel';\n\n\n@Injectable()\nexport class ApplicationResolverService implements Resolve<MgApplicationViewModel[]> {\n\n  constructor(private backofficeLookupService: BackofficeLookupService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<MgApplicationViewModel[]> {\n      return this.backofficeLookupService.getApplications();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/application-resolver.service.ts","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router/src/interfaces';\r\nimport { BackofficeLookupService } from './backoffice-lookup';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router/src/router_state';\r\nimport { RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { DepartmentViewModel } from '../../../viewmodel/usersviewmodel/departmentviewmodel';\r\n\r\n\r\n@Injectable()\r\nexport class DepartmentResolverService implements Resolve<DepartmentViewModel[]> {\r\n  constructor(private backOfficeLookupService: BackofficeLookupService) { }\r\n  resolve(route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<DepartmentViewModel[]> {\r\n    return this.backOfficeLookupService.getDepartments();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/department-resolver.service.ts","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { BackofficeLookupService } from './backoffice-lookup';\nimport { DesignationViewModel } from '../../../viewmodel/usersviewmodel/designationviewmodel';\nimport { Observable } from 'rxjs/Observable';\nimport { CONSTANTS } from '../../../../common/constants';\n\n@Injectable()\nexport class DesignationResolverService {\n  constructor(private backofficeLookupService: BackofficeLookupService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<DesignationViewModel[]> {\n      return this.backofficeLookupService.getDesignationByType(route.data['type']);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/designation-resolver.service.ts","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router/src/interfaces';\nimport { LookupService } from '../../../../common/shared/services/lookup.service';\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router/src/router_state';\nimport { RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { HotelChainViewModel } from '../../../../common/viewmodels/hotelchainviewmodel';\n\n\n@Injectable()\nexport class HotelChainResolverService implements Resolve<HotelChainViewModel[]> {\n  constructor(private lookupService: LookupService) { }\n  resolve(route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<HotelChainViewModel[]> {\n    return this.lookupService.getHotelChains();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/hotel-chain-resolver.service.ts","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router/src/interfaces';\nimport { LookupService } from '../../../../common/shared/services/lookup.service';\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router/src/router_state';\nimport { RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { HotelChainViewModel } from '../../../../common/viewmodels/hotelchainviewmodel';\n\n\n@Injectable()\nexport class HotelPartnerResolverService implements Resolve<HotelChainViewModel[]> {\n  constructor(private lookupService: LookupService) { }\n  resolve(route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<HotelChainViewModel[]> {\n    return this.lookupService.getHotelPartners();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/hotel-partner-resolver.service.ts","import { Injectable } from '@angular/core';\nimport { BackofficeLookupService } from './backoffice-lookup';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { HotelNameViewModel } from '../../../viewmodel/usersviewmodel/hotelnameviewmodel';\n\n@Injectable()\nexport class HotelResolverService {\n\n  constructor(private backOfficeLookUpService: BackofficeLookupService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable<HotelNameViewModel[]> {\n            return this.backOfficeLookUpService.getIndividualHotels();\n          }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/hotel-resolver.service.ts","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { BackofficeLookupService } from './backoffice-lookup';\nimport { MgRoleViewModel } from '../../../viewmodel/usersviewmodel/mgrolelistviewmodel';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { BACKOFFICECONSTANTS } from '../../../../backoffice/common/constants';\n\n@Injectable()\nexport class RoleResolverService {\n  constructor( private backofficeLookupService: BackofficeLookupService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<MgRoleViewModel[]> {\n      return this.backofficeLookupService.getRolesByApplicationName(route.data['appName'], BACKOFFICECONSTANTS.userType.hotelUser);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/role-resolver.service.ts","export let BACKOFFICECONSTANTS = {\r\n   userType: {\r\n       mgUser: 1,\r\n       hotelUser: 2,\r\n       agentUser: 3\r\n },\r\n hotelUserType: {\r\n   individual: 'I',\r\n   chain: 'C',\r\n   supplier: 'S'\r\n },\r\nextranet : 'Extranet'\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/constants.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'orderBy' })\nexport class Orderbypipe implements PipeTransform {\n  transform(records: Array<any>, args?: any): any {\n    return records.sort(function (a, b) {\n        if (args.property === 'hotelName' || args.property === 'name' || args.property === 'title') {\n            if (a[args.property].toLowerCase() < b[args.property].toLowerCase()) {\n                return -1 * args.direction;\n            } else if (a[args.property].toLowerCase() > b[args.property].toLowerCase()) {\n                return 1 * args.direction;\n            } else {\n                return 0;\n            }\n        }\n    });\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/pipes/orderbypipe.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".controlButtons {\\r\\n  padding-top: 30px !important;\\r\\n  padding-bottom: 28px !important;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-info/agent-user-info.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/agent-user/agent-user-info/agent-user-info.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid pt-4\\\">\\r\\n  <div class=\\\"customBreadcrumb mb-4\\\">\\r\\n    <span>Agents </span>\\r\\n    <span>{{ (this.operation === 'create') ? \\\"&gt; Create New Agent\\\" : \\\"&gt; Edit Agent\\\" }}</span>\\r\\n  </div>\\r\\n  <h1 class=\\\"mainHeading mb-2 customBreadcrumb borderBottomNone\\\">{{ (this.operation === 'create') ? \\\"Create New Agent\\\" : \\\"Edit Agent\\\" }}<span class=\\\"mandatoryInfo\\\">Indicates Mandatory Fields</span></h1>\\r\\n\\r\\n  <form [formGroup]=\\\"agentForm\\\" (ngSubmit)=\\\"saveAgent()\\\">\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0 mt-4\\\">\\r\\n        <mat-form-field>\\r\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Search by Agency Name/Code\\\" formControlName=\\\"agency\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\r\\n            <mat-option *ngFor=\\\"let agency of filteredOptions | async | orderBy: {property:'name', direction: direction} \\\" [value]=\\\"agency\\\" (onSelectionChange)=\\\"getBranches(agency.id)\\\">\\r\\n              {{ agency.name }} - {{agency.code}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0 mt-4\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Search by Branch Name\\\" name=\\\"branch\\\" formControlName=\\\"branch\\\" [matAutocomplete]=\\\"autoBranch\\\">\\r\\n          <mat-autocomplete #autoBranch=\\\"matAutocomplete\\\" [displayWith]=\\\"displayBranchFn\\\">\\r\\n            <mat-option *ngFor=\\\"let branch of filteredBranchOptions | async\\\" [value]=\\\"branch\\\">\\r\\n              {{ branch.name }}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"col-md-2 col-lg-1\\\">\\r\\n        <div class=\\\"userImageSection\\\">\\r\\n          <mat-icon class=\\\"userImage\\\">account_circle</mat-icon>\\r\\n          <div class=\\\"image-upload\\\">\\r\\n            <label for=\\\"file-input\\\">\\r\\n              <img src=\\\"assets/uploadPhoto.png\\\" title=\\\"Upload Image\\\" />\\r\\n            </label>\\r\\n            <input id=\\\"file-input\\\" type=\\\"file\\\" />\\r\\n          </div>\\r\\n          <button class=\\\"deletePhoto\\\" mat-raised-button title=\\\"Delete Image\\\">\\r\\n            <i class=\\\"fa fa-times-thin\\\"></i>\\r\\n          </button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"pt-1 form-group col-md-4 col-lg-3\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"First Name\\\" id=\\\"firstName\\\" formControlName=\\\"firstName\\\" required />\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      <div class=\\\"pt-1 form-group col-md-4 col-lg-3\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"Last Name\\\" id=\\\"lastName\\\" formControlName=\\\"lastName\\\" required />\\r\\n          </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group pt-1 col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"User Name\\\" id=\\\"userName\\\" formControlName=\\\"userName\\\" pattern=\\\"^(?!\\\\s*$)(?!.*__.*)[-a-zA-Z0-9_.]*$\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-select placeholder=\\\"Designation\\\" formControlName=\\\"designationId\\\" required>\\r\\n              <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n              <mat-option *ngFor=\\\"let designation of designationList\\\" [value]=\\\"designation.designationId\\\">{{designation.title}}</mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n       <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"Email ID\\\" id=\\\"emailID\\\" formControlName=\\\"email\\\" pattern=\\\"\\\\w+@\\\\w+\\\\.\\\\w+(,\\\\s*\\\\w+@\\\\w+\\\\.\\\\w+)*\\\" required />\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"Contact Number\\\" id=\\\"contactNumber\\\" formControlName=\\\"contactNumber\\\" required\\r\\n                 pattern=\\\"[0-9# '+-]*\\\" type=\\\"tel\\\" maxlength=\\\"15\\\" />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Role\\\" formControlName=\\\"b2BRoleId\\\" required>\\r\\n            <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n            <mat-option *ngFor=\\\"let role of roleList\\\" [value]=\\\"role.id\\\">{{role.name}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"col-md-4 col-lg-3 mb-0 mt-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput [matDatepicker]=\\\"activationDate\\\" placeholder=\\\"Activation Date\\\" formControlName=\\\"activationDate\\\" [min]=\\\"todaysDate\\\"\\r\\n                 [required]=\\\"!isEdit\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"activationDate\\\">\\r\\n            <mat-icon matDatepickerToggleIcon>\\r\\n              <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </mat-icon>\\r\\n          </mat-datepicker-toggle>\\r\\n          <mat-datepicker #activationDate></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\" *ngIf=\\\"operation == 'edit'\\\">\\r\\n      <div class=\\\"col-md-4 col-lg-3 mt-3\\\">\\r\\n        <div class=\\\"form-check form-check-inline\\\">\\r\\n          <mat-checkbox formControlName=\\\"inActivateUser\\\" [checked]= \\\"isInactiveDateRequired\\\" (change)= \\\"toggleDeactivationDate($event)\\\">Inactivate User</mat-checkbox>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\" *ngIf=\\\"isInactiveDateRequired == true\\\">\\r\\n      <div class=\\\"col-md-4 col-lg-3 mt-4 pt-2 mb-0\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput [matDatepicker]=\\\"deActivationDate\\\" placeholder=\\\"Inactivation Date\\\" formControlName=\\\"deActivationDate\\\" [min]=\\\"todaysDate\\\"\\r\\n                   [required] = \\\"isInactiveDateRequired\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"deActivationDate\\\">\\r\\n            <mat-icon matDatepickerToggleIcon>\\r\\n              <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </mat-icon>\\r\\n          </mat-datepicker-toggle>\\r\\n          <mat-datepicker #deActivationDate></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 controlButtons\\\">\\r\\n        <button title=\\\"Save\\\" type=\\\"submit\\\" class=\\\"genericButton activeButton mat-primary mr-2\\\" [disabled]=\\\"!agentForm.valid\\\" mat-raised-button>Save</button>\\r\\n        <button title=\\\"Cancel\\\" type=\\\"submit\\\" class=\\\"genericButton defaultButton\\\" mat-raised-button (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-info/agent-user-info.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/agent-user/agent-user-info/agent-user-info.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserDataService } from '../../../common/backoffice-shared/services/user-data.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AgentInfoViewModel } from '../../../viewmodel/usersviewmodel/agentinfoviewmodel';\nimport { AgencyViewModel } from '../../../viewmodel/usersviewmodel/agencyviewmodel';\nimport { DesignationViewModel } from '../../../viewmodel/usersviewmodel/designationviewmodel';\nimport { MgRoleViewModel } from '../../../viewmodel/usersviewmodel/mgrolelistviewmodel';\nimport { BackofficeLookupService } from '../../../common/backoffice-shared/services/backoffice-lookup';\nimport { BranchViewModel } from '../../../viewmodel/usersviewmodel/branchviewmodel';\nimport { Observable } from 'rxjs/Observable';\nimport {startWith} from 'rxjs/operators/startWith';\nimport { map } from 'rxjs/operators/map';\nimport { MatSnackBar , NativeDateAdapter, DateAdapter, MAT_DATE_FORMATS} from '@angular/material';\nimport { UserProfileService } from '../../../../common/shared/services/user-profile.service';\nimport { BACKOFFICECONSTANTS } from '../../../common/constants';\n\nconst DATE_FORMATS = {\n  parse: {\n    dateInput: { month: 'short', year: 'numeric', day: 'numeric' }\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  }\n};\n\nexport class DatePickerDateAdapter extends NativeDateAdapter {\n  format(date: Date, displayFormat: Object): string {\n    date.setMinutes((date.getTimezoneOffset() * -1));\n    if (displayFormat === 'input') {\n      const day = date.getDate();\n      const month = date.toLocaleString('en-us', { month: 'long' });\n      const year = date.getFullYear();\n      return this._to2digit(day) + '-' + month.substring(0, 3) + '-' + year % 100;\n    } else {\n      return date.toDateString();\n    }\n  }\n\n  private _to2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n}\n\n@Component({\n  selector: 'app-agent-user-info',\n  templateUrl: './agent-user-info.component.html',\n  styleUrls: ['./agent-user-info.component.css'],\n  providers: [\n    { provide: DateAdapter, useClass: DatePickerDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS },\n  ]\n})\n\nexport class AgentUserInfoComponent implements OnInit {\n  operation: string;\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  agentId: string;\n  agentInfo: AgentInfoViewModel = <AgentInfoViewModel>{};\n  agentForm: FormGroup;\n  designationList: DesignationViewModel[];\n  roleList: MgRoleViewModel[];\n  agencyList: AgencyViewModel[] = [];\n  branchList: BranchViewModel[] = [];\n  public todaysDate = new Date();\n  filteredOptions: Observable<AgencyViewModel[]>;\n  filteredBranchOptions: Observable<BranchViewModel[]>;\n  isEdit = false;\n  isInactiveDateRequired: boolean;\n  direction = 1;\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute,\n    public lookupService: BackofficeLookupService,\n    private userDataService: UserDataService,\n    private snackBar: MatSnackBar,\n    private cd: ChangeDetectorRef,\n    private userProfileService: UserProfileService) { }\n\n  ngOnInit() {\n    this.operation = this.activatedRoute.snapshot.params['operation'];\n    this.agentId = this.activatedRoute.snapshot.params['id'];\n\n    this.agentForm = new FormGroup({\n      agency: new FormControl('', Validators.required),\n      branch: new FormControl('' , Validators.required),\n      userName: new FormControl('', Validators.required),\n      firstName: new FormControl('', Validators.required),\n      lastName: new FormControl('', Validators.required),\n      designationId: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      contactNumber: new FormControl('', Validators.required),\n      b2BRoleId: new FormControl('', Validators.required),\n      activationDate: new FormControl(''),\n      inActivateUser: new FormControl(''),\n      deActivationDate: new FormControl(''),\n    });\n\n    if (this.operation.toLowerCase().trim() === this.edit) {\n      this.isEdit = true;\n      this.agentForm.controls.activationDate.disable();\n      this.getAgentUser(this.agentId);\n    }\n\n    this.getDesignations();\n    this.getRoles();\n    this.getAgencies();\n\n    this.filteredOptions = this.agentForm.controls.agency.valueChanges\n    .pipe(\n      startWith(''),\n      map(val => this.filter(val.toString()))\n    );\n\n    this.filteredBranchOptions = this.agentForm.controls.branch.valueChanges\n    .pipe(\n      startWith(''),\n      map(val => this.filterBranch(val.toString()))\n    );\n  }\n\n  filter(val: string): AgencyViewModel[] {\n    if (this.agencyList.length > 0 ) {\n    return this.agencyList.filter(option =>\n       option.name.toString().toLowerCase().indexOf(val.toString().toLowerCase()) === 0);\n    }\n  }\n\n  filterBranch(val: string): BranchViewModel[] {\n    if (this.branchList.length > 0) {\n    return this.branchList.filter(option =>\n       option.name.toString().toLowerCase().indexOf(val.toString().toLowerCase()) === 0);\n    }\n  }\n\n  displayFn(val: AgencyViewModel) {\n    return val ? val.name + ' - ' + val.code : val ;\n  }\n\n  displayBranchFn(val: BranchViewModel) {\n    return val ? val.name : val ;\n  }\n\n  toggleDeactivationDate(event) {\n    this.isInactiveDateRequired = event.checked;\n    if (event.checked) {\n    this.agentForm.controls.deActivationDate.enable();\n    } else {\n    this.agentForm.controls.deActivationDate.disable();\n    }\n    this.cd.detectChanges();\n  }\n\n  getDesignations() {\n    this.lookupService.getDesignationByType(CONSTANTS.userType.agentuser).subscribe(designationData =>\n      this.designationList = designationData\n    );\n  }\n\n  getRoles() {\n    this.lookupService.getRolesByApplicationName(CONSTANTS.application.b2b, BACKOFFICECONSTANTS.userType.agentUser).subscribe(data =>\n      this.roleList = data\n    );\n  }\n\n  getAgencies() {\n    this.agencyList = this.activatedRoute.snapshot.data['agencies'];\n  }\n\n  getBranches(agencyId) {\n    this.branchList.splice(0, this.branchList.length);\n    this.agentForm.get('branch').setValue('');\n    if (agencyId !== null) {\n      this.lookupService.getAgencyBranches(agencyId).subscribe(data =>\n        this.branchList = data\n      ); }\n  }\n\n  saveAgent() {\n    const agent = Object.assign({}, this.agentInfo, this.agentForm.value);\n    agent.agencyId = agent.agency.id;\n    agent.branchId = agent.branch.id;\n    agent.userName = agent.agency.code  + '__' +   agent.userName;\n    agent.updatedBy = this.userProfileService.GetBasicUserInfo().FirstName + ' ' +\n                          this.userProfileService.GetBasicUserInfo().LastName;\n\n    if (this.operation === this.create) {\n      agent.createdBy = this.userProfileService.GetBasicUserInfo().FirstName + ' ' +\n                            this.userProfileService.GetBasicUserInfo().LastName;\n\n      this.userDataService.createAgentUser(agent as AgentInfoViewModel)\n        .subscribe(data => {\n          if (data.succeeded === true ) {\n            this.snackBar.open('New agent is created successfully', '', { duration:  CONSTANTS.toasterTimeOut.duration,\n              verticalPosition: 'top', panelClass: 'showSnackBar'});\n            this.router.navigate(['/usermgmt/agentusers']);\n          } else {\n            // TODO: Need to check how we are doing error handling.\n            this.snackBar.open('Error occourred while saving Agent. ' + data.errors[0].description ,\n            '', { duration:  CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n          }\n        });\n      } else {\n        agent.createdBy = this.agentInfo.createdBy;\n        if (this.isInactiveDateRequired) {\n          agent.inActivationType = CONSTANTS.inActiveType.permanent;\n        } else {\n          agent.inActivationType = '';\n          agent.deActivationDate = '';\n        }\n        this.userDataService.updateAgentUser(this.agentId, agent as AgentInfoViewModel)\n        .subscribe(data => {\n          if (data.succeeded === true ) {\n            this.snackBar.open('The agent is updated successfully', '', { duration: CONSTANTS.toasterTimeOut.duration,\n              verticalPosition: 'top', panelClass: 'showSnackBar'});\n            this.router.navigate(['/usermgmt/agentusers']);\n          } else {\n            // TODO: Need to check how we are doing error handling.\n            this.snackBar.open('Error occourred while updating Agent. ' + data.errors[0].description ,\n            '', { duration:  CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n          }\n        });\n      }\n  }\n\n  cancel() {\n    window.scrollTo(0, 0);\n    this.router.navigate(['/usermgmt/agentusers']);\n  }\n\n  getAgentUser(agentId) {\n    this.userDataService.getAgentUserById(agentId).subscribe(\n      (data) => {\n        this.agentInfo = data;\n        this.isInactiveDateRequired = false;\n        this.getBranches(data.agency.id);\n        this.agentForm.get('email').setValue(data.email);\n        this.agentForm.get('designationId').setValue(data.designationId);\n        this.agentForm.get('contactNumber').setValue(data.contactNumber);\n        this.agentForm.get('b2BRoleId').setValue(data.b2BRoleId);\n        this.agentForm.get('activationDate').setValue(data.activationDate);\n        if (data.deActivationDate !== null && data.deActivationDate !== undefined) {\n          this.isInactiveDateRequired = true;\n          this.agentForm.get('deActivationDate').setValue(data.deActivationDate);\n        }\n        this.agentForm.get('firstName').setValue(data.firstName);\n        this.agentForm.get('lastName').setValue(data.lastName);\n        const val =  data.userName.split('__');\n        const userName = val[1];\n        this.agentForm.get('userName').setValue(userName);\n        this.agentForm.get('agency').setValue(data.agency);\n        this.agentForm.get('branch').setValue(data.branch);\n     }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-info/agent-user-info.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".usernameTH{\\r\\n    width: 9%;\\r\\n}\\r\\n.agencyTH{\\r\\n    width: 10%;\\r\\n    padding-left: 0;\\r\\n    padding-right: 0;\\r\\n}\\r\\n.branchTH{\\r\\n    width:10%;\\r\\n    padding-left: 0;\\r\\n    padding-right: 0;\\r\\n}\\r\\n.designationTH{\\r\\n    width:10%;\\r\\n}\\r\\n.emailTH {\\r\\n  width: 11%;\\r\\n}\\r\\n.userApplicationRoleTH{\\r\\n    width:9%;\\r\\n}\\r\\n.activationTH{\\r\\n    width: 13%;\\r\\n    padding-right: 0;\\r\\n}\\r\\n.userStatusTH{\\r\\n    width: 6%;\\r\\n    padding-left: 5px;\\r\\n    padding-right: 0;\\r\\n}\\r\\n.userActionTH {\\r\\n  width: 7%;\\r\\n  padding-right: 0;\\r\\n}\\r\\n\\r\\n.firstnameTH{\\r\\n  width:14%;\\r\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-list/agent-user-list.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/agent-user/agent-user-list/agent-user-list.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"mt-4 pt-2\\\">\\r\\n    <h1 class=\\\"mainHeading pb-0 borderBottomNone\\\">Agents</h1>\\r\\n    <div class=\\\"row mt-4 mb-0\\\">\\r\\n      <form [formGroup]=\\\"searchUsers\\\" (ngSubmit)=\\\"findUsers(searchUsers.get('searchText').value,searchUsers.get('startDate').value,searchUsers.get('endDate').value)\\\"\\r\\n            class=\\\"w-100\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"lightBlueContainer pb-0 pl-4 pr-4 pt-4 mb-4\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n\\r\\n                  <div class=\\\"col-md-7 pr-5\\\">\\r\\n                    <mat-form-field>\\r\\n                      <input matInput placeholder=\\\"Search by User Name, Agency Name, Agency Code, Branch Name, Email Id, Designation, Roles, Activation date \\\" formControlName=\\\"searchText\\\" (keydown.backspace)=\\\"checkIsInputCleared()\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-md-2 pl-0\\\">\\r\\n                    <mat-form-field class=\\\"width80percent\\\">\\r\\n                      <span matPrefix>From &nbsp;</span>\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"sdate\\\">\\r\\n                        <mat-icon matDatepickerToggleIcon>\\r\\n                          <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </mat-icon>\\r\\n                      </mat-datepicker-toggle>\\r\\n                      <input matInput [matDatepicker]=\\\"sdate\\\" placeholder=\\\"DD-MMM-YY\\\" formControlName=\\\"startDate\\\">\\r\\n                      <mat-datepicker #sdate></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n                    <span class=\\\"btn transparent-circle smallDeleteIcon ml-1\\\" title=\\\"Delete\\\">\\r\\n                      <i class=\\\"fa fa-times-thin\\\" aria-hidden=\\\"true\\\" (click)=\\\"checkIsFromDateCleared();\\\"></i>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2 pr-4\\\">\\r\\n                    <mat-form-field class=\\\"width80percent\\\">\\r\\n                      <span matPrefix>To &nbsp;</span>\\r\\n                      <input matInput [matDatepicker]=\\\"enddate\\\" placeholder=\\\"DD-MMM-YY\\\" formControlName=\\\"endDate\\\" [min]=\\\"searchUsers.get('startDate').value\\\">\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"enddate\\\">\\r\\n                        <mat-icon matDatepickerToggleIcon>\\r\\n                          <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </mat-icon>\\r\\n                      </mat-datepicker-toggle>\\r\\n                      <mat-datepicker #enddate></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n                    <span class=\\\"btn transparent-circle smallDeleteIcon ml-1\\\" title=\\\"Delete\\\">\\r\\n                      <i class=\\\"fa fa-times-thin\\\" aria-hidden=\\\"true\\\" (click)=\\\"checkIsToDateCleared();\\\"></i>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                 \\r\\n                  <div class=\\\"col-md-1 top10px controlButtons\\\">\\r\\n                    <button title=\\\"Search\\\" type=\\\"submit\\\" class=\\\"genericButton genericSmallButton activeButton mat-primary\\\" mat-raised-button>Search</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 pt-4 mt-2 pb-3 mb-1 controlButtons\\\">\\r\\n        <button title=\\\"Create New Agent\\\" type=\\\"submit\\\" class=\\\"btn defaultButton genericButton genericSmallButton\\\" mat-raised-button\\r\\n                (click)=\\\"createAgent()\\\">\\r\\n          <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i><span>Create New Agent</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <mat-table #table [dataSource]='!isSearch ? dataSource: filteredData' matSort (matSortChange)=\\\"sortData($event)\\\" matSortActive=\\\"activationDate\\\" matSortDirection=\\\"desc\\\" class=\\\"flexNone genericTable mb-4 pb-1 mat-table\\\">\\r\\n      <ng-container matColumnDef=\\\"firstName\\\">\\r\\n        <mat-header-cell class=\\\"firstnameTH alignItemCenter\\\" *matHeaderCellDef mat-sort-header> First/Last Name </mat-header-cell>\\r\\n        <mat-cell class=\\\"firstnameTH\\\" *matCellDef=\\\"let element\\\"><div class=\\\"d-flex\\\"><div><mat-icon class=\\\"userIcon alignItemCenter\\\">account_circle</mat-icon></div><span class=\\\"pl-1 alignItemCenter\\\">{{element.firstName}} {{element.lastName}}</span></div></mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"userName\\\">\\r\\n        <mat-header-cell class=\\\"usernameTH\\\" *matHeaderCellDef mat-sort-header> User Name </mat-header-cell>\\r\\n        <mat-cell class=\\\"usernameTH\\\" *matCellDef=\\\"let element\\\"> {{element.userName}} </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"agencyName\\\">\\r\\n        <mat-header-cell class=\\\"agencyTH\\\" *matHeaderCellDef mat-sort-header> <div>Agency Name/<div>Code</div></div></mat-header-cell>\\r\\n        <mat-cell class=\\\"agencyTH\\\" *matCellDef=\\\"let element\\\"> {{element.agencyName}} - {{element.agencyCode}} </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"branchName\\\">\\r\\n        <mat-header-cell class=\\\"branchTH\\\" *matHeaderCellDef mat-sort-header> Branch Name </mat-header-cell>\\r\\n        <mat-cell class=\\\"branchTH\\\" *matCellDef=\\\"let element\\\"> {{element.branchName}} </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"designation\\\">\\r\\n        <mat-header-cell class=\\\"designationTH\\\" *matHeaderCellDef mat-sort-header> Designation </mat-header-cell>\\r\\n        <mat-cell class=\\\"designationTH\\\" *matCellDef=\\\"let element\\\"> {{element.designation}} </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"email\\\">\\r\\n        <mat-header-cell class=\\\"emailTH\\\" *matHeaderCellDef mat-sort-header> Email ID </mat-header-cell>\\r\\n        <mat-cell class=\\\"emailTH\\\" *matCellDef=\\\"let element\\\"> {{element.email}} </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"userApplicationRole\\\">\\r\\n        <mat-header-cell class=\\\"userApplicationRoleTH\\\" *matHeaderCellDef mat-sort-header>\\r\\n          Role\\r\\n        </mat-header-cell>\\r\\n        <mat-cell class=\\\"userApplicationRoleTH\\\" *matCellDef=\\\"let element\\\">\\r\\n          <ng-container *ngFor=\\\"let c of element.userApplicationRole\\\">\\r\\n            <span class=\\\"d-block\\\"> {{c.roleName}}</span>\\r\\n          </ng-container>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"activationDate\\\">\\r\\n        <mat-header-cell class=\\\"activationTH\\\" *matHeaderCellDef mat-sort-header>\\r\\n          <div>Activation/<div>Inactivation Date</div></div>\\r\\n        </mat-header-cell>\\r\\n        <mat-cell class=\\\"activationTH\\\" *matCellDef=\\\"let element\\\">\\r\\n          <span class=\\\"d-block\\\">{{element.activationDate | date : \\\"dd-MMM-yy\\\"}}<span *ngIf=\\\"!element.isActive && element.deActivationDate != null\\\">/</span></span>\\r\\n          <ng-container *ngIf=\\\"!element.isActive && element.deActivationDate != null \\\">\\r\\n            {{element.deActivationDate | date : \\\"dd-MMM-yy\\\"}}\\r\\n          </ng-container>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"isActive\\\">\\r\\n        <mat-header-cell class=\\\"userStatusTH noOutlineOnFocus\\\" *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\\r\\n        <mat-cell class=\\\"userStatusTH\\\" *matCellDef=\\\"let element\\\">\\r\\n          <ng-container *ngIf=\\\" element.isActive == true\\\">\\r\\n            <i class=\\\"fa fa-circle active_status\\\" aria-hidden=\\\"true\\\"></i>Active\\r\\n          </ng-container>\\r\\n          <ng-container *ngIf=\\\"!element.isActive\\\">\\r\\n            <i class=\\\"fa fa-circle deactivate_status\\\" aria-hidden=\\\"true\\\"></i>Inactive\\r\\n          </ng-container>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"actions\\\" class=\\\"text-center\\\">\\r\\n        <mat-header-cell class=\\\"userActionTH noOutlineOnFocus\\\" *matHeaderCellDef> </mat-header-cell>\\r\\n        <mat-cell class=\\\"userActionTH placeholderColorGray\\\" *matCellDef=\\\"let element\\\">\\r\\n          <mat-select placeholder=\\\"Actions\\\" name=\\\"Actions\\\" [(ngModel)]=\\\"actions\\\">\\r\\n            <ng-container *ngIf=\\\"element.isActive== true \\\">\\r\\n              <mat-option value=\\\"{{element.id}}:edit\\\" #edit (click)=\\\"goUserUpdate(edit.value)\\\">Edit</mat-option>\\r\\n            </ng-container>\\r\\n            <mat-option value=\\\"{{element.id}}:delete\\\" #delete (click)=\\\"goUserDelete(delete.value)\\\">Delete</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n    </mat-table>\\r\\n    <div style=\\\"color:orange\\\" *ngIf=\\\"noDataAvailable\\\">\\r\\n      No Agent is created.\\r\\n    </div>\\r\\n    <div style=\\\"color:orange\\\" *ngIf=\\\"noRecordsFound\\\">\\r\\n      No Agent user record found.\\r\\n    </div>\\r\\n    <div class=\\\"paginationWrapper\\\">\\r\\n      <span class=\\\"pageCount\\\" *ngIf=\\\"!noDataAvailable\\\">\\r\\n        Page: {{(pageEvent) ? pageEvent.pageIndex + 1 : 1}} of {{\\r\\n(pageEvent) ? Math.ceil(pageEvent.length/pageEvent.pageSize)\\r\\n        : Math.ceil(totalRecords/20)\\r\\n        }}\\r\\n      </span>\\r\\n      <mat-paginator *ngIf=\\\"!noDataAvailable\\\" class=\\\"genericPagination\\\" (page)=\\\"pageEvent = $event\\\" #paginator [pageSize]=\\\"20\\\"\\r\\n                     [pageSizeOptions]=\\\"[5, 10, 20]\\\">\\r\\n      </mat-paginator>\\r\\n    </div>\\r\\n    <!-- <mat-paginator #paginator class=\\\"genericPagination\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\"></mat-paginator> -->\\r\\n  </div>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-list/agent-user-list.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/agent-user/agent-user-list/agent-user-list.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { NativeDateAdapter, DateAdapter, MAT_DATE_FORMATS, MatTableDataSource, MatPaginator,\n        MatSort, Sort, PageEvent, MatSnackBar } from '@angular/material';\nimport { DatePipe } from '@angular/common';\nimport { DialogsService } from '../../../common/backoffice-shared/dialogs/dialogs.service';\nimport { Agentuserlistviewmodel } from '../../../viewmodel/usersviewmodel/agentuserlistviewmodel';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UserDataService } from '../../../common/backoffice-shared/services/user-data.service';\n\nconst DATE_FORMATS = {\n  parse: {\n    dateInput: { month: 'short', year: 'numeric', day: 'numeric' }\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  }\n};\nexport class DatePickerDateAdapter extends NativeDateAdapter {\n  format(date: Date, displayFormat: Object): string {\n    date.setMinutes((date.getTimezoneOffset() * -1));\n    if (displayFormat === 'input') {\n      const day = date.getDate();\n      const month = date.toLocaleString('en-us', { month: 'long' });\n      const year = date.getFullYear();\n      return this._to2digit(day) + '-' + month.substring(0, 3) + '-' + year % 100;\n    } else {\n      return date.toDateString();\n    }\n  }\n\n  private _to2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n}\n@Component({\n  selector: 'app-agent-user-list',\n  templateUrl: './agent-user-list.component.html',\n  styleUrls: ['./agent-user-list.component.css'],\n  providers: [DatePipe, DialogsService,\n    { provide: DateAdapter, useClass: DatePickerDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS },\n  ]\n})\nexport class AgentUserListComponent implements OnInit {\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  operation: string;\n  dataSource: MatTableDataSource<Agentuserlistviewmodel>;\n  displayedColumns = ['firstName', 'userName', 'agencyName', 'branchName', 'designation', 'email', 'userApplicationRole' ,\n   'activationDate', 'isActive', 'actions'];\n  searchUsers: FormGroup;\n  filteredData: MatTableDataSource<Agentuserlistviewmodel>;\n  isSearch: boolean;\n  actions: string;\n  result: any;\n  isAppRoleData: boolean;\n  isDesignationData: boolean;\n  agentUserList: Agentuserlistviewmodel[];\n  noDataAvailable: boolean;\n  noRecordsFound: boolean;\n  pageEvent: PageEvent;\n  Math: any;\n  totalRecords: number;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  @Input()\n  _dateValue;\n\n  constructor(  private agentUserDataService: UserDataService,\n    private dialogsService: DialogsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    public datepipe: DatePipe,\n    public snackBar: MatSnackBar ) {this.Math = Math; }\n\n  ngOnInit() {\n    this.getAgentUserList();\n    this.isSearch = false;\n    this.searchUsers = new FormGroup({\n      startDate: new FormControl(),\n      endDate: new FormControl(),\n      searchText: new FormControl()\n    });\n  }\n  findUsers(filterValue: string, filterFrom: string, filterTo: string) {\n    if (filterFrom !== null || filterTo !== null || (filterValue !== null && filterValue.length >= 3)) {\n      this.isSearch = true;\n    }\n    if (filterFrom !== null) {\n      filterFrom = this.datepipe.transform(filterFrom, 'yyyy-MM-dd');\n    }\n    if (filterTo !== null) {\n      filterTo = this.datepipe.transform(filterTo, 'yyyy-MM-dd');\n    }\n    if (filterValue !== null) {\n      filterValue = filterValue.trim();\n      filterValue = filterValue.toLowerCase();\n    }\n\n    this.filteredData = new MatTableDataSource<Agentuserlistviewmodel>(this.agentUserList.filter(user => {\n      const searchActivationDate = this.datepipe.transform(user.activationDate, 'dd-MMM-yy hh:mm a');\n      const activationDate = this.datepipe.transform(user.activationDate, 'yyyy-MM-dd');\n      if (filterValue !== null && (filterFrom === null && filterTo === null)) {\n        return this.filterUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue);\n      } else if (filterFrom !== null && (filterTo === null && filterValue === null)) {\n        return activationDate >= filterFrom;\n      } else if (filterTo !== null && (filterFrom === null && filterValue === null)) {\n        return activationDate <= filterTo;\n      } else if (filterValue === null && (filterFrom !== null && filterTo !== null)) {\n        return filterFrom <= activationDate && activationDate <= filterTo;\n      } else if (filterFrom === null && (filterValue !== null && filterTo !== null)) {\n        return (this.filterUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) && activationDate <= filterTo;\n      } else if (filterTo === null && (filterFrom !== null && filterValue !== null)) {\n        return (this.filterUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) &&\n        activationDate >= filterFrom;\n      } else if (filterFrom !== null && filterTo !== null && filterValue !== null) {\n        return (this.filterUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) &&\n          (filterFrom <= activationDate && activationDate <= filterTo);\n      }\n    }));\n    if (this.filteredData.data.length === 0) {\n      this.noRecordsFound = true ;\n    }\n    this.filteredData.paginator = this.paginator;\n    this.filteredData.sort = this.sort;\n\n  }\n  filterUser(agentUser: Agentuserlistviewmodel, filterValue: string) {\n    this.isAppRoleData = false;\n    this.isDesignationData = false;\n    for (let i = 0; i < agentUser.userApplicationRole.length; i++) {\n      if (agentUser.userApplicationRole[i].roleName.toLowerCase().includes(filterValue)) {\n        this.isAppRoleData = true;\n        break;\n      }\n    }\n\n    return agentUser.firstName.toLowerCase().includes(filterValue) ||\n    agentUser.email.toLowerCase().includes(filterValue) ||\n    agentUser.lastName.toLowerCase().includes(filterValue) ||\n    agentUser.userName.toLowerCase().includes(filterValue) ||\n    agentUser.designation.toLowerCase().includes(filterValue) ||\n    agentUser.branchName.toLowerCase().includes(filterValue) ||\n    agentUser.agencyName.toLowerCase().includes(filterValue) ||\n    agentUser.agencyCode.toLowerCase().includes(filterValue) ||\n    this.isAppRoleData || this.isDesignationData ;\n  }\n  checkIsInputCleared() {\n    if (this.searchUsers.get('searchText').value.length === 1 &&\n    this.searchUsers.get('startDate').value === null &&\n    this.searchUsers.get('endDate').value === null) {\n      this.filteredData = new MatTableDataSource<Agentuserlistviewmodel>(this.agentUserList);\n      this.filteredData.paginator = this.paginator;\n      this.filteredData.sort = this.sort;\n      this.isSearch = false;\n      this.noRecordsFound = false;\n    }\n  }\n  checkIsFromDateCleared() {\n    this.searchUsers.get('startDate').setValue(null);\n    if ((this.searchUsers.get('searchText').value === null || this.searchUsers.get('searchText').value === '') &&\n      this.searchUsers.get('endDate').value === null) {\n      this.getAgentUserList();\n    }\n  }\n  checkIsToDateCleared() {\n    this.searchUsers.get('endDate').setValue(null);\n    if ((this.searchUsers.get('searchText').value === null || this.searchUsers.get('searchText').value === '') &&\n      this.searchUsers.get('startDate').value === null) {\n      this.getAgentUserList();\n    }\n  }\n\n  sortData(sort: Sort) {\n    const data = this.agentUserList.slice();\n    if (!sort.active || sort.direction === '') {\n      this.dataSource.data =  data.sort((a, b) => {\n        const isAsc = sort.direction === 'desc';\n           return compare(a.activationDate, b.activationDate, isAsc);\n      });\n      return;\n    }else {\n      if (this.isSearch) {\n        this.filteredData.data = this.filteredData.data.sort((a, b) => {\n          const isAsc = sort.direction === 'asc';\n          switch (sort.active) {\n            case 'firstName': return compare(a.firstName.toLowerCase(), b.firstName.toLowerCase(), isAsc);\n            case 'userName': return compare(a.userName.toLowerCase(), b.userName.toLowerCase(), isAsc);\n            case 'email': return compare(a.email.toLowerCase(), b.email.toLowerCase(), isAsc);\n            case 'designation': return compare(a.designation, b.designation, isAsc);\n            case 'branchName': return compare(a.branchName, b.branchName, isAsc);\n            case 'agencyName': return compare(a.agencyName, b.agencyName, isAsc);\n            case 'userApplicationRole':\n            return compare((a.userApplicationRole.length === 0) ? '' :\n            a.userApplicationRole[0].roleName, (b.userApplicationRole.length === 0) ? '' :\n            b.userApplicationRole[0].roleName, isAsc);\n            case 'activationDate': return compare(a.activationDate, b.activationDate, isAsc);\n            case 'isActive': return compare(a.isActive, b.isActive, isAsc);\n            default: return 0;\n          }\n        });\n        this.filteredData.paginator = this.paginator;\n      }\n      this.dataSource.data = data.sort((a, b) => {\n        const isAsc = sort.direction === 'asc';\n        switch (sort.active) {\n          case 'firstName': return compare(a.firstName.toLowerCase(), b.firstName.toLowerCase(), isAsc);\n          case 'userName': return compare(a.userName.toLowerCase(), b.userName.toLowerCase(), isAsc);\n            case 'email': return compare(a.email.toLowerCase(), b.email.toLowerCase(), isAsc);\n            case 'designation': return compare(a.designation, b.designation, isAsc);\n            case 'branchName': return compare(a.branchName, b.branchName, isAsc);\n            case 'agencyName': return compare(a.agencyName, b.agencyName, isAsc);\n            case 'agencyCode': return compare(a.agencyCode, b.agencyCode, isAsc);\n            case 'userApplicationRole':\n            return compare((a.userApplicationRole.length === 0) ? '' :\n            a.userApplicationRole[0].roleName, (b.userApplicationRole.length === 0) ? '' :\n            b.userApplicationRole[0].roleName, isAsc);\n            case 'activationDate': return compare(a.activationDate, b.activationDate, isAsc);\n            case 'isActive': return compare(a.isActive, b.isActive, isAsc);\n            default: return 0;\n        }\n      });\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n  createAgent() {\n    this.router.navigate(['../agentusers', 0, this.create], { relativeTo: this.activatedRoute });\n  }\n\n  getAgentUserList() {\n      this.isSearch = false;\n      this.agentUserDataService.getAgentUsers().subscribe((agentUsersList) => {\n      this.agentUserList = agentUsersList;\n      agentUsersList.forEach(element => {\n        element.userName = element.userName.split('__')[1];\n      });\n      this.dataSource = new MatTableDataSource<Agentuserlistviewmodel>(this.agentUserList);\n      this.totalRecords = this.agentUserList.length;\n      this.dataSource.sort = this.sort;\n      if ( agentUsersList.length === 0) {\n        this.noDataAvailable = true;\n      } else {\n        this.noDataAvailable = false;\n      }\n      this.dataSource.paginator = this.paginator;\n    });\n }\n deleteAgentUser(agentUserId) {\n  this.agentUserDataService.deleteAgentUser(agentUserId).subscribe(data => {\n        window.scrollTo(0, 0);\n        this.snackBar.open('The user is deleted successfully', '', { duration: CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top',\n        panelClass: 'showSnackBar'});\n    this.getAgentUserList();\n  });\n}\n  goUserDelete(value) {\n    const val = value.split(':');\n    const agentUserId = val[0];\n    this.dialogsService\n      .confirm('Confirm', 'Are you sure you want to delete this user?').subscribe(res => {\n        this.result = res;\n        if (this.result) {\n          this.deleteAgentUser(agentUserId);\n        } else {\n          this.actions = null;\n        }\n      });\n  }\n  goUserUpdate(value) {\n    const val = value.split(':');\n    const agentUserId = val[0];\n    this.operation = val[1];\n    this.router.navigate(['../agentusers', agentUserId, this.operation.trim().toLowerCase()], { relativeTo: this.activatedRoute });\n  }\n\n\n}\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-list/agent-user-list.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-type/hotel-type.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/hotel-type/hotel-type.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid pt-4\\\">\\r\\n  <div class=\\\"customBreadcrumb mb-4\\\">\\r\\n    <span>Hotel/Supplier </span>\\r\\n    <span *ngIf=\\\"operation == 'create'\\\">&gt;  Create New Hotel/Supplier User </span>\\r\\n    <span *ngIf=\\\"operation == 'edit'\\\">&gt;  Edit Hotel/Supplier User </span>\\r\\n  </div>\\r\\n  <h1 *ngIf=\\\"operation == 'create'\\\" class=\\\"mainHeading customBreadcrumb borderBottomNone\\\">Create New Hotel/Supplier User<span class=\\\"mandatoryInfo\\\">Indicates Mandatory Fields</span></h1>\\r\\n  <h1 *ngIf=\\\"operation == 'edit'\\\" class=\\\"mainHeading mb-4 customBreadcrumb borderBottomNone\\\">Edit Hotel/Supplier User<span class=\\\"mandatoryInfo\\\">Indicates Mandatory Fields</span></h1>\\r\\n  <form #mgHotelForm=\\\"ngForm\\\">\\r\\n    <div *ngIf=\\\"operation == 'create'\\\" class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group col-md-5 pt-4\\\">\\r\\n        <div>\\r\\n          <label>Type</label>\\r\\n          <mat-radio-group class=\\\"d-flex\\\">\\r\\n            <mat-radio-button value=\\\"1\\\" [routerLink]=\\\"['hoteluserinfo',0,create]\\\" routerLinkActive=\\\"active\\\">Hotel Chain</mat-radio-button>\\r\\n            <mat-radio-button value=\\\"2\\\" [routerLink]=\\\"['individual',0,create]\\\" routerLinkActive=\\\"active\\\">Individual Hotels</mat-radio-button>\\r\\n            <mat-radio-button value=\\\"3\\\" [routerLink]=\\\"['supplieruser',0,create]\\\" routerLinkActive=\\\"active\\\">Supplier</mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n  <div class=\\\"body-style\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- <div>\\r\\n  <app-hotel-type-nav-menu [hotelType] = \\\"hoteltype\\\"></app-hotel-type-nav-menu>\\r\\n</div>\\r\\n<div >\\r\\n  <div class=\\\"body-style\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div> -->\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-type/hotel-type.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/hotel-type/hotel-type.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CONSTANTS } from '../../../../common/constants';\n\n@Component({\n  selector: 'app-hotel-type',\n  templateUrl: './hotel-type.component.html',\n  styleUrls: ['./hotel-type.component.css']\n})\nexport class HotelTypeComponent implements OnInit {\n\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  operation: string;\n\n  constructor(private router: Router,\n    private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.operation = this.create;\n    if (this.activatedRoute.firstChild !== null) {\n    this.operation = this.activatedRoute.firstChild.snapshot.params['operation'];\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-type/hotel-type.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".controlButtons {\\r\\n  padding-top: 30px !important;\\r\\n  padding-bottom: 28px !important;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-info/hotel-user-info.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/hotel-user-info/hotel-user-info.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid pt-1\\\">\\r\\n  <form [formGroup]=\\\"hotelUserForm\\\" (ngSubmit)=\\\"saveHotelUserDetails()\\\">\\r\\n    <div class=\\\"row customeRow alignItemCenter\\\">\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0 mt-1\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Chain\\\" name=\\\"Chain\\\" formControlName=\\\"chainId\\\" (change)=\\\"getHotelBrands(hotelUserForm.get('chainId').value);\\\" required>\\r\\n            <mat-option [value]=\\\"null\\\"> Select </mat-option>\\r\\n            <mat-option *ngFor=\\\"let hotelchain of HotelchainList\\\" [value]=\\\"hotelchain.hotelChainId\\\">{{hotelchain.hotelChainName}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0 mt-1\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Brand\\\" name=\\\"Brand\\\" formControlName=\\\"brandIds\\\" (change)=\\\"getHotels(hotelUserForm.get('brandIds').value);\\\" multiple required>\\r\\n            <mat-option [value]=\\\"null\\\" *ngIf=\\\"isBrandList == true\\\"> All </mat-option>\\r\\n            <mat-option *ngFor=\\\"let hotelbrand of HotelbrandList\\\" [value]=\\\"hotelbrand.hotelBrandId\\\" aria-selected=\\\"true\\\">\\r\\n              {{hotelbrand.hotelBrandName}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0 mt-1\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Hotel Name - ID\\\" name=\\\"Hotel Name - ID\\\" formControlName=\\\"hotelId\\\" (change)=\\\"selectAllHotels();\\\" multiple required>\\r\\n            <mat-option [value]=\\\"null\\\" *ngIf=\\\"isHotelList == true\\\" > All  </mat-option>\\r\\n            <mat-option *ngFor=\\\"let hotel of hotelNameList\\\" [value]=\\\"hotel.hotelId\\\">\\r\\n              {{hotel.hotelName}} - {{hotel.hotelCode}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"col-md-2 col-lg-1\\\">\\r\\n        <div class=\\\"userImageSection\\\">\\r\\n          <mat-icon class=\\\"userImage\\\">account_circle</mat-icon>\\r\\n          <div class=\\\"image-upload\\\">\\r\\n            <label for=\\\"file-input\\\">\\r\\n              <img src=\\\"assets/uploadPhoto.png\\\" title=\\\"Upload Image\\\" />\\r\\n            </label>\\r\\n            <input id=\\\"file-input\\\" type=\\\"file\\\" />\\r\\n          </div>\\r\\n          <button class=\\\"deletePhoto\\\" mat-raised-button title=\\\"Delete Image\\\">\\r\\n            <i class=\\\"fa fa-times-thin\\\"></i>\\r\\n          </button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group pt-2 col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"First Name\\\" name=\\\"firstName\\\" formControlName=\\\"firstName\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group pt-2 col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"Last Name\\\" name=\\\"lastName\\\" formControlName=\\\"lastName\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group pt-2 col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Designation\\\" name=\\\"Designation\\\" formControlName=\\\"designationId\\\" required>\\r\\n            <mat-option *ngFor=\\\"let designation of designationList\\\" [value]=\\\"designation.designationId\\\">\\r\\n              {{designation.title}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"Email ID\\\" name=\\\"emailID\\\" formControlName=\\\"email\\\" pattern=\\\"\\\\w+@\\\\w+\\\\.\\\\w+(,\\\\s*\\\\w+@\\\\w+\\\\.\\\\w+)*\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Role\\\" name=\\\"Role\\\" formControlName=\\\"extranetRoleId\\\" required>\\r\\n            <mat-option *ngFor=\\\"let role of roleList\\\" [value]=\\\"role.id\\\">\\r\\n              {{role.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput [matDatepicker]=\\\"activationDate\\\" placeholder=\\\"Activation Date\\\" formControlName=\\\"activationDate\\\" [min]=\\\"(operation === create) ? todaysDate : minDate\\\"\\r\\n                 required=\\\"!isEdit\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"activationDate\\\">\\r\\n            <mat-icon matDatepickerToggleIcon>\\r\\n              <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </mat-icon>\\r\\n          </mat-datepicker-toggle>\\r\\n          <mat-datepicker #activationDate></mat-datepicker>\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"operation == 'edit'\\\">\\r\\n        <div class=\\\"col-md-4 col-lg-3 mt-3\\\">\\r\\n            <div class=\\\"form-check form-check-inline\\\">\\r\\n              <mat-checkbox formControlName=\\\"inActivateUser\\\" [checked]= \\\"isInactiveDateRequired\\\" (change)=\\\"toggleDeactivationDate($event);\\\">Inactivate User</mat-checkbox>\\r\\n            </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\" *ngIf=\\\"isInactiveDateRequired == true\\\">\\r\\n      <div class=\\\"col-md-4 col-lg-3 mt-4 pt-2 mb-0\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput [matDatepicker]=\\\"deActivationDate\\\" placeholder=\\\"Inactivation Date\\\" formControlName=\\\"deActivationDate\\\" [min]=\\\"(operation === edit) ? todaysDate : minDate\\\"\\r\\n              required= \\\"isInactiveDateRequired\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"deActivationDate\\\">\\r\\n            <mat-icon matDatepickerToggleIcon>\\r\\n              <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </mat-icon>\\r\\n          </mat-datepicker-toggle>\\r\\n          <mat-datepicker #deActivationDate></mat-datepicker>\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 controlButtons pl-3\\\">\\r\\n        <button title=\\\"Save\\\" type=\\\"submit\\\" class=\\\"genericButton activeButton mat-primary mr-1\\\" [disabled]=\\\"!hotelUserForm.valid\\\" mat-raised-button>Save</button>\\r\\n        <button title=\\\"Cancel\\\" type=\\\"submit\\\" class=\\\"genericButton defaultButton\\\" (click)=\\\"cancel()\\\" mat-raised-button>Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-info/hotel-user-info.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/hotel-user-info/hotel-user-info.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HotelBrandViewModel } from '../../../../common/viewmodels/hotelbrandviewmodel';\nimport { HotelChainViewModel } from '../../../../common/viewmodels/hotelchainviewmodel';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { BACKOFFICECONSTANTS } from '../../../common/constants';\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { MatSnackBar, NativeDateAdapter, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { HotelUserViewModel } from '../../../viewmodel/usersviewmodel/hoteluserinfoviewmodel';\nimport { HotelNameViewModel } from '../../../viewmodel/usersviewmodel/hotelnameviewmodel';\nimport { DesignationViewModel } from '../../../viewmodel/usersviewmodel/designationviewmodel';\nimport { MgRoleViewModel } from '../../../viewmodel/usersviewmodel/mgrolelistviewmodel';\nimport { BackofficeLookupService } from '../../../common/backoffice-shared/services/backoffice-lookup';\nimport { LookupService } from '../../../../common/shared/services/lookup.service';\nimport { UserDataService } from '../../../common/backoffice-shared/services/user-data.service';\nimport { UserProfileService } from '../../../../common/shared/services/user-profile.service';\n\nconst DATE_FORMATS = {\n  parse: {\n    dateInput: { month: 'short', year: 'numeric', day: 'numeric' }\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  }\n};\n\n\nexport class DatePickerDateAdapter extends NativeDateAdapter {\n  format(date: Date, displayFormat: Object): string {\n    date.setMinutes((date.getTimezoneOffset() * -1));\n    if (displayFormat === 'input') {\n      const day = date.getDate();\n      const month = date.toLocaleString('en-us', { month: 'long' });\n      const year = date.getFullYear();\n      return this._to2digit(day) + '-' + month.substring(0, 3) + '-' + year % 100;\n    } else {\n      return date.toDateString();\n    }\n  }\n\n  private _to2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n}\n\n@Component({\n  selector: 'app-hotel-user-info',\n  templateUrl: './hotel-user-info.component.html',\n  styleUrls: ['./hotel-user-info.component.css'],\n  providers: [\n    { provide: DateAdapter, useClass: DatePickerDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS },\n  ]\n})\nexport class HotelUserInfoComponent implements OnInit {\n\n  HotelchainList: HotelChainViewModel[];\n  HotelbrandList: HotelBrandViewModel[];\n  hotelNameList: HotelNameViewModel[];\n  designationList: DesignationViewModel[];\n  roleList: MgRoleViewModel[];\n  public todaysDate = new Date();\n  hotelUser: HotelUserViewModel;\n  minDate: string;\n  userId: string;\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  hotelUserDetails: HotelUserViewModel = <HotelUserViewModel>{};\n  hotelUserForm: FormGroup;\n  allBrandIds: number[];\n  allHotelIds: string[];\n  isHotelList: boolean;\n  isBrandList: boolean;\n  operation: string;\n  editBrandIds: number[];\n  editChainId: number;\n  isInactiveDateRequired = false;\n  isEdit = false;\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute,\n    private snackBar: MatSnackBar,\n    private cd: ChangeDetectorRef,\n    private lookupService: LookupService,\n    private userDataService: UserDataService,\n  private backOfficeLookUpService: BackofficeLookupService,\n  private userProfileService: UserProfileService) { }\n\n  ngOnInit() {\n    this.operation = this.activatedRoute.snapshot.params['operation'];\n    this.userId = this.activatedRoute.snapshot.params['id'];\n    this.getHotelChainList();\n    this.getDesignations();\n    this.getRoles();\n    this.allBrandIds = [0];\n    this.allHotelIds = [''];\n    this.isHotelList = false;\n    this.isBrandList = false;\n    this.hotelUserForm = new FormGroup({\n      chainId: new FormControl('', Validators.required),\n      brandIds: new FormControl('', Validators.required),\n      hotelId: new FormControl('', Validators.required),\n      firstName: new FormControl('', Validators.required),\n      lastName: new FormControl('', Validators.required),\n      designationId: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      extranetRoleId: new FormControl('', Validators.required),\n      activationDate: new FormControl(''),\n      inActivateUser: new FormControl(''),\n      deActivationDate: new FormControl('')\n    });\n\n    if (this.operation === this.edit) {\n      this.isEdit = true;\n      this.hotelUserForm.controls.activationDate.disable();\n      this.getHotelUser();\n    }\n  }\n\n  toggleDeactivationDate(event) {\n    this.isInactiveDateRequired = event.checked;\n    if (event.checked) {\n      this.hotelUserForm.controls.deActivationDate.enable();\n    } else {\n      this.hotelUserForm.controls.deActivationDate.disable();\n    }\n      this.cd.detectChanges();\n  }\n\n  getHotelChainList() {\n      this.HotelchainList = this.activatedRoute.snapshot.data['hotelChains'];\n\n  }\n\n  getHotelBrands(chainId) {\n    if (this.operation === this.edit && this.hotelUserForm.value.chainId !== this.editChainId || this.operation === this.create) {\n      this.hotelUserForm.patchValue({brandId: null});\n      this.hotelUserForm.patchValue({hotelId: null});\n      this.HotelbrandList = null;\n      this.hotelNameList = null;\n      this.isHotelList = false;\n      this.isBrandList = false;\n    }\n    this.lookupService.getHotelBrands(chainId).subscribe((mghotelbrandList) => {\n      this.HotelbrandList = mghotelbrandList;\n      if (mghotelbrandList.length > 1) {\n        this.isBrandList = true;\n      }\n      if (this.operation === this.edit) {\n        this.getHotels(this.editBrandIds);\n      }\n    });\n  }\n\n  getDesignations() {\n    this.backOfficeLookUpService.getDesignationByType(CONSTANTS.userType.hoteluser).subscribe(designationData =>\n      this.designationList = designationData\n    );\n  }\n\n  getRoles() {\n    this.backOfficeLookUpService.getRolesByApplicationName(CONSTANTS.application.extranet, BACKOFFICECONSTANTS.userType.hotelUser)\n    .subscribe(data =>\n      this.roleList = data\n    );\n  }\n\n  selectAllHotels() {\n    // fetch all hotelIds from hotelsList\n    if (this.hotelNameList !== null) {\n      this.allHotelIds.splice(0 , this.allHotelIds.length);\n      for (let b = 0; b < this.hotelNameList.length; b++) {\n        this.allHotelIds[b] = this.hotelNameList[b].hotelId;\n      }\n      // select/deselect all hotels\n      if (this.hotelUserForm.value.hotelId.length !== 0) {\n        if (this.hotelUserForm.value.hotelId[0] == null && this.hotelUserForm.value.hotelId.length !== (this.allHotelIds.length + 1)) {\n            this.hotelUserForm.patchValue({hotelId: this.allHotelIds});\n        } else if (this.hotelUserForm.value.hotelId.length === (this.allHotelIds.length + 1)) {\n          this.hotelUserForm.patchValue({hotelId: null});\n        }\n     }\n    }\n }\n\n  getHotels(brandIds) {\n    // fetch all brandIds from brandsList\n    this.allBrandIds.splice(0 , this.allBrandIds.length);\n    for (let b = 0; b < this.HotelbrandList.length; b++) {\n      this.allBrandIds[b] = this.HotelbrandList[b].hotelBrandId;\n    }\n    // select/deselect all brands\n    if (brandIds.length !== (this.allBrandIds.length + 1) && brandIds.length !== 0) {\n        if (brandIds[0] == null) {\n          for (let b = 0; b < this.HotelbrandList.length; b++) {\n            brandIds[b] = this.HotelbrandList[b].hotelBrandId;\n            this.hotelUserForm.value.brandIds[b] = this.HotelbrandList[b].hotelBrandId;\n          }\n          this.hotelUserForm.patchValue({brandIds: brandIds});\n        }\n    } else if (brandIds.length === (this.allBrandIds.length + 1) && this.hotelNameList != null) {\n      this.hotelUserForm.patchValue({brandIds: null});\n      this.hotelNameList = null;\n      this.isHotelList = false;\n    }\n    // fetch hotels according to brandIds\n     if (brandIds.length >= 1 && brandIds[0] !== null) {\n      this.backOfficeLookUpService.getHotelsByBrandIds(brandIds).subscribe((data) => {\n        this.hotelNameList = data;\n        this.isHotelList = (data.length > 1) ? true : false;\n      });\n     }\n\n  }\ngetHotelUser() {\n  // this.getHotelBrands(2);\n  // this.getHotels(this.testBrandIds);\n  this.userDataService.getHotelUserById(this.userId).subscribe((hotelUser) => {\n    this.hotelUserDetails = hotelUser;\n    // this.hotelUser = hotelUser;\n    this.hotelUserForm.get('chainId').setValue(hotelUser.chainId);\n    this.editChainId = hotelUser.chainId;\n    this.getHotelBrands(hotelUser.chainId);\n    this.hotelUserForm.get('brandIds').setValue(hotelUser.brandId);\n    this.editBrandIds = hotelUser.brandId;\n    this.hotelUserForm.get('hotelId').setValue(hotelUser.hotelId);\n    this.hotelUserForm.get('firstName').setValue(hotelUser.firstName);\n    this.hotelUserForm.get('lastName').setValue(hotelUser.lastName);\n    this.hotelUserForm.get('designationId').setValue(hotelUser.designationId);\n    this.hotelUserForm.get('extranetRoleId').setValue(hotelUser.extranetRoleId);\n    this.hotelUserForm.get('email').setValue(hotelUser.email);\n    this.hotelUserForm.get('activationDate').setValue(hotelUser.activationDate);\n    if (hotelUser.deActivationDate !== null) {\n      // this.hotelUserForm.get('inActivateUser').setValue(true);\n      this.isInactiveDateRequired = true;\n      this.hotelUserForm.get('deActivationDate').setValue(hotelUser.deActivationDate);\n      this.cd.detectChanges();\n    }\n  });\n}\n\n  saveHotelUserDetails() {\n    const hotelUser = Object.assign({}, this.hotelUserDetails, this.hotelUserForm.value);\n    hotelUser.userName = hotelUser.email;\n    hotelUser.hotelUserType = BACKOFFICECONSTANTS.hotelUserType.chain;\n    if (this.isInactiveDateRequired) {\n      hotelUser.inActivationType = CONSTANTS.inActiveType.permanent;\n    }\n    if (this.isEdit && !this.isInactiveDateRequired) {\n      hotelUser.inActivationType = '';\n      hotelUser.deActivationDate = '';\n    }\n    hotelUser.createdBy = this.userProfileService.GetBasicUserInfo().FirstName + ' ' +\n    this.userProfileService.GetBasicUserInfo().LastName;\n    hotelUser.updatedBy = this.userProfileService.GetBasicUserInfo().FirstName + ' ' +\n    this.userProfileService.GetBasicUserInfo().LastName;\n\n    if (this.operation === this.create) {\n      this.userDataService.createHotelUser(hotelUser as HotelUserViewModel)\n      .subscribe(data => {\n        if (data.succeeded === true) {\n          this.snackBar.open('New user is created successfully', '', { duration:  CONSTANTS.toasterTimeOut.duration,\n            verticalPosition: 'top', panelClass: 'showSnackBar'});\n          this.router.navigate(['/usermgmt/hoteluserslist']);\n        } else {\n          // TODO: Need to check how we are doing error handling.\n          this.snackBar.open('Error occourred while saving Agent. ' + data.errors[0].description ,\n          '', { duration:  CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n        }\n      });\n    } else if (this.operation === this.edit) {\n      this.userDataService.updateHotelUser(this.userId, hotelUser as HotelUserViewModel)\n      .subscribe(data => {\n        if (data.succeeded === true) {\n          this.snackBar.open('The user is updated successfully', '', { duration:  CONSTANTS.toasterTimeOut.duration,\n            verticalPosition: 'top', panelClass: 'showSnackBar'});\n          this.router.navigate(['/usermgmt/hoteluserslist']);\n        } else {\n          // TODO: Need to check how we are doing error handling.\n          this.snackBar.open('Error occourred while saving Agent. ' + data.errors[0].description ,\n          '', { duration:  CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n        }\n      });\n    }\n  }\n\n  cancel() {\n    window.scrollTo(0, 0);\n    this.router.navigate(['/usermgmt/hoteluserslist']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-info/hotel-user-info.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".usernameTH{width:15%;}\\r\\n.hotelIDTH{width: 19%;}\\r\\n.designationIDTH{width: 10%;}\\r\\n.emailTH {\\r\\n  width: 14%;\\r\\n}\\r\\n.applicationRoleTH{width: 10%;}\\r\\n.activationTH{width: 15%;}\\r\\n.userStatusTH{width: 9%;}\\r\\n.userActionTH{width: 9%;}\\r\\n.expandHotelDetails {\\r\\n  position: absolute;\\r\\n  left: 83px;\\r\\n  width: 91%;\\r\\n  padding: 10px;\\r\\n  overflow-y: scroll;\\r\\n  height: 87px;\\r\\n  margin-top: 42px;\\r\\n  border: 1px solid #e0e0e0;\\r\\n  background: #fafafa;\\r\\n}\\r\\n\\r\\n.expandHotelDetails span{\\r\\n  font-size:13px;\\r\\n}\\r\\n\\r\\n.hotelIDTH a {\\r\\n  cursor: pointer;\\r\\n  color: #2aaae1;\\r\\n  display: block;\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n.expandHotelTitle {\\r\\n  display: block;\\r\\n  z-index: 1;\\r\\n  position: absolute;\\r\\n  left: 84px;\\r\\n  width: 94%;\\r\\n  padding-top: 16px;\\r\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-list/hotel-user-list.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/hotel-user-list/hotel-user-list.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"mt-4 pt-2\\\">\\r\\n    <h1 class=\\\"mainHeading pb-0 borderBottomNone\\\">Hotel / Supplier</h1>\\r\\n    <div class=\\\"row mt-4 mb-0\\\">\\r\\n      <form [formGroup]=\\\"searchHotelUsers\\\" (ngSubmit)=\\\"findHotelUser(searchHotelUsers.get('searchText').value,searchHotelUsers.get('startDate').value,searchHotelUsers.get('endDate').value)\\\"\\r\\n            class=\\\"w-100\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"lightBlueContainer pb-0 pl-4 pr-4 pt-4 mb-4\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n\\r\\n                  <div class=\\\"col-md-7 pr-5\\\">\\r\\n                    <mat-form-field>\\r\\n                      <input matInput placeholder=\\\"Search by User Name, Email ID, Designation, Roles, Activation date \\\" formControlName=\\\"searchText\\\"\\r\\n                             (keydown.backspace)=\\\"checkIsInputCleared()\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2 pl-0\\\">\\r\\n                    <mat-form-field class=\\\"width80percent\\\">\\r\\n                      <span matPrefix>From &nbsp;</span>\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"startdate\\\">\\r\\n                        <mat-icon matDatepickerToggleIcon>\\r\\n                          <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </mat-icon>\\r\\n                      </mat-datepicker-toggle>\\r\\n                      <input matInput [matDatepicker]=\\\"startdate\\\" placeholder=\\\"DD-MMM-YY\\\" formControlName=\\\"startDate\\\">\\r\\n                      <mat-datepicker #startdate></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n                    <span class=\\\"btn transparent-circle smallDeleteIcon ml-1\\\" title=\\\"Delete\\\">\\r\\n                      <i class=\\\"fa fa-times-thin\\\" aria-hidden=\\\"true\\\" (click)=\\\"checkIsFromDateCleared();\\\"></i>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2 pr-4\\\">\\r\\n                    <mat-form-field class=\\\"width80percent\\\">\\r\\n                      <span matPrefix>To &nbsp;</span>\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"enddate\\\">\\r\\n                        <mat-icon matDatepickerToggleIcon>\\r\\n                          <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </mat-icon>\\r\\n                      </mat-datepicker-toggle>\\r\\n                      <input matInput [matDatepicker]=\\\"enddate\\\" placeholder=\\\"DD-MMM-YY\\\" formControlName=\\\"endDate\\\" [min]=\\\"searchHotelUsers.get('startDate').value\\\">\\r\\n                      <mat-datepicker #enddate></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n                    <span class=\\\"btn transparent-circle smallDeleteIcon ml-1\\\" title=\\\"Delete\\\">\\r\\n                      <i class=\\\"fa fa-times-thin\\\" aria-hidden=\\\"true\\\" (click)=\\\"checkIsToDateCleared();\\\"></i>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                  \\r\\n                  <div class=\\\"col-md-1 top10px controlButtons\\\">\\r\\n                    <button title=\\\"Search\\\" type=\\\"submit\\\" class=\\\"genericButton genericSmallButton activeButton mat-primary\\\" mat-raised-button>Search</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 pt-4 mt-2 pb-3 mb-1 controlButtons\\\">\\r\\n        <button title=\\\"Create New Hotel / Supplier User\\\" type=\\\"submit\\\" class=\\\"btn defaultButton genericButton genericSmallButton\\\"\\r\\n                mat-raised-button (click)=\\\"createHotelUser()\\\">\\r\\n          <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i>\\r\\n          <span>Create New Hotel / Supplier User</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <mat-table class=\\\"flexNone genericTable mb-4 pb-1 mat-table\\\" #table [dataSource]='!isSearch ? dataSource: filteredData' matSort (matSortChange)=\\\"sortData($event)\\\"\\r\\n               matSortActive=\\\"activationDate\\\" matSortDirection=\\\"desc\\\">\\r\\n\\r\\n      <ng-container matColumnDef=\\\"firstName\\\">\\r\\n        <mat-header-cell class=\\\"usernameTH alignItemCenter pr-0\\\" *matHeaderCellDef mat-sort-header> User Name </mat-header-cell>\\r\\n        <mat-cell class=\\\"usernameTH\\\" *matCellDef=\\\"let element\\\">\\r\\n          <div class=\\\"d-flex\\\">\\r\\n            <div><mat-icon class=\\\"userIcon alignItemCenter\\\">account_circle</mat-icon></div>\\r\\n            <span class=\\\"pl-1 alignItemCenter\\\">{{element.firstName}} {{element.lastName}}</span>\\r\\n          </div>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"hotels\\\">\\r\\n        <mat-header-cell class=\\\"hotelIDTH\\\" *matHeaderCellDef mat-sort-header> Hotel Name - ID </mat-header-cell>\\r\\n        <mat-cell class=\\\"hotelIDTH\\\" *matCellDef=\\\"let element\\\">\\r\\n          <ng-container *ngIf=\\\"element.hotels.length > 1\\\">\\r\\n            <span>{{element.hotels[0].name}} - {{element.hotels[0].code}}</span>\\r\\n            <ng-container *ngIf=\\\"!element.hideme\\\">\\r\\n              <a (click)=\\\"element.hideme = !element.hideme\\\">More<i class=\\\"fa fa-angle-down ml-1\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n            </ng-container>\\r\\n            <ng-container *ngIf=\\\"element.hideme\\\">\\r\\n              <a (click)=\\\"element.hideme = !element.hideme\\\">Less<i class=\\\"fa fa-angle-up ml-1\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n            </ng-container>\\r\\n            <span [hidden]=\\\"!element.hideme\\\" class=\\\"expandHotelTitle mavenProMedium\\\">Hotel Name - ID</span>\\r\\n            <div [hidden]=\\\"!element.hideme\\\" class=\\\"expandHotelDetails\\\">\\r\\n              <ng-container *ngFor=\\\"let c of element.hotels; let first = first; let last = last\\\">\\r\\n                <span *ngIf=\\\"!first && !last\\\">{{c.name}} - {{c.code}} ,</span>\\r\\n                <span *ngIf=\\\"last\\\">{{c.name}} - {{c.code}} .</span>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </ng-container>\\r\\n          <ng-container *ngIf=\\\"element.hotels.length==1\\\">\\r\\n            <span class=\\\"d-block\\\">{{element.hotels[0].name}} - {{element.hotels[0].code}}</span>\\r\\n          </ng-container>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"designation\\\">\\r\\n        <mat-header-cell class=\\\"designationIDTH\\\" *matHeaderCellDef mat-sort-header> Designation </mat-header-cell>\\r\\n        <mat-cell class=\\\"designationIDTH\\\" *matCellDef=\\\"let element\\\"> {{element.designation}} </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"email\\\">\\r\\n        <mat-header-cell class=\\\"emailTH\\\" *matHeaderCellDef mat-sort-header> Email ID </mat-header-cell>\\r\\n        <mat-cell class=\\\"emailTH\\\" *matCellDef=\\\"let element\\\"> {{element.email}} </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"userApplicationRole\\\">\\r\\n        <mat-header-cell class=\\\"applicationRoleTH\\\" *matHeaderCellDef mat-sort-header> Role </mat-header-cell>\\r\\n        <mat-cell class=\\\"applicationRoleTH\\\" *matCellDef=\\\"let element\\\">\\r\\n          <ng-container *ngFor=\\\"let c of element.userApplicationRole\\\">\\r\\n            <span class=\\\"d-block\\\"> {{c.roleName}}</span>\\r\\n          </ng-container>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"activationDate\\\">\\r\\n        <mat-header-cell class=\\\"activationTH\\\" *matHeaderCellDef mat-sort-header>\\r\\n            <div>Activation/<div>Inactivation Date</div></div>\\r\\n        </mat-header-cell>\\r\\n        <mat-cell class=\\\"activationTH\\\" *matCellDef=\\\"let element\\\">\\r\\n          <span class=\\\"d-block\\\">{{element.activationDate | date : \\\"dd-MMM-yy\\\"}}<span *ngIf=\\\"!element.isActive && element.deActivationDate != null\\\">/</span></span>\\r\\n          <ng-container *ngIf=\\\"!element.isActive && element.deActivationDate != null \\\">\\r\\n            {{element.deActivationDate | date : \\\"dd-MMM-yy\\\"}}\\r\\n          </ng-container>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"isActive\\\">\\r\\n        <mat-header-cell class=\\\"userStatusTH noOutlineOnFocus\\\" *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\\r\\n        <mat-cell class=\\\"userStatusTH\\\" *matCellDef=\\\"let element\\\">\\r\\n          <ng-container *ngIf=\\\"!element.isActive \\\">\\r\\n            <i class=\\\"fa fa-circle deactivate_status\\\" aria-hidden=\\\"true\\\"></i>Inactive\\r\\n          </ng-container>\\r\\n          <ng-container *ngIf=\\\"element.isActive == true\\\">\\r\\n            <i class=\\\"fa fa-circle active_status\\\" aria-hidden=\\\"true\\\"></i>Active\\r\\n          </ng-container>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"actions\\\" class=\\\"text-center\\\">\\r\\n        <mat-header-cell class=\\\"userActionTH noOutlineOnFocus\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\r\\n        <mat-cell class=\\\"placeholderColorGray userActionTH\\\" *matCellDef=\\\"let element\\\">\\r\\n          <mat-select placeholder=\\\"Actions\\\" name=\\\"Actions\\\" [(ngModel)]=\\\"actions\\\">\\r\\n            <ng-container *ngIf=\\\"element.isActive \\\">\\r\\n              <mat-option value=\\\"{{element.id}}:edit:{{element.hotelUserType}}\\\" #edit (click)=\\\"goUserUpdate(edit.value)\\\">Edit</mat-option>\\r\\n            </ng-container>\\r\\n            <mat-option value=\\\"{{element.id}}:delete\\\" #delete (click)=\\\"goUserDelete(delete.value)\\\">Delete</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [style.padding-bottom]=\\\"row.hideme ? '134px': '0px'\\\"></mat-row>\\r\\n\\r\\n    </mat-table>\\r\\n    <div style=\\\"color:orange\\\" *ngIf=\\\"noDataAvailable\\\">\\r\\n      No Users are created.\\r\\n    </div>\\r\\n    <div style=\\\"color:orange\\\" *ngIf=\\\"noRecordsFound\\\">\\r\\n      No Hotel user record found.\\r\\n    </div>\\r\\n    <div class=\\\"paginationWrapper\\\">\\r\\n      <span class=\\\"pageCount\\\" *ngIf=\\\"!noDataAvailable\\\">\\r\\n        Page: {{(pageEvent) ? pageEvent.pageIndex + 1 : 1}} of {{ (pageEvent) ? Math.ceil(pageEvent.length/pageEvent.pageSize)\\r\\n      : Math.ceil(totalRecords/20) }}\\r\\n      </span>\\r\\n      <mat-paginator *ngIf=\\\"!noDataAvailable\\\" class=\\\"genericPagination\\\" (page)=\\\"pageEvent = $event\\\" #paginator [pageSize]=\\\"20\\\"\\r\\n                     [pageSizeOptions]=\\\"[5, 10, 20]\\\" >\\r\\n      </mat-paginator>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-list/hotel-user-list.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/hotel-user-list/hotel-user-list.component.html\n// module chunks = user-mgmt.module","\nimport { UserDataService } from './../../../common/backoffice-shared/services/user-data.service';\nimport { DatePipe } from '@angular/common';\nimport { HotelUserListViewModel } from './../../../viewmodel/usersviewmodel/hoteluserlistviewmodel';\nimport { DateAdapter, NativeDateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatTableDataSource, MatPaginator, MatSort, Sort, PageEvent, MatSnackBar } from '@angular/material';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { DialogsService } from '../../../common/backoffice-shared/dialogs/dialogs.service';\n\n\nconst DATE_FORMATS = {\n  parse: {\n    dateInput: { month: 'short', year: 'numeric', day: 'numeric' }\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  }\n};\n\nexport class DatePickerDateAdapter extends NativeDateAdapter {\n  format(date: Date, displayFormat: Object): string {\n    date.setMinutes((date.getTimezoneOffset() * -1));\n    if (displayFormat === 'input') {\n      const day = date.getDate();\n      const month = date.toLocaleString('en-us', { month: 'long' });\n      const year = date.getFullYear();\n      return this._to2digit(day) + '-' + month.substring(0, 3) + '-' + year % 100;\n    } else {\n      return date.toDateString();\n    }\n  }\n\n  private _to2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n}\n\n@Component({\n  selector: 'app-hotel-user-list',\n  templateUrl: './hotel-user-list.component.html',\n  styleUrls: ['./hotel-user-list.component.css'],\n  providers: [DatePipe, DialogsService,\n    { provide: DateAdapter, useClass: DatePickerDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS },\n  ]\n})\nexport class HotelUserListComponent implements OnInit {\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  operation: string;\n  dataSource: MatTableDataSource<HotelUserListViewModel>;\n  displayedColumns = ['firstName', 'hotels', 'designation', 'email', 'userApplicationRole', 'activationDate', 'isActive', 'actions'];\n  hotelUserList: HotelUserListViewModel[];\n  actions: string;\n  filteredData: MatTableDataSource<HotelUserListViewModel>;\n  searchHotelUsers: FormGroup;\n  isSearch: boolean;\n  selectedRow: number;\n  isAppRoleData: boolean;\n  isHotelData: boolean;\n  isDeleted: boolean;\n  noDataAvailable: boolean;\n  noRecordsFound: boolean;\n  pageEvent: PageEvent;\n  Math: any;\n  hideme: any;\n  result: any;\n  totalRecords: number;\n\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  @Input()\n  _dateValue;\n\n  hotel= {\n    ' kind ' : ' title ',\n    'label': 'ADD_TITLE' };\n\n  constructor(private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private userDataService: UserDataService,\n    private dialogsService: DialogsService,\n    public datepipe: DatePipe,\n    private snackBar: MatSnackBar) {\n      this.Math = Math;\n     }\n\n  ngOnInit() {\n    this.getHotelUserList();\n    this.hideme = {};\n    this.isSearch = false;\n    this.searchHotelUsers = new FormGroup({\n      startDate: new FormControl(),\n      endDate: new FormControl(),\n      searchText: new FormControl()\n    });\n  }\n\n  getHotelUserList() {\n    this.isSearch = false;\n    this.userDataService.getHotelUsers().subscribe((mgUsersList) => {\n      this.hotelUserList = mgUsersList;\n      this.dataSource = new MatTableDataSource<HotelUserListViewModel>(this.hotelUserList);\n      this.totalRecords = this.hotelUserList.length;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      if (mgUsersList.length === 0) {\n        this.noDataAvailable = true;\n      }else {\n        this.noDataAvailable = false;\n      }\n    });\n  }\n\n\n\n  createHotelUser() {\n    this.router.navigate(['../hotelusers'], { relativeTo: this.activatedRoute });\n  }\n\n  findHotelUser( filterValue: string, filterFrom: string, filterTo: string ) {\n    if (filterFrom !== null || filterTo !== null || (filterValue !== null && filterValue.length >= 3)) {\n      this.isSearch = true;\n    }\n    if (filterFrom !== null) {\n      filterFrom = this.datepipe.transform(filterFrom, 'yyyy-MM-dd');\n    }\n    if (filterTo !== null) {\n      filterTo = this.datepipe.transform(filterTo, 'yyyy-MM-dd');\n    }\n    if (filterValue !== null) {\n      filterValue = filterValue.trim();\n      filterValue = filterValue.toLowerCase();\n    }\n\n    this.filteredData = new MatTableDataSource<HotelUserListViewModel>(this.hotelUserList.filter(user => {\n      const searchActivationDate = this.datepipe.transform(user.activationDate, 'dd-MMM-yy hh:mm a');\n      const activationDate = this.datepipe.transform(user.activationDate, 'yyyy-MM-dd');\n      if (filterValue !== null && (filterFrom === null && filterTo === null)) {\n        return this.filterHotelUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue);\n      } else if (filterFrom !== null && (filterTo === null && filterValue === null)) {\n        return activationDate >= filterFrom;\n      } else if (filterTo !== null && (filterFrom === null && filterValue === null)) {\n        return activationDate <= filterTo;\n      } else if (filterValue === null && (filterFrom !== null && filterTo !== null)) {\n        return filterFrom <= activationDate && activationDate <= filterTo;\n      } else if (filterFrom === null && (filterValue !== null && filterTo !== null)) {\n        return (this.filterHotelUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) && activationDate <= filterTo;\n      } else if (filterTo === null && (filterFrom !== null && filterValue !== null)) {\n        return (this.filterHotelUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) &&\n        activationDate >= filterFrom;\n      } else if (filterFrom !== null && filterTo !== null && filterValue !== null) {\n        return (this.filterHotelUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) &&\n          (filterFrom <= activationDate && activationDate <= filterTo);\n      }\n    }));\n    if (this.filteredData.data.length === 0) {\n      this.noRecordsFound = true ;\n    }\n    this.filteredData.paginator = this.paginator;\n    this.filteredData.sort = this.sort;\n\n  }\n  filterHotelUser( user: HotelUserListViewModel, filterValue: string) {\n    this.isAppRoleData = false;\n    this.isHotelData = false;\n    for (let i = 0; i < user.userApplicationRole.length; i++) {\n      if (user.userApplicationRole[i].roleName.toLowerCase().includes(filterValue)) {\n        this.isAppRoleData = true;\n        break;\n      }\n    }\n    for (let j = 0; j < user.hotels.length; j++) {\n      if (user.hotels[j].name.toLowerCase().includes(filterValue)) {\n        this.isHotelData = true;\n      }\n    }\n\n    return user.firstName.toLowerCase().includes(filterValue) ||\n    user.lastName.toLowerCase().includes(filterValue) ||\n    user.email.toLowerCase().includes(filterValue) ||\n    user.designation.toLowerCase().includes(filterValue) ||\n    this.isAppRoleData || this.isHotelData ;\n\n  }\n  checkIsInputCleared() {\n    this.paginator.page.emit();\n    if (this.searchHotelUsers.get('searchText').value.length === 1 &&\n    this.searchHotelUsers.get('startDate').value === null &&\n    this.searchHotelUsers.get('endDate').value === null) {\n      this.filteredData = new MatTableDataSource<HotelUserListViewModel>(this.hotelUserList);\n      this.filteredData.paginator = this.paginator;\n      this.filteredData.sort = this.sort;\n      this.isSearch = false;\n      this.noRecordsFound = false;\n    }\n  }\n\n  checkIsFromDateCleared() {\n    this.paginator.page.emit();\n    this.searchHotelUsers.get('startDate').setValue(null);\n    if ((this.searchHotelUsers.get('searchText').value === null || this.searchHotelUsers.get('searchText').value === '') &&\n      this.searchHotelUsers.get('endDate').value === null) {\n      this.getHotelUserList();\n    }\n  }\n\n  checkIsToDateCleared() {\n    this.paginator.page.emit();\n    this.searchHotelUsers.get('endDate').setValue(null);\n    if ((this.searchHotelUsers.get('searchText').value === null || this.searchHotelUsers.get('searchText').value === '') &&\n      this.searchHotelUsers.get('startDate').value === null) {\n      this.getHotelUserList();\n    }\n  }\n\n  sortData(sort: Sort) {\n    const data = this.hotelUserList.slice();\n    if (!sort.active || sort.direction === '') {\n      this.dataSource.data =  data.sort((a, b) => {\n        const isAsc = sort.direction === 'desc';\n           return compare(a.activationDate, b.activationDate, isAsc);\n      });\n      return;\n    } else {\n      if (this.isSearch) {\n        this.filteredData.data = this.filteredData.data.sort((a, b) => {\n          const isAsc = sort.direction === 'asc';\n          switch (sort.active) {\n            // case 'name': return compare(a.firstName, b.firstName, isAsc);\n            case 'firstName': return compare(a.firstName, b.firstName, isAsc);\n            case 'email': return compare(a.email, b.email, isAsc);\n            case 'hotels':\n            return compare((a.hotels.length === 0) ? '' :\n            a.hotels[0].name, (b.hotels.length === 0) ? '' :\n            b.hotels[0].name, isAsc);\n            case 'designation': return compare(a.designation, b.designation, isAsc);\n            case 'isActive': return compare(a.isActive, b.isActive, isAsc);\n            case 'userApplicationRole':\n            return compare((a.userApplicationRole.length === 0) ? '' :\n            a.userApplicationRole[0].roleName, (b.userApplicationRole.length === 0) ? '' :\n            b.userApplicationRole[0].roleName, isAsc);\n            case 'activationDate': return compare(a.activationDate, b.activationDate, isAsc);\n            default: return 0;\n          }\n        });\n        this.filteredData.paginator = this.paginator;\n      }\n        this.dataSource.data = data.sort((a, b) => {\n          const isAsc = sort.direction === 'asc';\n          switch (sort.active) {\n            // case 'name': return compare(a.firstName, b.firstName, isAsc);\n            case 'firstName': return compare(a.firstName.toLowerCase(), b.firstName.toLowerCase(), isAsc);\n            case 'email': return compare(a.email, b.email, isAsc);\n            case 'hotels':\n            return compare((a.hotels.length === 0) ? '' :\n            a.hotels[0].name, (b.hotels.length === 0) ? '' :\n            b.hotels[0].name, isAsc);\n            case 'designation': return compare(a.designation, b.designation, isAsc);\n            case 'isActive': return compare(a.isActive, b.isActive, isAsc);\n            case 'userApplicationRole':\n            return compare((a.userApplicationRole.length === 0) ? '' :\n            a.userApplicationRole[0].roleName, (b.userApplicationRole.length === 0) ? '' :\n            b.userApplicationRole[0].roleName, isAsc);\n            case 'activationDate': return compare(a.activationDate, b.activationDate, isAsc);\n            default: return 0;\n          }\n        });\n        this.dataSource.paginator = this.paginator;\n      }\n    }\n\n\n  goUserUpdate(value) {\n    const val = value.split(':');\n    const userId = val[0];\n    this.operation = val[1];\n    // routing for edit user based on hotel-user type\n    const hotelUserType = val[2];\n    if (hotelUserType === 'C') {\n      this.router.navigate(['../hotelusers/hoteluserinfo', userId, this.operation.trim().toLowerCase()],\n      { relativeTo: this.activatedRoute });\n    } else if (hotelUserType === 'I') {\n      this.router.navigate(['../hotelusers/individual', userId, this.operation.trim().toLowerCase()], { relativeTo: this.activatedRoute });\n    }else if (hotelUserType === 'S') {\n      this.router.navigate(['../hotelusers/supplieruser', userId, this.operation.trim().toLowerCase()],\n      { relativeTo: this.activatedRoute });\n    }\n\n  }\n\n  deleteHotelUser(userId) {\n    this.userDataService.deleteHotelUser(userId).subscribe(data => {\n        window.scrollTo(0, 0);\n        this.snackBar.open('The user is deleted successfully', '', { duration: CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top',\n        panelClass: 'showSnackBar'});\n      this.getHotelUserList();\n    });\n  }\n\n  goUserDelete(value) {\n    const val = value.split(':');\n    const userId = val[0];\n    this.dialogsService\n      .confirm('Confirm', 'Are you sure you want to delete this user?').subscribe(res => {\n        this.result = res;\n        if (this.result) {\n          this.deleteHotelUser(userId);\n        } else {\n          this.actions = null;\n        }\n      });\n   }\n}\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-list/hotel-user-list.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".controlButtons {\\r\\n  padding-top: 30px !important;\\r\\n  padding-bottom: 28px !important;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/individual-hotel-user-info/individual-hotel-user-info.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/individual-hotel-user-info/individual-hotel-user-info.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <form [formGroup]=\\\"individualHotelForm\\\" (ngSubmit)=\\\"saveIndividualHotelUserDetails()\\\">\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0 mt-2\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Hotel Name - ID\\\" name=\\\"Hotel Name - ID\\\" formControlName=\\\"hotelId\\\" multiple required>\\r\\n            <mat-option *ngFor=\\\"let hotel of hotelList | orderBy: {property:'hotelName',direction: direction}\\\" [value]=\\\"hotel.hotelId\\\">{{hotel.hotelName}} - {{hotel.hotelCode}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"col-md-2 col-lg-1\\\">\\r\\n        <div class=\\\"userImageSection\\\">\\r\\n          <mat-icon class=\\\"userImage\\\">account_circle</mat-icon>\\r\\n          <div class=\\\"image-upload\\\">\\r\\n            <label for=\\\"file-input\\\">\\r\\n              <img src=\\\"assets/uploadPhoto.png\\\" title=\\\"Upload Image\\\" />\\r\\n            </label>\\r\\n            <input id=\\\"file-input\\\" type=\\\"file\\\" />\\r\\n          </div>\\r\\n          <button class=\\\"deletePhoto\\\" mat-raised-button title=\\\"Delete Image\\\">\\r\\n            <i class=\\\"fa fa-times-thin\\\"></i>\\r\\n          </button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group pt-2 col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"First Name\\\" id=\\\"firstName\\\" formControlName=\\\"firstName\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group pt-2 col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"Last Name\\\" id=\\\"lastName\\\" formControlName=\\\"lastName\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group pt-2 col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Designation\\\" formControlName=\\\"designationId\\\" required>\\r\\n            <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n            <mat-option *ngFor=\\\"let designation of designationList | orderBy:{property:'title',direction: direction}\\\" [value]=\\\"designation.designationId\\\">{{designation.title}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"Email ID\\\" id=\\\"emailID\\\" formControlName=\\\"email\\\" pattern=\\\"\\\\w+@\\\\w+\\\\.\\\\w+(,\\\\s*\\\\w+@\\\\w+\\\\.\\\\w+)*\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Role\\\" formControlName=\\\"extranetRoleId\\\" required>\\r\\n            <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n            <mat-option *ngFor=\\\"let role of roleList| orderBy:{property:'name',direction: direction}\\\" [value]=\\\"role.id\\\">{{role.name}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"col-md-4 col-lg-3 mt-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput [matDatepicker]=\\\"activationDate\\\" placeholder=\\\"Activation Date\\\" formControlName=\\\"activationDate\\\"\\r\\n                  [min]=\\\"(operation === create) ?  todaysDate : minDate\\\" required>\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"activationDate\\\">\\r\\n            <mat-icon matDatepickerToggleIcon>\\r\\n              <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </mat-icon>\\r\\n          </mat-datepicker-toggle>\\r\\n          <mat-datepicker #activationDate></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"operation == 'edit'\\\">\\r\\n        <div class=\\\"col-md-4 col-lg-3 mt-3\\\">\\r\\n            <div class=\\\"form-check form-check-inline\\\">\\r\\n              <mat-checkbox formControlName=\\\"inActivateUser\\\" [checked]=\\\"isChecked\\\" (change)= \\\"toggleDeactivationDate($event)\\\" >Inactivate User</mat-checkbox>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\" *ngIf=\\\"isChecked\\\">\\r\\n      <div class=\\\"col-md-4 col-lg-3 mt-4 pt-2 mb-0\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput [matDatepicker]=\\\"deActivationDate\\\" placeholder=\\\"Inactivation Date\\\" formControlName=\\\"deActivationDate\\\"\\r\\n          [min]=\\\"(operation === edit) ? todaysDate : minDate\\\" [required] = \\\"isInactiveDateRequired\\\" >\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"deActivationDate\\\">\\r\\n            <mat-icon matDatepickerToggleIcon>\\r\\n              <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </mat-icon>\\r\\n          </mat-datepicker-toggle>\\r\\n          <mat-datepicker #deActivationDate></mat-datepicker>\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 controlButtons pl-3\\\">\\r\\n        <button title=\\\"Save\\\" type=\\\"submit\\\" class=\\\"genericButton activeButton mat-primary mr-1\\\" [disabled]=\\\"!individualHotelForm.valid\\\" mat-raised-button>Save</button>\\r\\n        <button title=\\\"Cancel\\\" type=\\\"submit\\\" class=\\\"genericButton defaultButton\\\" mat-raised-button (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/individual-hotel-user-info/individual-hotel-user-info.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/individual-hotel-user-info/individual-hotel-user-info.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { DesignationViewModel } from '../../../viewmodel/usersviewmodel/designationviewmodel';\nimport { MgRoleViewModel } from '../../../viewmodel/usersviewmodel/mgrolelistviewmodel';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { BackofficeLookupService } from '../../../common/backoffice-shared/services/backoffice-lookup';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserDataService } from '../../../common/backoffice-shared/services/user-data.service';\nimport { MatSnackBar, NativeDateAdapter, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { HotelUserViewModel } from '../../../viewmodel/usersviewmodel/hoteluserinfoviewmodel';\nimport { HotelNameViewModel } from '../../../viewmodel/usersviewmodel/hotelnameviewmodel';\nimport { UserProfileService } from '../../../../common/shared/services/user-profile.service';\nimport { BACKOFFICECONSTANTS } from '../../../common/constants';\n\nconst DATE_FORMATS = {\n  parse: {\n    dateInput: { month: 'short', year: 'numeric', day: 'numeric' }\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  }\n};\n\n\nexport class DatePickerDateAdapter extends NativeDateAdapter {\n  format(date: Date, displayFormat: Object): string {\n    date.setMinutes((date.getTimezoneOffset() * -1));\n    if (displayFormat === 'input') {\n      const day = date.getDate();\n      const month = date.toLocaleString('en-us', { month: 'long' });\n      const year = date.getFullYear();\n      return this._to2digit(day) + '-' + month.substring(0, 3) + '-' + year % 100;\n    } else {\n      return date.toDateString();\n    }\n  }\n\n  private _to2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n}\n\n@Component({\n  selector: 'app-individual-hotel-user-info',\n  templateUrl: './individual-hotel-user-info.component.html',\n  styleUrls: ['./individual-hotel-user-info.component.css'],\n  providers: [\n    { provide: DateAdapter, useClass: DatePickerDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS },\n  ]\n})\nexport class IndividualHotelUserInfoComponent implements OnInit {\n\n  designationList: DesignationViewModel[];\n  hotelList: HotelNameViewModel[];\n  roleList: MgRoleViewModel[];\n  individualHotelForm: FormGroup;\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  operation: string;\n  mgHotelViewModel: HotelUserViewModel= <HotelUserViewModel>{};\n  todaysDate = new Date();\n  minDate: string;\n  userId: string;\n  isInactiveDateRequired = false;\n  isChecked: boolean;\n  direction: number;\n\n  constructor(private backOfficeLookUpService: BackofficeLookupService,\n              private activatedRoute: ActivatedRoute,\n              private userDataService: UserDataService,\n              private snackBar: MatSnackBar,\n              private router: Router,\n              private userProfileService: UserProfileService,\n              private cd: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.direction = 1 ;\n    this.operation = this.activatedRoute.snapshot.params['operation'];\n    this.userId = this.activatedRoute.snapshot.params['id'];\n    this.individualHotelForm = new FormGroup({\n      hotelId: new FormControl('', Validators.required),\n      firstName: new FormControl('', Validators.required),\n      lastName: new FormControl('', Validators.required),\n      designationId: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      extranetRoleId: new FormControl('', Validators.required),\n      activationDate: new FormControl('', Validators.required),\n      inActivateUser: new FormControl(''),\n      deActivationDate: new FormControl('')\n    });\n\n    this.getDesignations();\n    this.getRoles();\n    this.getHotels();\n\n    if (this.operation.toLowerCase().trim() === this.edit) {\n      this.individualHotelForm.controls.activationDate.disable();\n      this.individualHotelForm.controls.deActivationDate.disable();\n      this.getIndividualHotelUser(this.userId);\n   }\n\n  }\n\n  getDesignations() {\n    this.designationList = this.activatedRoute.snapshot.data['designations'];\n  }\n\n  getRoles() {\n    this.roleList = this.activatedRoute.snapshot.data['roles'];\n  }\n\n  getHotels() {\n      this.hotelList = this.activatedRoute.snapshot.data['hotels'];\n  }\n\n  toggleDeactivationDate(event) {\n    this.isChecked = event.checked;\n    if (event.checked === true) {\n      this.isInactiveDateRequired = true;\n      this.individualHotelForm.controls.deActivationDate.enable();\n    } else {\n      this.isInactiveDateRequired = false;\n      this.individualHotelForm.controls.deActivationDate.disable();\n    }\n    this.cd.detectChanges();\n  }\n\n  saveIndividualHotelUserDetails() {\n\n    const individualHotelUser = Object.assign({}, this.mgHotelViewModel, this.individualHotelForm.value);\n\n    individualHotelUser.updatedBy = this.userProfileService.GetBasicUserInfo().FirstName + ' ' +\n                                    this.userProfileService.GetBasicUserInfo().LastName;\n    individualHotelUser.userName = individualHotelUser.email;\n    individualHotelUser.hotelUserType = BACKOFFICECONSTANTS.hotelUserType.individual;\n\n      if (this.operation === this.create) {\n\n        individualHotelUser.createdBy = this.userProfileService.GetBasicUserInfo().FirstName + ' ' +\n                                        this.userProfileService.GetBasicUserInfo().LastName;\n\n      this.userDataService.createHotelUser(individualHotelUser as HotelUserViewModel)\n      .subscribe(data => {\n        if (data.succeeded === true) {\n        window.scrollTo(0, 0);\n        this.snackBar.open('New user is created successfully', '', { duration:  CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top',\n        panelClass: 'showSnackBar'});\n        this.router.navigate(['/usermgmt/hoteluserslist']);\n      } else {\n        // TODO: Need to check how we are doing error handling.\n        this.snackBar.open('Error occourred while saving Agent. ' + data.errors[0].description ,\n        '', { duration:  CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n      }\n      });\n\n     } else if (this.operation === this.edit) {\n      individualHotelUser.createdBy =  this.mgHotelViewModel.createdBy;\n      individualHotelUser.activationDate =  this.mgHotelViewModel.activationDate;\n\n      if (this.isInactiveDateRequired) {\n      this.isChecked = true;\n      individualHotelUser.inActivationType = CONSTANTS.inActiveType.permanent;\n    }\n\n      this.userDataService.updateHotelUser(this.userId, individualHotelUser)\n      .subscribe(data => {\n        if (data.succeeded === true) {\n        window.scrollTo(0, 0);\n        this.snackBar.open('The user is updated successfully', '', { duration: CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top',\n        panelClass: 'showSnackBar'});\n        this.router.navigate(['/usermgmt/hoteluserslist']);\n      } else {\n        // TODO: Need to check how we are doing error handling.\n        this.snackBar.open('Error occourred while saving Agent. ' + data.errors[0].description ,\n        '', { duration:  CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n      }\n      });\n    }\n  }\n\n  cancel() {\n    window.scrollTo(0, 0);\n    this.router.navigate(['/usermgmt/hoteluserslist']);\n  }\n\n  getIndividualHotelUser(userId) {\n    this.userDataService.getHotelUserById(userId).subscribe(\n      (individualHotelUserData) => {\n          this.mgHotelViewModel.createdBy = individualHotelUserData.createdBy;\n          this.mgHotelViewModel.activationDate = individualHotelUserData.activationDate;\n\n          this.individualHotelForm.get('firstName').setValue(individualHotelUserData.firstName);\n          this.individualHotelForm.get('lastName').setValue(individualHotelUserData.lastName);\n          this.individualHotelForm.get('email').setValue(individualHotelUserData.email);\n          this.individualHotelForm.get('extranetRoleId').setValue(individualHotelUserData.extranetRoleId);\n          this.individualHotelForm.get('designationId').setValue(individualHotelUserData.designationId);\n          this.individualHotelForm.get('activationDate').setValue(individualHotelUserData.activationDate);\n          this.individualHotelForm.get('hotelId').setValue(individualHotelUserData.hotelId);\n          this.isChecked = false;\n          if (individualHotelUserData.deActivationDate != null) {\n            this.isInactiveDateRequired = true;\n            this.isChecked = true;\n            this.individualHotelForm.controls.deActivationDate.enable();\n            this.individualHotelForm.get('deActivationDate').setValue(individualHotelUserData.deActivationDate);\n          }\n      }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/individual-hotel-user-info/individual-hotel-user-info.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".controlButtons {\\r\\n  padding-top: 30px !important;\\r\\n  padding-bottom: 28px !important;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/supplier-user-info/supplier-user-info.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/supplier-user-info/supplier-user-info.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <form [formGroup]=\\\"supplierHotelForm\\\" (ngSubmit)=\\\"saveSupplierUserDetails()\\\">\\r\\n\\r\\n    <div class=\\\"row customeRow alignItemCenter\\\">\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mt-2 mb-0 mt-1\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Supplier\\\" name=\\\"Supplier\\\" formControlName=\\\"partnerList\\\" (change)=\\\"getHotelsByPartnerId(supplierHotelForm.get('partnerList').value);\\\"\\r\\n            required>\\r\\n            <mat-option [value]=\\\"null\\\"> Select </mat-option>\\r\\n            <mat-option *ngFor=\\\"let hotel of partnerList\\\" [value]=\\\"hotel.hotelChainId\\\">{{hotel.hotelChainName}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mt-2 mb-0 mt-1\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Hotel Name and Code\\\" name=\\\"Hotel Name and Code\\\" formControlName=\\\"hotelId\\\" (change)=\\\"selectAllHotels();\\\" multiple required>\\r\\n            <mat-option [value]=\\\"null\\\" *ngIf=\\\"isPartnerHotelList == true\\\"> All </mat-option>\\r\\n            <mat-option *ngFor=\\\"let hotelname of partnerHotelList\\\" [value]=\\\"hotelname.hotelId\\\">\\r\\n              {{hotelname.hotelName}} - {{hotelname.hotelCode}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"col-md-2 col-lg-1\\\">\\r\\n        <div class=\\\"userImageSection\\\">\\r\\n          <mat-icon class=\\\"userImage\\\">account_circle</mat-icon>\\r\\n          <div class=\\\"image-upload\\\">\\r\\n            <label for=\\\"file-input\\\">\\r\\n              <img src=\\\"assets/uploadPhoto.png\\\" title=\\\"Upload Image\\\" />\\r\\n            </label>\\r\\n            <input id=\\\"file-input\\\" type=\\\"file\\\" />\\r\\n          </div>\\r\\n          <button class=\\\"deletePhoto\\\" mat-raised-button title=\\\"Delete Image\\\">\\r\\n            <i class=\\\"fa fa-times-thin\\\"></i>\\r\\n          </button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group pt-2 col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"First Name\\\" id=\\\"firstName\\\" formControlName=\\\"firstName\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group pt-2 col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"Last Name\\\" id=\\\"lastName\\\" formControlName=\\\"lastName\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group pt-2 col-md-4 col-lg-3\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-select placeholder=\\\"Designation\\\" formControlName=\\\"designationId\\\" required>\\r\\n              <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n              <mat-option *ngFor=\\\"let designation of designationList\\\" [value]=\\\"designation.designationId\\\">{{designation.title}}</mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"Email ID\\\" id=\\\"emailID\\\" formControlName=\\\"email\\\" pattern=\\\"\\\\w+@\\\\w+\\\\.\\\\w+(,\\\\s*\\\\w+@\\\\w+\\\\.\\\\w+)*\\\" required\\r\\n          />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Role\\\" formControlName=\\\"extranetRoleId\\\" required>\\r\\n            <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n            <mat-option *ngFor=\\\"let role of roleList\\\" [value]=\\\"role.id\\\">{{role.name}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"col-md-4 col-lg-3 mt-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput [matDatepicker]=\\\"activationDate\\\" placeholder=\\\"Activation Date\\\" formControlName=\\\"activationDate\\\" [min]=\\\"(operation === create) ?  todaysDate : minDate\\\"\\r\\n            required>\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"activationDate\\\">\\r\\n            <mat-icon matDatepickerToggleIcon>\\r\\n              <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </mat-icon>\\r\\n          </mat-datepicker-toggle>\\r\\n          <mat-datepicker #activationDate></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"operation == 'edit'\\\">\\r\\n      <div class=\\\"col-md-4 col-lg-3 mt-3\\\">\\r\\n        <div class=\\\"form-check form-check-inline\\\">\\r\\n          <mat-checkbox formControlName=\\\"inActivateUser\\\" [checked]=\\\"isChecked\\\" (change)=\\\"toggleDeactivationDate($event)\\\">Inactivate User</mat-checkbox>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\" *ngIf=\\\"isChecked\\\">\\r\\n      <div class=\\\"col-md-4 col-lg-3 mt-4 pt-2 mb-0\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput [matDatepicker]=\\\"deActivationDate\\\" placeholder=\\\"Inactivation Date\\\" formControlName=\\\"deActivationDate\\\" [min]=\\\"(operation === edit) ? todaysDate : minDate\\\"\\r\\n            [required]=\\\"isInactiveDateRequired\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"deActivationDate\\\">\\r\\n            <mat-icon matDatepickerToggleIcon>\\r\\n              <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </mat-icon>\\r\\n          </mat-datepicker-toggle>\\r\\n          <mat-datepicker #deActivationDate></mat-datepicker>\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 controlButtons pl-3\\\">\\r\\n        <button title=\\\"Save\\\" type=\\\"submit\\\" class=\\\"genericButton activeButton mat-primary mr-1\\\" [disabled]=\\\"!supplierHotelForm.valid\\\" mat-raised-button>Save</button>\\r\\n        <button title=\\\"Cancel\\\" type=\\\"submit\\\" class=\\\"genericButton defaultButton\\\" mat-raised-button (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/supplier-user-info/supplier-user-info.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/supplier-user-info/supplier-user-info.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { DesignationViewModel } from '../../../viewmodel/usersviewmodel/designationviewmodel';\nimport { MgRoleViewModel } from '../../../viewmodel/usersviewmodel/mgrolelistviewmodel';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { BackofficeLookupService } from '../../../common/backoffice-shared/services/backoffice-lookup';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HotelChainViewModel } from '../../../../common/viewmodels/hotelchainviewmodel';\nimport { HotelNameViewModel } from '../../../viewmodel/usersviewmodel/hotelnameviewmodel';\nimport { BACKOFFICECONSTANTS } from '../../../common/constants';\nimport { UserProfileService } from '../../../../common/shared/services/user-profile.service';\nimport { HotelUserViewModel } from '../../../viewmodel/usersviewmodel/hoteluserinfoviewmodel';\nimport { MatSnackBar, NativeDateAdapter, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { UserDataService } from '../../../common/backoffice-shared/services/user-data.service';\n\nconst DATE_FORMATS = {\n  parse: {\n    dateInput: { month: 'short', year: 'numeric', day: 'numeric' }\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  }\n};\n\n\nexport class DatePickerDateAdapter extends NativeDateAdapter {\n  format(date: Date, displayFormat: Object): string {\n    date.setMinutes((date.getTimezoneOffset() * -1));\n    if (displayFormat === 'input') {\n      const day = date.getDate();\n      const month = date.toLocaleString('en-us', { month: 'long' });\n      const year = date.getFullYear();\n      return this._to2digit(day) + '-' + month.substring(0, 3) + '-' + year % 100;\n    } else {\n      return date.toDateString();\n    }\n  }\n\n  private _to2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n}\n\n@Component({\n  selector: 'app-supplier-user-info',\n  templateUrl: './supplier-user-info.component.html',\n  styleUrls: ['./supplier-user-info.component.css'],\n  providers: [\n    { provide: DateAdapter, useClass: DatePickerDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS },\n  ]\n})\nexport class SupplierUserInfoComponent implements OnInit {\n\n  designationList: DesignationViewModel[];\n  roleList: MgRoleViewModel[];\n  partnerList: HotelChainViewModel[];\n  supplierHotelForm: FormGroup;\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  operation: string;\n  editPartnerId: number;\n  isPartnerHotelList: boolean;\n  partnerHotelList: HotelNameViewModel[];\n  mgHotelViewModel: HotelUserViewModel= <HotelUserViewModel>{};\n  userId: string;\n  isInactiveDateRequired = false;\n  isChecked: boolean;\n  todaysDate = new Date();\n  minDate: string;\n  allHotelIds: string[];\n\n  constructor(private backOfficeLookUpService: BackofficeLookupService,\n              private activatedRoute: ActivatedRoute,\n              private userProfileService: UserProfileService,\n              private router: Router,\n              private snackBar: MatSnackBar,\n              private userDataService: UserDataService,\n              private cd: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.userId = this.activatedRoute.snapshot.params['id'];\n    this.operation = this.activatedRoute.snapshot.params['operation'];\n    this.allHotelIds = [''];\n    this.supplierHotelForm = new FormGroup({\n      partnerList: new FormControl('', Validators.required),\n      hotelId: new FormControl,\n      firstName: new FormControl('', Validators.required),\n      lastName: new FormControl('', Validators.required),\n      designationId: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      extranetRoleId: new FormControl('', Validators.required),\n      activationDate: new FormControl('', Validators.required),\n      inActivateUser: new FormControl(''),\n      deActivationDate: new FormControl('')\n    });\n\n    this.getDesignations();\n    this.getRoles();\n    this.getHotelPartners();\n\n    if (this.operation.toLowerCase().trim() === this.edit) {\n      this.supplierHotelForm.controls.activationDate.disable();\n      this.supplierHotelForm.controls.deActivationDate.disable();\n      this.getSupplierHotelUser(this.userId);\n   }\n  }\n\n  getDesignations() {\n    this.designationList = this.activatedRoute.snapshot.data['designations'];\n  }\n\n  getRoles() {\n    this.roleList = this.activatedRoute.snapshot.data['roles'];\n  }\n\n  getHotelPartners() {\n    this.partnerList = this.activatedRoute.snapshot.data['suppliers'];\n  }\n\n  // fetch hotels according to partnerId\n  getHotelsByPartnerId(partnerId) {\n    if (partnerId !== null) {\n      this.backOfficeLookUpService.getHotelsByPartnerId(partnerId).subscribe((data) => {\n        this.partnerHotelList = data;\n        this.isPartnerHotelList = (data.length > 1) ? true : false;\n      });\n     }\n  }\n\n  toggleDeactivationDate(event) {\n    this.isChecked = event.checked;\n    if (event.checked === true) {\n      this.isInactiveDateRequired = true;\n      this.supplierHotelForm.controls.deActivationDate.enable();\n    } else {\n      this.isInactiveDateRequired = false;\n      this.supplierHotelForm.controls.deActivationDate.disable();\n    }\n    this.cd.detectChanges();\n  }\n\n  saveSupplierUserDetails() {\n\n    const SupplierUser = Object.assign({}, this.mgHotelViewModel, this.supplierHotelForm.value);\n\n    SupplierUser.updatedBy = this.userProfileService.GetBasicUserInfo().FirstName + ' ' +\n                                    this.userProfileService.GetBasicUserInfo().LastName;\n    SupplierUser.userName = SupplierUser.email;\n    SupplierUser.hotelUserType = BACKOFFICECONSTANTS.hotelUserType.supplier;\n\n    if (this.operation === this.create) {\n\n      SupplierUser.createdBy = this.userProfileService.GetBasicUserInfo().FirstName + ' ' +\n                                        this.userProfileService.GetBasicUserInfo().LastName;\n\n      this.userDataService.createHotelUser(SupplierUser as HotelUserViewModel)\n      .subscribe(data => {\n        if (data.succeeded === true) {\n        window.scrollTo(0, 0);\n        this.snackBar.open('New Supplier is created successfully', '',\n        { duration:  CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top',\n        panelClass: 'showSnackBar'});\n        this.router.navigate(['/usermgmt/hoteluserslist']);\n      } else {\n        // TODO: Need to check how we are doing error handling.\n        this.snackBar.open('Error occourred while saving Supplier. ' + data.errors[0].description ,\n        '', { duration:  CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n      }\n      });\n\n     } else if (this.operation === this.edit) {\n      SupplierUser.createdBy =  this.mgHotelViewModel.createdBy;\n      SupplierUser.activationDate =  this.mgHotelViewModel.activationDate;\n\n      if (this.isInactiveDateRequired) {\n      this.isChecked = true;\n      SupplierUser.inActivationType = CONSTANTS.inActiveType.permanent;\n    }\n\n      this.userDataService.updateHotelUser(this.userId, SupplierUser)\n      .subscribe(data => {\n        if (data.succeeded === true) {\n        window.scrollTo(0, 0);\n        this.snackBar.open('The Supplier is updated successfully', '',\n        { duration: CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top',\n        panelClass: 'showSnackBar'});\n        this.router.navigate(['/usermgmt/hoteluserslist']);\n      } else {\n        // TODO: Need to check how we are doing error handling.\n        this.snackBar.open('Error occourred while saving Supplier. ' + data.errors[0].description ,\n        '', { duration:  CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n      }\n      });\n    }\n\n  }\n\n  cancel() {\n    window.scrollTo(0, 0);\n    this.router.navigate(['/usermgmt/hoteluserslist']);\n  }\n\n  selectAllHotels() {\n    // fetch all hotelIds from hotelsList\n    if (this.partnerHotelList !== null) {\n      this.allHotelIds.splice(0 , this.allHotelIds.length);\n      for (let b = 0; b < this.partnerHotelList.length; b++) {\n        this.allHotelIds[b] = this.partnerHotelList[b].hotelId;\n      }\n      // select/deselect all hotels\n      if (this.supplierHotelForm.value.hotelId.length !== 0) {\n        if (this.supplierHotelForm.value.hotelId[0] == null && this.supplierHotelForm.value.hotelId.length !==\n          (this.allHotelIds.length + 1)) {\n            this.supplierHotelForm.patchValue({hotelId: this.allHotelIds});\n        } else if (this.supplierHotelForm.value.hotelId.length === (this.allHotelIds.length + 1)) {\n          this.supplierHotelForm.patchValue({hotelId: null});\n        }\n     }\n    }\n }\n\n  getSupplierHotelUser(userId) {\n    this.userDataService.getHotelUserById(userId).subscribe(\n      (supplierHotelUserData) => {\n          this.mgHotelViewModel.createdBy = supplierHotelUserData.createdBy;\n          this.mgHotelViewModel.activationDate = supplierHotelUserData.activationDate;\n\n          this.supplierHotelForm.get('firstName').setValue(supplierHotelUserData.firstName);\n          this.supplierHotelForm.get('lastName').setValue(supplierHotelUserData.lastName);\n          this.supplierHotelForm.get('email').setValue(supplierHotelUserData.email);\n          this.supplierHotelForm.get('extranetRoleId').setValue(supplierHotelUserData.extranetRoleId);\n          this.supplierHotelForm.get('designationId').setValue(supplierHotelUserData.designationId);\n          this.supplierHotelForm.get('activationDate').setValue(supplierHotelUserData.activationDate);\n          this.supplierHotelForm.get('partnerList').setValue(supplierHotelUserData.chainId);\n          this.getHotelsByPartnerId(supplierHotelUserData.chainId);\n          this.supplierHotelForm.get('hotelId').setValue(supplierHotelUserData.hotelId);\n          this.isChecked = false;\n          if (supplierHotelUserData.deActivationDate != null) {\n            this.isInactiveDateRequired = true;\n            this.isChecked = true;\n            this.supplierHotelForm.controls.deActivationDate.enable();\n            this.supplierHotelForm.get('deActivationDate').setValue(supplierHotelUserData.deActivationDate);\n          }\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/supplier-user-info/supplier-user-info.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n.transparent-circle span:before {\\r\\n  top: -11.5px;\\r\\n  right: 3px;\\r\\n}\\r\\n\\r\\n.controlButtons {\\r\\n  padding-top: 30px !important;\\r\\n  padding-bottom: 28px !important;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-info/mg-user-info.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/mg-user/mg-user-info/mg-user-info.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid pt-4\\\">\\r\\n  <div class=\\\"customBreadcrumb mb-4\\\">\\r\\n    <span>MG </span>\\r\\n    <span *ngIf=\\\"operation == 'create'\\\">&gt; Create New MG User</span>\\r\\n    <span *ngIf=\\\"operation == 'edit'\\\">&gt; Edit MG User</span>\\r\\n  </div>\\r\\n  <h1 *ngIf=\\\"operation == 'create'\\\" class=\\\"mainHeading mb-2 customBreadcrumb borderBottomNone\\\">Create New User<span class=\\\"mandatoryInfo float-right\\\">Indicates Mandatory Fields</span></h1>\\r\\n  <h1 *ngIf=\\\"operation == 'edit'\\\" class=\\\"mainHeading mb-2 customBreadcrumb borderBottomNone\\\">Edit User<span class=\\\"mandatoryInfo float-right\\\">Indicates Mandatory Fields</span></h1>\\r\\n  <form [formGroup]=\\\"mgUserForm\\\" (ngSubmit)=\\\"saveUser()\\\">\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"col-md-2 col-lg-1\\\">\\r\\n        <div class=\\\"userImageSection\\\">\\r\\n          <mat-icon class=\\\"userImage\\\">account_circle</mat-icon>\\r\\n          <div class=\\\"image-upload\\\">\\r\\n            <label for=\\\"file-input\\\">\\r\\n              <img src=\\\"assets/uploadPhoto.png\\\" title=\\\"Upload Image\\\" />\\r\\n            </label>\\r\\n            <input id=\\\"file-input\\\" type=\\\"file\\\" />\\r\\n          </div>\\r\\n          <button class=\\\"deletePhoto\\\" mat-raised-button title=\\\"Delete Image\\\">\\r\\n            <i class=\\\"fa fa-times-thin\\\"></i>\\r\\n          </button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow formSections p-0 borderBottomNone\\\">\\r\\n      <div class=\\\"form-group pt-2 col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\" id=\\\"firstName\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group pt-2 col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\" id=\\\"lastName\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group pt-2 col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Employee ID\\\" formControlName=\\\"employeeId\\\" id=\\\"employeeID\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow formSections p-0 borderBottomNone\\\">\\r\\n\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Email ID\\\" formControlName=\\\"email\\\" id=\\\"email\\\" pattern=\\\"\\\\w+@\\\\w+\\\\.\\\\w+(,\\\\s*\\\\w+@\\\\w+\\\\.\\\\w+)*\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Department(s)\\\" name=\\\"department\\\" formControlName=\\\"departments\\\" multiple required>\\r\\n            <mat-option *ngFor=\\\"let department of departmentList\\\" [value]=\\\"department.id\\\">{{department.name}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <h6 class=\\\"blackText mavenProMedium pt-3\\\">Please Select Application & Role</h6>\\r\\n    <div formArrayName=\\\"userApplicationRole\\\" *ngFor=\\\"let appRole of userApplicationRole.controls; let i =index\\\">\\r\\n      <div [formGroupName]=\\\"i\\\">    \\r\\n       \\r\\n          <div class=\\\"row formSections p-0 borderBottomNone alignItemCenter\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n              <div class=\\\"blueBackground d-flex pt-4 pl-2\\\">\\r\\n                <div class=\\\"row pb-1\\\">\\r\\n                <div class=\\\"form-group ml-4 pl-1 pr-0 col-md-5 col-lg-3 mb-0\\\">\\r\\n                  <mat-form-field>\\r\\n                    <mat-select formControlName=\\\"applicationId\\\" placeholder=\\\"Application\\\" (change)=\\\"getRolesForApplication(i)\\\" required>\\r\\n                      <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n                      <ng-container *ngFor=\\\"let app of applicationList\\\">\\r\\n                        <mat-option [value]=\\\"app.id\\\">{{app.name}}</mat-option>\\r\\n                      </ng-container>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                 \\r\\n                </div>\\r\\n                <div class=\\\"form-group pl-0 pr-0 ml-5 col-md-5 col-lg-3 mb-0\\\">\\r\\n                  <mat-form-field>\\r\\n                    <mat-select formControlName=\\\"roleId\\\" placeholder=\\\"Roles\\\" required>\\r\\n                      <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n                      <ng-container *ngFor=\\\"let role of this.appRolesListArray[i] \\\">\\r\\n                        <mat-option [value]=\\\"role.id\\\">{{role.name}}</mat-option>\\r\\n                      </ng-container>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                  \\r\\n                </div>\\r\\n                <div class=\\\"col-md-2 ml-5 pt-1 text-right\\\">\\r\\n                  <ng-container *ngIf=\\\"i > 0\\\">\\r\\n                    <span class=\\\"btn transparent-circle mr-3\\\" title=\\\"Delete\\\" (click)=\\\"confirmDeleteAppRole(i)\\\"><i aria-hidden=\\\"true\\\" class=\\\"fa fa-times-thin\\\"></i></span>\\r\\n                  </ng-container>\\r\\n                  <span class=\\\"btn transparent-circle\\\" title=\\\"Add\\\" [hidden]='isMaxLength' (click)=\\\"addAppRole()\\\"><span></span></span>\\r\\n                </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>      \\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 pt-2 \\\">\\r\\n        <mat-error *ngIf=\\\"mgUserForm.get('userApplicationRole').errors && mgUserForm.get('userApplicationRole').errors.ValidateAppRole\\\">\\r\\n          This app type is already selected.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"mgUserForm.get('userApplicationRole').errors && mgUserForm.get('userApplicationRole').errors.ValidateAppRoleNotNull\\\">\\r\\n          Role needs to be selected\\r\\n        </mat-error>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow formSections p-0 borderBottomNone\\\">\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 pt-2 mb-0 mt-3 pt-3\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput [matDatepicker]=\\\"activationDate\\\" placeholder=\\\"Activation Date\\\" formControlName=\\\"activationDate\\\" [min]=\\\"todaysDate\\\" required>\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"activationDate\\\">\\r\\n            <mat-icon matDatepickerToggleIcon>\\r\\n              <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </mat-icon>\\r\\n          </mat-datepicker-toggle>\\r\\n          <mat-datepicker #activationDate></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"operation == 'edit'\\\" class=\\\"row customeRow formSections p-0 borderBottomNone\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"row customeRow\\\">\\r\\n          <div class=\\\"form-group col-md-4 col-lg-3 mb-3 mt-3\\\">\\r\\n            <mat-checkbox [checked]=\\\"isInactivateUser\\\" (change)=\\\"showHideInactiationDatesSection($event)\\\">Inactivate User</mat-checkbox>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"isInactivateUser\\\">\\r\\n          <div class=\\\"pl-2 ml-2 form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n            <mat-radio-group class=\\\"d-flex\\\" (change)=\\\"toggleInactiveUserType($event)\\\">\\r\\n              <mat-radio-button value=\\\"T\\\" [checked]=\\\"inactiveType == 'T'\\\">Temporary</mat-radio-button>\\r\\n              <mat-radio-button value=\\\"P\\\" [checked]=\\\"inactiveType == 'P'\\\">Permanent</mat-radio-button>\\r\\n            </mat-radio-group>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"isInactivateUser && inactiveType == 'T'\\\">\\r\\n          <div class=\\\"pl-2 form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 mt-3 pt-2\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput [matDatepicker]=\\\"inactiveFromDate\\\" placeholder=\\\"Inactive From\\\" formControlName=\\\"temporaryInActivationDate\\\" [min]=\\\"todaysDate\\\" (dateInput)=\\\"inActiveFromDateChange('input', $event)\\\" (dateChange)=\\\"inActiveFromDateChange('change', $event)\\\" [required]=\\\"inactiveType == 'T'\\\">\\r\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"inactiveFromDate\\\">\\r\\n                    <mat-icon matDatepickerToggleIcon>\\r\\n                      <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </mat-icon>\\r\\n                  </mat-datepicker-toggle>\\r\\n                  <mat-datepicker #inactiveFromDate></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6 mt-3 pt-2\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput [matDatepicker]=\\\"inactiveToDate\\\" placeholder=\\\"Inactive To\\\" formControlName=\\\"temporaryActivationDate\\\" [min]=\\\"inactiveToMinDate\\\" [required]=\\\"inactiveType == 'T'\\\">\\r\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"inactiveToDate\\\">\\r\\n                    <mat-icon matDatepickerToggleIcon>\\r\\n                      <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </mat-icon>\\r\\n                  </mat-datepicker-toggle>\\r\\n                  <mat-datepicker #inactiveToDate></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"isInactivateUser && inactiveType == 'P'\\\">\\r\\n          <div class=\\\"ml-3 mt-3 form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n            <mat-form-field>\\r\\n              <input matInput [matDatepicker]=\\\"inactivationDate\\\" placeholder=\\\"Inactivation Date\\\" formControlName=\\\"deActivationDate\\\" [min]=\\\"todaysDate\\\" [required]=\\\"inactiveType == 'P'\\\">\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"inactivationDate\\\">\\r\\n                <mat-icon matDatepickerToggleIcon>\\r\\n                  <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                </mat-icon>\\r\\n              </mat-datepicker-toggle>\\r\\n              <mat-datepicker #inactivationDate></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 controlButtons pl-3\\\">\\r\\n        <button title=\\\"Save\\\" type=\\\"submit\\\" class=\\\"genericButton activeButton mat-primary mr-1\\\" mat-raised-button [disabled]=\\\"!mgUserForm.valid\\\">Save</button>\\r\\n        <button title=\\\"Cancel\\\" type=\\\"button\\\" class=\\\"genericButton defaultButton\\\" mat-raised-button (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-info/mg-user-info.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/mg-user/mg-user-info/mg-user-info.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MgApplicationViewModel } from '../../../viewmodel/usersviewmodel/mgapplicationlistviewmodel';\nimport { DepartmentViewModel } from '../../../viewmodel/usersviewmodel/departmentviewmodel';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { FormGroup, FormControl, FormArray, AbstractControl } from '@angular/forms';\nimport { MatSnackBar, NativeDateAdapter, DateAdapter, MAT_DATE_FORMATS, MatDatepickerInputEvent } from '@angular/material';\nimport { UserDataService } from '../../../common/backoffice-shared/services/user-data.service';\nimport { MgUserViewModel } from '../../../viewmodel/usersviewmodel/mguserviewmodel';\nimport { Observable } from 'rxjs/Observable';\nimport { MgRoleViewModel } from '../../../viewmodel/usersviewmodel/mgrolelistviewmodel';\nimport { BackofficeLookupService } from '../../../common/backoffice-shared/services/backoffice-lookup';\nimport { UserProfileService } from '../../../../common/shared/services/user-profile.service';\nimport { ApplicationRoleIdViewModel } from '../../../viewmodel/usersviewmodel/applicationroleidviewmodel';\nimport { DialogsService } from '../../../../extranet/common/extranet-shared/dialogs/dialogs.service';\nimport { BACKOFFICECONSTANTS } from '../../../common/constants';\n\nconst DATE_FORMATS = {\n  parse: {\n    dateInput: { month: 'short', year: 'numeric', day: 'numeric' }\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  }\n};\n\nexport class DatePickerDateAdapter extends NativeDateAdapter {\n  format(date: Date, displayFormat: Object): string {\n    date.setMinutes((date.getTimezoneOffset() * -1));\n    if (displayFormat === 'input') {\n      const day = date.getDate();\n      const month = date.toLocaleString('en-us', { month: 'long' });\n      const year = date.getFullYear();\n      return this._to2digit(day) + '-' + month.substring(0, 3) + '-' + year % 100;\n    } else {\n      return date.toDateString();\n    }\n  }\n\n  private _to2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n}\n\nfunction ValidateAppRole(control: AbstractControl): { [key: string]: boolean } | null {\n  const appRoleList = control;\n  if ((appRoleList.value !== undefined) && (appRoleList.value !== null) &&\n    (appRoleList.value.length > 0)) {\n\n    const appList = [];\n\n    const appRoleArray = [];\n    appRoleList.value.forEach(element => {\n      appList.push(element.applicationId);\n      appRoleArray.push({applicationId: element.applicationId, roleId: element.roleId});\n    });\n    const sorterAppList = appList.sort();\n    const duplicateApp = false;\n    for (let i = 0; i < sorterAppList.length - 1; i++) {\n      if (sorterAppList[i + 1] != null && sorterAppList[i] != null) {\n        if (sorterAppList[i + 1] === sorterAppList[i]) {\n          return { 'ValidateAppRole': true };\n        }\n      }\n    }\n\n    for (let i = 0; i < appRoleArray.length; i++) {\n      if ( appRoleArray[i] != null) {\n        if (appRoleArray[i].applicationId !== null &&  appRoleArray[i].roleId === null ) {\n          return { 'ValidateAppRoleNotNull': true };\n        }\n      }\n    }\n\n  }\n  return null;\n}\n\n@Component({\n  selector: 'app-mg-user-info',\n  templateUrl: './mg-user-info.component.html',\n  styleUrls: ['./mg-user-info.component.css'],\n  providers: [\n    { provide: DateAdapter, useClass: DatePickerDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS },\n  ]\n})\n\nexport class MgUserInfoComponent implements OnInit {\n\n  departmentList: DepartmentViewModel[];\n  applicationList: MgApplicationViewModel[];\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  temporary = CONSTANTS.inActiveType.temporary;\n  permanent = CONSTANTS.inActiveType.permanent;\n  // id: string;\n  userId: string;\n  operation: string;\n  mgUserForm: FormGroup;\n  mgUserViewModel: MgUserViewModel = <MgUserViewModel>{};\n  appRolesListArray = Array<MgRoleViewModel[]>();\n  appRoles: Observable<MgRoleViewModel[]>;\n  isMaxLength: boolean;\n  result: any;\n  actions: string;\n  isInactivateUser: boolean;\n  inactiveType: string;\n  todaysDate = new Date();\n  inactiveToMinDate = new Date();\n  mgUser = BACKOFFICECONSTANTS.userType.mgUser;\n  wasTemporaryInactive: boolean;\n\n  constructor(private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private cd: ChangeDetectorRef,\n              private snackBar: MatSnackBar,\n              private userDataService: UserDataService,\n              private backofficeLookupService: BackofficeLookupService,\n              private userProfileService: UserProfileService,\n              private dialogsService: DialogsService) { }\n\n  ngOnInit() {\n    // Get the id from the activated route\n    this.userId = this.activatedRoute.snapshot.params['id'];\n    this.operation = this.activatedRoute.snapshot.params['operation'];\n    // Get all the master data\n    this.getDepartments();\n    this.getApplications();\n\n    // Set inactiveToMinDate as tomorrow's date\n    this.inactiveToMinDate.setDate(this.todaysDate.getDate() + 1);\n\n    // Create the Form Model\n    this.mgUserForm = new FormGroup({\n      firstName: new FormControl(),\n      lastName: new FormControl(),\n      userName: new FormControl(),\n      employeeId: new FormControl(),\n      email: new FormControl(),\n      departments: new FormControl(),\n      activationDate: new FormControl(),\n      userApplicationRole: new FormArray([], ValidateAppRole),\n      temporaryInActivationDate: new FormControl(),\n      temporaryActivationDate: new FormControl(),\n      deActivationDate: new FormControl()\n    });\n\n    if (this.operation.toLowerCase().trim() === this.create) {\n      this.addAppRole();\n    } else if (this.operation.toLowerCase().trim() === this.edit || this.operation.toLowerCase().trim() === this.read) {\n      this.getMGUser(this.userId);\n      this.mgUserForm.controls.activationDate.disable();\n    }\n  }\n\n  getMGUser(userId) {\n    this.userDataService.getMGUserById(userId).subscribe(\n      (mgUserData) => {\n        if (this.operation.toLowerCase().trim() === this.edit) {\n          this.mgUserViewModel = mgUserData;\n          this.isInactivateUser = false;\n          this.wasTemporaryInactive = false;\n          this.mgUserForm.get('firstName').setValue(mgUserData.firstName);\n          this.mgUserForm.get('lastName').setValue(mgUserData.lastName);\n          this.mgUserForm.get('userName').setValue(mgUserData.userName);\n          this.mgUserForm.get('employeeId').setValue(mgUserData.employeeId);\n          this.mgUserForm.get('email').setValue(mgUserData.email);\n          const departmentIds = [];\n          for (const departmentId of mgUserData.departments) {\n            departmentIds.push(departmentId);\n          }\n          this.mgUserForm.get('departments').setValue(departmentIds);\n          this.mgUserForm.get('activationDate').setValue(mgUserData.activationDate);\n          const applicationRoleIdArray: ApplicationRoleIdViewModel[] = [];\n          const appRoleValue = mgUserData.userApplicationRole;\n          for (let i = 0; i < appRoleValue.length; i++) {\n            this.addAppRole();\n          }\n          this.userApplicationRole.controls.forEach((control , index) => {\n            control.get('applicationId').setValue(appRoleValue[index].applicationId);\n            this.getRolesForApplication(index);\n            control.get('roleId').setValue(appRoleValue[index].roleId);\n          });\n\n          if (mgUserData.inActivationType !== null &&\n            mgUserData.inActivationType !== undefined &&\n            mgUserData.inActivationType.trim() !== '') {\n            this.isInactivateUser = true;\n            this.inactiveType = mgUserData.inActivationType;\n            if (this.inactiveType === this.temporary &&\n                mgUserData.temporaryInActivationDate !== undefined &&\n                mgUserData.temporaryInActivationDate !== null &&\n                mgUserData.temporaryInActivationDate !== '' &&\n                new Date(mgUserData.temporaryInActivationDate) <= this.todaysDate) {\n              this.wasTemporaryInactive = true;\n            }\n          }\n\n          this.mgUserForm.get('temporaryInActivationDate').setValue(mgUserData.temporaryInActivationDate);\n          this.mgUserForm.get('temporaryActivationDate').setValue(mgUserData.temporaryActivationDate);\n          this.mgUserForm.get('deActivationDate').setValue(mgUserData.deActivationDate);\n          this.toggleInactivationDates();\n          this.cd.detectChanges();\n        }\n      }\n    );\n  }\n\n  getDepartments() {\n    this.departmentList = this.activatedRoute.snapshot.data['departments'];\n   }\n\n  getApplications() {\n    this.applicationList = this.activatedRoute.snapshot.data['applications'];\n  }\n\n   get userApplicationRole():  FormArray {\n    return <FormArray>this.mgUserForm.get('userApplicationRole');\n   }\n\n  buildAppRole(): FormGroup {\n      let appRoleFormGroup: FormGroup;\n      appRoleFormGroup = new FormGroup({\n        applicationId: new FormControl(),\n        roleId: new FormControl()\n    });\n    return appRoleFormGroup;\n   }\n\n  addAppRole() {\n    this.userApplicationRole.push(this.buildAppRole());\n    if (this.appRolesListArray === null || this.appRolesListArray === undefined) {\n      this.appRolesListArray = new Array<MgRoleViewModel[]>();\n    } else {\n      this.appRolesListArray.push([]);\n    }\n\n    if (this.userApplicationRole.length === this.applicationList.length) {\n\n      this.isMaxLength = true;\n    }\n    this.cd.detectChanges();\n  }\n\n  confirmDeleteAppRole(index: number) {\n    this.isMaxLength = false;\n    this.dialogsService\n    .confirm('Confirm', 'Are you sure you want to delete this application role?').subscribe(res => {\n      this.result = res;\n      if (this.result) {\n        this.deleteAppRole(index);\n      } else {\n        this.actions = null;\n      }\n    });\n  }\n\n  deleteAppRole(index: number) {\n    this.userApplicationRole.removeAt(index);\n    this.appRolesListArray.splice(index, 1);\n    this.cd.detectChanges();\n  }\n\n  getRolesForApplication(applicationIndex: number) {\n    const applicationId = this.userApplicationRole.controls[applicationIndex].get('applicationId').value;\n    this.appRoles = this.backofficeLookupService.getRolesByApplicationIdAndUserType(applicationId, this.mgUser);\n    this.appRoles.subscribe(data => {\n      this.appRolesListArray[applicationIndex] = data;\n    });\n  }\n\n  saveUser() {\n    const savedMGUser: MgUserViewModel = Object.assign({}, this.mgUserViewModel, this.mgUserForm.value);\n    savedMGUser.userName = savedMGUser.email;\n    savedMGUser.updatedBy = this.userProfileService.GetBasicUserInfo().FirstName + ' ' +\n                            this.userProfileService.GetBasicUserInfo().LastName;\n    if (this.operation === this.create) {\n      savedMGUser.createdBy = this.userProfileService.GetBasicUserInfo().FirstName + ' ' +\n                            this.userProfileService.GetBasicUserInfo().LastName;\n      this.userDataService.createMGUser(savedMGUser)\n      .subscribe(data => {\n        window.scrollTo(0, 0);\n        let snackBarMessage = 'New user is created successfully';\n        if (!data.succeeded) {\n          snackBarMessage = 'Error while creating new user';\n          if (data.errors && data.errors.length > 0) {\n            snackBarMessage += ' - ' + data.errors[0].description;\n          }\n        }\n        this.snackBar.open(snackBarMessage, '', { duration: CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top',\n        panelClass: 'showSnackBar'});\n        this.router.navigate(['/usermgmt/mgusers']);\n      });\n    }  else if (this.operation === this.edit) {\n      savedMGUser.createdBy = this.mgUserViewModel.createdBy;\n      if (this.inactiveType !== undefined && this.inactiveType !== null && this.inactiveType.trim() !== '') {\n        savedMGUser.inActivationType = this.inactiveType;\n        if (this.inactiveType === this.temporary) {\n          // Clear deActivationDate if inactive type is Temporary\n          savedMGUser.deActivationDate = null;\n        } else {\n          // Clear temporaryInActivationDate and temporaryActivationDate if inactive type is Permanent\n          savedMGUser.temporaryInActivationDate = null;\n          savedMGUser.temporaryActivationDate = null;\n        }\n      } else {\n        // Clear deActivationDate, temporaryInActivationDate and temporaryActivationDate if Inactivate User checkbox is unchecked\n        // If Inactivate User checkbox is unchecked -\n        // Check if the user was temporary inactive\n        // if yes, set temporaryActivationDate to today's date in ISOString format e.g. \"2018-04-25T00:00:00.000Z\"\n        // if no, clear inActivationType, deActivationDate, temporaryInActivationDate and temporaryActivationDate\n        if (this.wasTemporaryInactive) {\n          savedMGUser.temporaryActivationDate = new Date(Date.UTC(this.todaysDate.getFullYear(),\n                                                                  this.todaysDate.getMonth(),\n                                                                  this.todaysDate.getDate(),\n                                                                  0, 0, 0)).toISOString();\n        } else {\n          savedMGUser.inActivationType = null;\n          savedMGUser.temporaryInActivationDate = null;\n          savedMGUser.temporaryActivationDate = null;\n          savedMGUser.deActivationDate = null;\n        }\n      }\n      this.userDataService.updateMGUser(this.userId, savedMGUser)\n      .subscribe(data => {\n        window.scrollTo(0, 0);\n        let snackBarMessage = 'The user is updated successfully';\n        if (!data.succeeded) {\n          snackBarMessage = 'Error while updating the user';\n          if (data.errors && data.errors.length > 0) {\n            snackBarMessage += ' - ' + data.errors[0].description;\n          }\n        }\n        this.snackBar.open(snackBarMessage, '', { duration: CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top',\n        panelClass: 'showSnackBar'});\n        this.router.navigate(['/usermgmt/mgusers']);\n      });\n    }\n  }\n\n  cancel() {\n    window.scrollTo(0, 0);\n    this.router.navigate(['/usermgmt/mgusers']);\n  }\n\n  showHideInactiationDatesSection(event) {\n      this.isInactivateUser = event.checked;\n      // Temporary radio button will be by default selected\n      if (event.checked) {\n        this.inactiveType = this.temporary;\n      } else {\n      // Once Inactivate User checkbox unchecked, reset inactiveType\n        this.inactiveType = null;\n      }\n      this.toggleInactivationDates();\n      this.cd.detectChanges();\n  }\n\n  toggleInactiveUserType(event) {\n      this.inactiveType = event.value;\n      this.toggleInactivationDates();\n      this.cd.detectChanges();\n  }\n\n  toggleInactivationDates() {\n    if (this.inactiveType === this.temporary) {\n      this.mgUserForm.controls.deActivationDate.disable();\n      this.mgUserForm.controls.temporaryInActivationDate.enable();\n      this.mgUserForm.controls.temporaryActivationDate.enable();\n    } else if (this.inactiveType === this.permanent) {\n      this.mgUserForm.controls.deActivationDate.enable();\n      this.mgUserForm.controls.temporaryInActivationDate.disable();\n      this.mgUserForm.controls.temporaryActivationDate.disable();\n    } else {\n      this.mgUserForm.controls.deActivationDate.disable();\n      this.mgUserForm.controls.temporaryInActivationDate.disable();\n      this.mgUserForm.controls.temporaryActivationDate.disable();\n    }\n  }\n\n  inActiveFromDateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n    const inactiveFromDateValue = this.mgUserForm.get('temporaryInActivationDate').value;\n    const inactiveToDateValue = this.mgUserForm.get('temporaryActivationDate').value;\n    const inactiveFromDate = inactiveFromDateValue !== undefined && inactiveFromDateValue !== null ? new Date(inactiveFromDateValue) : '';\n    if (inactiveFromDate !== '') {\n      // Set inactiveToMinDate as next day of inactiveFromDate\n      this.inactiveToMinDate = inactiveFromDate;\n      this.inactiveToMinDate.setDate(inactiveFromDate.getDate() + 1);\n      const inactiveToDate = inactiveToDateValue !== undefined && inactiveToDateValue !== null ? new Date(inactiveToDateValue) : '';\n      if (inactiveToDate !== '') {\n        if (inactiveFromDate >= inactiveToDate) {\n          this.mgUserForm.get('temporaryActivationDate').setValue(null);\n        }\n      }\n    } else {\n      // Set inactiveToMinDate as tomorrow's date\n      this.inactiveToMinDate = new Date();\n      this.inactiveToMinDate.setDate(this.todaysDate.getDate() + 1);\n    }\n    this.cd.detectChanges();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-info/mg-user-info.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".firstnameTH {\\r\\n  width: 15%;\\r\\n}\\r\\n\\r\\n.empIDTH {\\r\\n  width: 12%;\\r\\n}\\r\\n\\r\\n.emailTH {\\r\\n  width: 14%;\\r\\n}\\r\\n\\r\\n.departmentTH {\\r\\n  width: 10%;\\r\\n}\\r\\n\\r\\n.applicationRoleTH {\\r\\n  width: 14%;\\r\\n}\\r\\n\\r\\n.activationTH {\\r\\n  width: 16%;\\r\\n}\\r\\n\\r\\n.userStatusTH {\\r\\n  width: 10%;\\r\\n  display: -webkit-box;\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  -webkit-box-align: center;\\r\\n      -ms-flex-align: center;\\r\\n          align-items: center;\\r\\n}\\r\\n\\r\\n.userActionTH {\\r\\n  width: 9%;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-list/mg-user-list.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/mg-user/mg-user-list/mg-user-list.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"mt-4 pt-2\\\">\\r\\n    <h1 class=\\\"mainHeading pb-0 borderBottomNone\\\">MG</h1>\\r\\n\\r\\n    <div class=\\\"row mt-4 mb-0\\\">\\r\\n      <form [formGroup]=\\\"searchUsers\\\" (ngSubmit)=\\\"findUsers(searchUsers.get('searchText').value,searchUsers.get('startDate').value,searchUsers.get('endDate').value)\\\"\\r\\n            class=\\\"w-100\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"lightBlueContainer pb-0 pl-4 pr-4 pt-4 mb-4\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-md-7 pr-5\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Search by User Name, Email ID, Department, Applications & Roles, Activation date \\\" formControlName=\\\"searchText\\\"\\r\\n                           (keydown.backspace)=\\\"checkIsInputCleared()\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                  <div class=\\\"col-md-2 pl-0\\\">\\r\\n                    <mat-form-field class=\\\"width80percent\\\">\\r\\n                      <span matPrefix>From &nbsp;</span>\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"startdate\\\">\\r\\n                        <mat-icon matDatepickerToggleIcon>\\r\\n                          <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </mat-icon>\\r\\n                      </mat-datepicker-toggle>\\r\\n                      <input matInput [matDatepicker]=\\\"startdate\\\" placeholder=\\\"DD-MMM-YY\\\" formControlName=\\\"startDate\\\">\\r\\n                      <mat-datepicker #startdate></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n                    <span class=\\\"btn transparent-circle smallDeleteIcon ml-1\\\" title=\\\"Delete\\\">\\r\\n                      <i class=\\\"fa fa-times-thin\\\" aria-hidden=\\\"true\\\" (click)=\\\"checkIsFromDateCleared();\\\"></i>\\r\\n                    </span>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-md-2 pr-4\\\">\\r\\n                    <mat-form-field class=\\\"width80percent\\\">\\r\\n                      <span matPrefix>To &nbsp;</span>\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"enddate\\\">\\r\\n                        <mat-icon matDatepickerToggleIcon>\\r\\n                          <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </mat-icon>\\r\\n                      </mat-datepicker-toggle>\\r\\n                      <input matInput [matDatepicker]=\\\"enddate\\\" placeholder=\\\"DD-MMM-YY\\\" formControlName=\\\"endDate\\\" [min]=\\\"searchUsers.get('startDate').value\\\">\\r\\n                      <mat-datepicker #enddate></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n                    <span class=\\\"btn transparent-circle smallDeleteIcon ml-1\\\" title=\\\"Delete\\\">\\r\\n                      <i class=\\\"fa fa-times-thin\\\" aria-hidden=\\\"true\\\" (click)=\\\"checkIsToDateCleared();\\\"></i>\\r\\n                    </span>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-md-1 top10px controlButtons\\\">\\r\\n                    <button title=\\\"Search\\\" type=\\\"submit\\\" class=\\\"genericButton genericSmallButton activeButton mat-primary\\\" mat-raised-button>Search</button>\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 pt-4 mt-2 pb-3 mb-1 controlButtons\\\">\\r\\n        <button title=\\\"Create New MG User\\\" type=\\\"submit\\\" class=\\\"btn defaultButton genericButton genericSmallButton\\\" mat-raised-button\\r\\n                (click)=\\\"createMgUser()\\\">\\r\\n          <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i><span>Create New MG User</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <mat-table #table [dataSource]='!isSearch ? dataSource: filteredData' matSort (matSortChange)=\\\"sortData($event)\\\" matSortActive=\\\"activationDate\\\" matSortDirection=\\\"desc\\\" class=\\\"flexNone genericTable mb-4 pb-1 mat-table\\\">\\r\\n\\r\\n      <ng-container matColumnDef=\\\"firstName\\\">\\r\\n        <mat-header-cell class=\\\"firstnameTH alignItemCenter pr-0\\\" *matHeaderCellDef mat-sort-header> First/Last Name </mat-header-cell>\\r\\n        <mat-cell class=\\\"firstnameTH\\\" *matCellDef=\\\"let element\\\"><div class=\\\"d-flex\\\"><div><mat-icon class=\\\"userIcon alignItemCenter\\\">account_circle</mat-icon></div><span class=\\\"pl-1 alignItemCenter\\\">{{element.firstName}} {{element.lastName}}</span></div></mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"employeeId\\\">\\r\\n        <mat-header-cell class=\\\"empIDTH\\\" *matHeaderCellDef mat-sort-header> Employee ID </mat-header-cell>\\r\\n        <mat-cell class=\\\"empIDTH\\\" *matCellDef=\\\"let element\\\"> {{element.employeeId}} </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"email\\\">\\r\\n        <mat-header-cell class=\\\"emailTH\\\" *matHeaderCellDef mat-sort-header> Email ID </mat-header-cell>\\r\\n        <mat-cell class=\\\"emailTH\\\" *matCellDef=\\\"let element\\\"> {{element.email}} </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"departments\\\">\\r\\n        <mat-header-cell class=\\\"departmentTH pl-0 pr-0\\\" *matHeaderCellDef mat-sort-header> Department(s) </mat-header-cell>\\r\\n        <mat-cell class=\\\"departmentTH pl-0 pr-0\\\" *matCellDef=\\\"let element\\\">\\r\\n          <ng-container *ngFor=\\\"let c of element.departments\\\">\\r\\n            <ng-container *ngIf=\\\"element.departments[0].name == c.name && element.departments.length == 1 \\\">\\r\\n              {{c.name}}\\r\\n            </ng-container>\\r\\n            <ng-container *ngIf=\\\"element.departments[0].name == c.name && element.departments.length > 1 \\\">\\r\\n              {{c.name}}<span>,</span>\\r\\n            </ng-container>\\r\\n            <ng-container *ngIf=\\\"element.departments[0].name != c.name\\\">\\r\\n              {{c.name}}\\r\\n            </ng-container>\\r\\n          </ng-container>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"userApplicationRole\\\">\\r\\n        <mat-header-cell class=\\\"applicationRoleTH\\\" *matHeaderCellDef mat-sort-header>\\r\\n          <span class=\\\"text-center\\\"><span class=\\\"d-block float-left\\\">Application(s)</span><span class=\\\"d-block float-left\\\">&amp; Role(s)</span></span>\\r\\n        </mat-header-cell>\\r\\n        <mat-cell class=\\\"applicationRoleTH\\\" *matCellDef=\\\"let element\\\">\\r\\n          <ng-container *ngFor=\\\"let c of element.userApplicationRole\\\">\\r\\n            <span class=\\\"d-block\\\">{{c.applicationName}} - {{c.roleName}}</span>\\r\\n          </ng-container>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"activationDate\\\">\\r\\n        <mat-header-cell class=\\\"activationTH\\\" *matHeaderCellDef mat-sort-header>\\r\\n          <div>Activation/<div>Inactivation Date</div></div>\\r\\n        </mat-header-cell>\\r\\n        <mat-cell class=\\\"activationTH\\\" *matCellDef=\\\"let element\\\">\\r\\n          <span class=\\\"d-block\\\">{{element.activationDate | date : \\\"dd-MMM-yy\\\"}}<span *ngIf=\\\"!element.isActive && element.deActivationDate != null\\\">/</span></span>\\r\\n          <ng-container *ngIf=\\\"!element.isActive && element.deActivationDate != null \\\">\\r\\n            {{element.deActivationDate | date : \\\"dd-MMM-yy\\\"}}\\r\\n          </ng-container>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"isActive\\\">\\r\\n        <mat-header-cell class=\\\"userStatusTH noOutlineOnFocus\\\" *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\\r\\n        <mat-cell class=\\\"userStatusTH\\\" *matCellDef=\\\"let element\\\">\\r\\n          <ng-container *ngIf=\\\"element.isActive\\\">\\r\\n            <i class=\\\"fa fa-circle active_status\\\" aria-hidden=\\\"true\\\"></i>Active\\r\\n          </ng-container>\\r\\n          <ng-container *ngIf=\\\"!element.isActive\\\">\\r\\n            <ng-container *ngIf=\\\"element.inActivationType === 'P' \\\">\\r\\n              <i class=\\\"fa fa-circle deactivate_status\\\" aria-hidden=\\\"true\\\"></i>Inactive\\r\\n            </ng-container>\\r\\n            <ng-container *ngIf=\\\"element.inActivationType === 'T'\\\">\\r\\n            <i class=\\\"fa fa-circle inactive_status\\\" aria-hidden=\\\"true\\\"></i>Inactive\\r\\n              <div class=\\\"tooltipCustom\\\">\\r\\n                <i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                <div class=\\\"tooltiptext\\\">\\r\\n                  <div class=\\\"pl-4 ml-2 pt-3 mt-1\\\">\\r\\n                    <h6 class=\\\"mavenProMedium blackText\\\">Temporary Inactivate:</h6>\\r\\n                    <span class=\\\"d-block pt-1 pb-1\\\">Inactive From: {{element.temporaryInActivationDate | date : \\\"dd-MMM-yy\\\"}}</span>\\r\\n                    <span>Inactive To <span class=\\\"pl-2 ml-1\\\">: {{element.temporaryActivationDate | date : \\\"dd-MMM-yy\\\"}}</span></span>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </ng-container>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"actions\\\" class=\\\"text-center\\\">\\r\\n        <mat-header-cell class=\\\"userActionTH noOutlineOnFocus\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\r\\n        <mat-cell class=\\\"placeholderColorGray userActionTH\\\" *matCellDef=\\\"let element\\\">\\r\\n          <mat-select placeholder=\\\"Actions\\\" name=\\\"Actions\\\" [(ngModel)]=\\\"actions\\\">\\r\\n            <ng-container *ngIf=\\\"element.isActive || element.inActivationType == 'T'\\\">\\r\\n              <mat-option value=\\\"{{element.id}}:edit\\\" #edit (click)=\\\"goUserUpdate(edit.value)\\\">Edit</mat-option>\\r\\n            </ng-container>\\r\\n            <mat-option value=\\\"{{element.id}}:delete\\\" #delete (click)=\\\"goUserDelete(delete.value)\\\">Delete</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n\\r\\n    </mat-table>\\r\\n    <div style=\\\"color:orange\\\" *ngIf=\\\"noDataAvailable\\\">\\r\\n      No Users are created.\\r\\n    </div>\\r\\n    <div style=\\\"color:orange\\\" *ngIf=\\\"noRecordsFound\\\">\\r\\n      No MG user record found.\\r\\n    </div>\\r\\n    <div class=\\\"paginationWrapper\\\">\\r\\n      <span class=\\\"pageCount\\\" *ngIf=\\\"!noDataAvailable\\\">\\r\\n        Page: {{(pageEvent) ? pageEvent.pageIndex + 1 : 1}} of {{\\r\\n(pageEvent) ? Math.ceil(pageEvent.length/pageEvent.pageSize)\\r\\n      : Math.ceil(totalRecords/20)\\r\\n        }}\\r\\n      </span>\\r\\n\\r\\n      <mat-paginator *ngIf=\\\"!noDataAvailable\\\" class=\\\"genericPagination\\\" (page)=\\\"pageEvent = $event\\\" #paginator [pageSize]=\\\"20\\\"\\r\\n                     [pageSizeOptions]=\\\"[5, 10, 20]\\\">\\r\\n      </mat-paginator>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-list/mg-user-list.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/mg-user/mg-user-list/mg-user-list.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { UserDataService } from '../../../common/backoffice-shared/services/user-data.service';\nimport { MgUsersListViewModel } from '../../../viewmodel/usersviewmodel/mguserlistviewmodel';\nimport { MatTableDataSource, MatPaginator, MatSort, PageEvent , MatSnackBar} from '@angular/material';\nimport { DateAdapter, NativeDateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { DatePipe } from '@angular/common';\nimport { UserDetailsViewModel } from '../../../../common/viewmodels/userdetailsviewmodel';\nimport { NgForOf } from '@angular/common/src/directives';\nimport { DialogsService } from '../../../common/backoffice-shared/dialogs/dialogs.service';\nimport {Sort} from '@angular/material';\n\nconst DATE_FORMATS = {\n  parse: {\n    dateInput: { month: 'short', year: 'numeric', day: 'numeric' }\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  }\n};\n\nexport class DatePickerDateAdapter extends NativeDateAdapter {\n  format(date: Date, displayFormat: Object): string {\n    date.setMinutes((date.getTimezoneOffset() * -1));\n    if (displayFormat === 'input') {\n      const day = date.getDate();\n      const month = date.toLocaleString('en-us', { month: 'long' });\n      const year = date.getFullYear();\n      return this._to2digit(day) + '-' + month.substring(0, 3) + '-' + year % 100;\n    } else {\n      return date.toDateString();\n    }\n  }\n\n  private _to2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n}\n\n@Component({\n  selector: 'app-mg-user-list',\n  templateUrl: './mg-user-list.component.html',\n  styleUrls: ['./mg-user-list.component.css'],\n  providers: [DatePipe, DialogsService,\n    { provide: DateAdapter, useClass: DatePickerDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS },\n  ]\n})\n\nexport class MgUserListComponent implements OnInit {\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  operation: string;\n  // isRead: boolean;\n  dataSource: MatTableDataSource<MgUsersListViewModel>;\n  displayedColumns = ['firstName', 'employeeId', 'email', 'departments',\n  'userApplicationRole', 'activationDate', 'isActive', 'actions'];\n  isDeleted: boolean;\n  userList: MgUsersListViewModel[];\n  result: any;\n  actions: string;\n  filteredData: MatTableDataSource<MgUsersListViewModel>;\n  searchUsers: FormGroup;\n  isSearch: boolean;\n  isAppRoleData: boolean;\n  isDepartmentData: boolean;\n  noDataAvailable: boolean;\n  noRecordsFound: boolean;\n  pageEvent: PageEvent;\n  Math: any;\n  totalRecords: number;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  @Input()\n  _dateValue;\n\n  constructor(private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private userDataService: UserDataService,\n    private dialogsService: DialogsService,\n    public datepipe: DatePipe,\n    public snackBar: MatSnackBar) {\n      this.Math = Math;\n     }\n\n  ngOnInit() {\n    this.getMgUserList();\n    this.isSearch = false;\n    this.searchUsers = new FormGroup({\n      startDate: new FormControl(),\n      endDate: new FormControl(),\n      searchText: new FormControl()\n    });\n  }\n\n  findUsers(filterValue: string, filterFrom: string, filterTo: string) {\n    if (filterFrom !== null || filterTo !== null || (filterValue !== null && filterValue.length >= 3)) {\n      this.isSearch = true;\n    }\n    if (filterFrom !== null) {\n      filterFrom = this.datepipe.transform(filterFrom, 'yyyy-MM-dd');\n    }\n    if (filterTo !== null) {\n      filterTo = this.datepipe.transform(filterTo, 'yyyy-MM-dd');\n    }\n    if (filterValue !== null) {\n      filterValue = filterValue.trim();\n      filterValue = filterValue.toLowerCase();\n    }\n\n    this.filteredData = new MatTableDataSource<MgUsersListViewModel>(this.userList.filter(user => {\n      const searchActivationDate = this.datepipe.transform(user.activationDate, 'dd-MMM-yy hh:mm a');\n      const activationDate = this.datepipe.transform(user.activationDate, 'yyyy-MM-dd');\n      if (filterValue !== null && (filterFrom === null && filterTo === null)) {\n        return this.filterUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue);\n      } else if (filterFrom !== null && (filterTo === null && filterValue === null)) {\n        return activationDate >= filterFrom;\n      } else if (filterTo !== null && (filterFrom === null && filterValue === null)) {\n        return activationDate <= filterTo;\n      } else if (filterValue === null && (filterFrom !== null && filterTo !== null)) {\n        return filterFrom <= activationDate && activationDate <= filterTo;\n      } else if (filterFrom === null && (filterValue !== null && filterTo !== null)) {\n        return (this.filterUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) && activationDate <= filterTo;\n      } else if (filterTo === null && (filterFrom !== null && filterValue !== null)) {\n        return (this.filterUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) &&\n        activationDate >= filterFrom;\n      } else if (filterFrom !== null && filterTo !== null && filterValue !== null) {\n        return (this.filterUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) &&\n          (filterFrom <= activationDate && activationDate <= filterTo);\n      }\n    }));\n    if (this.filteredData.data.length === 0) {\n      this.noRecordsFound = true ;\n    }\n    this.filteredData.paginator = this.paginator;\n    this.filteredData.sort = this.sort;\n  }\n\n  filterUser(user: MgUsersListViewModel, filterValue: string) {\n    this.isAppRoleData = false;\n    this.isDepartmentData = false;\n    for (let i = 0; i < user.userApplicationRole.length; i++) {\n      if ((user.userApplicationRole[i].applicationName.toLowerCase().includes(filterValue))\n       || (user.userApplicationRole[i].roleName.toLowerCase().includes(filterValue))) {\n        this.isAppRoleData = true;\n        break;\n      }\n    }\n    for (let j = 0; j < user.departments.length; j++) {\n      if (user.departments[j].name.toLowerCase().includes(filterValue)) {\n        this.isDepartmentData = true;\n      }\n    }\n    return user.email.toLowerCase().includes(filterValue) ||\n    user.employeeId.toString().includes(filterValue) ||\n    user.lastName.toLowerCase().includes(filterValue) ||\n    user.firstName.toLowerCase().includes(filterValue) ||\n    this.isAppRoleData || this.isDepartmentData ;\n  }\n\n  checkIsInputCleared() {\n    this.paginator.page.emit();\n    if (this.searchUsers.get('searchText').value.length === 1 &&\n    this.searchUsers.get('startDate').value === null &&\n    this.searchUsers.get('endDate').value === null) {\n      this.filteredData = new MatTableDataSource<MgUsersListViewModel>(this.userList);\n      this.filteredData.paginator = this.paginator;\n      this.filteredData.sort = this.sort;\n      this.isSearch = false;\n      this.noRecordsFound = false;\n    }\n  }\n\n  checkIsFromDateCleared() {\n    this.paginator.page.emit();\n    this.searchUsers.get('startDate').setValue(null);\n    if ((this.searchUsers.get('searchText').value === null || this.searchUsers.get('searchText').value === '') &&\n      this.searchUsers.get('endDate').value === null) {\n      this.getMgUserList();\n    }\n  }\n\n  checkIsToDateCleared() {\n    this.paginator.page.emit();\n    this.searchUsers.get('endDate').setValue(null);\n    if ((this.searchUsers.get('searchText').value === null || this.searchUsers.get('searchText').value === '') &&\n      this.searchUsers.get('startDate').value === null) {\n      this.getMgUserList();\n    }\n  }\n\n  sortData(sort: Sort) {\n    const data = this.userList.slice();\n    if (!sort.active || sort.direction === '') {\n      this.dataSource.data =  data.sort((a, b) => {\n        const isAsc = sort.direction === 'desc';\n           return compare(a.activationDate, b.activationDate, isAsc);\n      });\n      return;\n    }else {\n      if (this.isSearch) {\n        this.filteredData.data = this.filteredData.data.sort((a, b) => {\n          const isAsc = sort.direction === 'asc';\n          switch (sort.active) {\n            case 'firstName': return compare(a.firstName.toLowerCase(), b.firstName.toLowerCase(), isAsc);\n            // case 'userName': return compare(a.userName.toLowerCase(), b.userName.toLowerCase(), isAsc);\n            case 'email': return compare(a.email.toLowerCase(), b.email.toLowerCase(), isAsc);\n            case 'employeeId': return compare(+a.employeeId, +b.employeeId, isAsc);\n            case 'isActive': return compare(a.isActive, b.isActive, isAsc);\n            case 'departments': return compare((a.departments.length === 0) ? '' :\n            a.departments[0].name, (b.departments.length === 0) ? '' :\n            b.departments[0].name, isAsc);\n            case 'userApplicationRole':\n            return compare((a.userApplicationRole.length === 0) ? '' :\n            a.userApplicationRole[0].applicationName, (b.userApplicationRole.length === 0) ? '' :\n            b.userApplicationRole[0].applicationName, isAsc);\n            case 'activationDate': return compare(a.activationDate, b.activationDate, isAsc);\n            default: return 0;\n          }\n        });\n        this.filteredData.paginator = this.paginator;\n      }\n      this.dataSource.data = data.sort((a, b) => {\n        const isAsc = sort.direction === 'asc';\n        switch (sort.active) {\n          case 'firstName': return compare(a.firstName.toLowerCase(), b.firstName.toLowerCase(), isAsc);\n          // case 'userName': return compare(a.userName.toLowerCase(), b.userName.toLowerCase(), isAsc);\n          case 'email': return compare(a.email.toLowerCase(), b.email.toLowerCase(), isAsc);\n          case 'employeeId': return compare(+a.employeeId, +b.employeeId, isAsc);\n          case 'isActive': return compare(a.isActive, b.isActive, isAsc);\n          case 'departments': return compare((a.departments.length === 0) ? '' :\n          a.departments[0].name, (b.departments.length === 0) ? '' :\n          b.departments[0].name, isAsc);\n          case 'userApplicationRole':\n          return compare((a.userApplicationRole.length === 0) ? '' :\n          a.userApplicationRole[0].applicationName, (b.userApplicationRole.length === 0) ? '' :\n          b.userApplicationRole[0].applicationName, isAsc);\n          case 'activationDate': return compare(a.activationDate, b.activationDate, isAsc);\n          default: return 0;\n        }\n      });\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n  getMgUserList() {\n    this.isSearch = false;\n    this.userDataService.getMgUsers().subscribe((mgUsersList) => {\n      this.userList = mgUsersList;\n      this.dataSource = new MatTableDataSource<MgUsersListViewModel>(this.userList);\n      this.totalRecords = this.userList.length;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      if (mgUsersList.length === 0) {\n        this.noDataAvailable = true;\n      }else {\n        this.noDataAvailable = false;\n      }\n    });\n  }\n\n   createMgUser() {\n    this.router.navigate(['../mguser', 0, this.create], { relativeTo: this.activatedRoute });\n  }\n\n  deleteUser(userId) {\n    this.userDataService.deleteMGUser(userId).subscribe(data => {\n        window.scrollTo(0, 0);\n        this.snackBar.open('The user is deleted successfully', '', { duration: CONSTANTS.toasterTimeOut.duration, verticalPosition: 'top',\n        panelClass: 'showSnackBar'});\n      this.getMgUserList();\n    });\n  }\n\n  goUserUpdate(value) {\n    const val = value.split(':');\n    const userId = val[0];\n    this.operation = val[1];\n    this.router.navigate(['../mguser', userId, this.operation.trim().toLowerCase()], { relativeTo: this.activatedRoute });\n  }\n\n  goUserDelete(value) {\n    const val = value.split(':');\n    const userId = val[0];\n    this.dialogsService\n      .confirm('Confirm', 'Are you sure you want to delete this user?').subscribe(res => {\n        this.result = res;\n        if (this.result) {\n           this.deleteUser(userId);\n        } else {\n          this.actions = null;\n        }\n      });\n  }\n}\n\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-list/mg-user-list.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/roles-permission/roles-permissions-info/roles-permissions-info.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/roles-permission/roles-permissions-info/roles-permissions-info.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid pt-4\\\">\\n  <div class=\\\"customBreadcrumb mb-3 pb-1\\\">\\n    <span>Roles & Permissions </span>\\n    <span>&gt; Set New Permissions</span>\\n  </div>\\n  <h1 class=\\\"mainHeading mb-4\\\">Set New Permissions</h1>\\n  <form [formGroup]=\\\"setNewPermissionForm\\\">\\n    <div class=\\\"row customeRow\\\">\\n      <div class=\\\"form-group col-md-4 col-lg-3 pt-2\\\">\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Application Name\\\" name=\\\"Application Name\\\" formControlName=\\\"userApplication\\\" required [(ngModel)]=\\\"selectedOption\\\"\\n            (change)=\\\"getApplicationRoles(setNewPermissionForm.get('userApplication').value); getFeaturesByAppId(setNewPermissionForm.get('userApplication').value);\\\">\\n            <mat-option *ngFor=\\\"let app of applicationList\\\" [value]=\\\"app.id\\\">{{app.name}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n    <div class=\\\"row customeRow\\\">\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Role Type\\\" name=\\\"Role Type\\\" formControlName=\\\"userRole\\\" required>\\n            <mat-option *ngFor=\\\"let roles of applicationRolesList\\\" [value]=\\\"roles.id\\\">{{roles.name}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n    <!-- <div class=\\\"row customeRow\\\">\\n      <div class=\\\"col-md-8 col-lg-6 form-group\\\">\\n        <mat-form-field>\\n          <textarea rows=\\\"5\\\" cols=\\\"200\\\" matInput placeholder=\\\"Description\\\" maxlength=\\\"500\\\"></textarea>\\n        </mat-form-field>\\n      </div>\\n    </div> -->\\n    <h6 class=\\\"h6 pt-3 pb-2\\\">Set Permissions</h6>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-md-12 table-responsive\\\">\\n\\n        <table class=\\\"table genericTable\\\">\\n          <thead>\\n            <tr class=\\\"title-Bar\\\">\\n              <th class=\\\"iconTH\\\"></th>\\n              <th class=\\\"moduleTH\\\">Modules</th>\\n              <th class=\\\"subModuleTH\\\">Sub-Modules</th>\\n              <th class=\\\"readAccessTH\\\">Read-Only</th>\\n              <th class=\\\"fullAccessTH\\\">Full Access</th>\\n            </tr>\\n          </thead>\\n          <div formArrayName=\\\"featureDetails\\\" *ngFor=\\\"let feature of featureDetails.controls; let i =index\\\">\\n          <div [formGroupName]=\\\"i\\\">\\n              <tbody>\\n                <ng-container *ngFor=\\\"let element of featureList\\\">\\n                  <tr>\\n                    <td>\\n                      <div class=\\\"ml-1 transparent-circle\\\">\\n                        <i class=\\\"material-icons plusIcon\\\" aria-hidden=\\\"true\\\">add</i>\\n                      </div>\\n                    </td><td>{{element.name}}</td>\\n                    <td></td>\\n                    <td><mat-checkbox></mat-checkbox></td>\\n                    <td><mat-checkbox></mat-checkbox></td>\\n                  </tr>\\n                  <ng-container *ngFor=\\\"let subElement of element.subModule\\\">\\n                    <tr>\\n                      <td></td>\\n                      <td></td>\\n                      <td>{{subElement.name}}\\n                      </td>\\n                      <td>\\n                        <mat-checkbox formControlName=\\\"readOnly\\\"></mat-checkbox>\\n                      </td>\\n                      <td>\\n                        <mat-checkbox formControlName=\\\"fullAccess\\\"></mat-checkbox>\\n                      </td>\\n                    </tr>\\n                  </ng-container>\\n                </ng-container>\\n              </tbody>\\n          </div>\\n          </div>\\n        </table>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"controlButtons borderTopDark paddingTop50px pb-4 mb-1 paddingRight15px\\\">\\n        <button title=\\\"Save\\\" class=\\\"genericButton activeButton mat-raised-button mat-primary\\\" (click)=\\\"savePermissions()\\\">Save</button>\\n        <button title=\\\"Cancel\\\" class=\\\"genericButton defaultButton\\\">Cancel</button>\\n        <button title=\\\"Continue\\\" class=\\\"genericButton activeButton mat-raised-button mat-primary float-right\\\">Save &amp; Set New Permissions</button>\\n    </div>\\n\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/roles-permission/roles-permissions-info/roles-permissions-info.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/roles-permission/roles-permissions-info/roles-permissions-info.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit } from '@angular/core';\nimport { MgApplicationViewModel } from '../../../viewmodel/usersviewmodel/mgapplicationlistviewmodel';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport { BackofficeLookupService } from '../../../common/backoffice-shared/services/backoffice-lookup';\nimport { MgRoleViewModel } from '../../../viewmodel/usersviewmodel/mgrolelistviewmodel';\nimport { Observable } from 'rxjs/Observable';\nimport { BACKOFFICECONSTANTS } from '../../../common/constants';\nimport { FeatureViewModel } from '../../../viewmodel/usersviewmodel/rolespermissionviewmodel/featureviewmodel';\nimport { RolesPermissionDataService } from '../../../common/backoffice-shared/services/roles-permission-data.service';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { RolePrivilegeInfoViewModel } from '../../../viewmodel/usersviewmodel/rolespermissionviewmodel/roleprivilegeinfoviewmodel';\n\n@Component({\n  selector: 'app-roles-permissions-info',\n  templateUrl: './roles-permissions-info.component.html',\n  styleUrls: ['./roles-permissions-info.component.css']\n})\nexport class SetNewPermissionInfoComponent implements OnInit {\n  setNewPermissionForm: FormGroup;\n  readOnly: boolean[];\n  fullAccess: boolean[];\n\n  applicationList: MgApplicationViewModel[];\n  applicationRolesList: MgRoleViewModel[];\n  featureList: FeatureViewModel[];\n  selectedOption: string;\n  rolePrivilegeList: RolePrivilegeInfoViewModel[];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private backofficeLookupService: BackofficeLookupService,\n    private rolesPermissionDataService: RolesPermissionDataService,\n  ) { }\n\n  ngOnInit() {\n\n      this.setNewPermissionForm = new FormGroup({\n          modules: new FormControl(),\n          subModules: new FormControl(),\n          readOnly: new FormControl(),\n          fullAccess: new FormControl(),\n          userApplication: new FormControl(),\n          userRole: new FormControl(),\n          featureDetails:  new FormArray([this.buildFeatureDetailForm()]),\n      });\n\n    this.selectedOption = this.activatedRoute.snapshot.data['applications'].find(x => x.name === BACKOFFICECONSTANTS.extranet).id;\n    this.getApplications();\n    this.getApplicationRoles(this.selectedOption);\n    this.getFeaturesByAppId(this.selectedOption);\n  }\n\n\n  /* ---------- Feature Details ---------------- */\n  buildFeatureDetailForm(): FormGroup {\n    let featureDetailsFormGroup: FormGroup;\n    featureDetailsFormGroup = new FormGroup({\n      featureId: new FormControl(),\n      module: new FormControl(),\n      subModule: new FormControl(''),\n      readOnly: new FormControl(''),\n      fullAccess: new FormControl('')\n    });\n    return featureDetailsFormGroup;\n  }\n\n  get featureDetails():  FormArray {\n    return <FormArray>this.setNewPermissionForm.get('featureDetails');\n   }\n\n  getApplications() {\n    this.applicationList = this.activatedRoute.snapshot.data['applications'];\n  }\n\n  getApplicationRoles(applicationId: string) {\n    this.backofficeLookupService.getRolesByApplicationIdAndUserType(applicationId, null).subscribe\n    (data => {\n      this.applicationRolesList = data;\n    });\n  }\n\n  getFeaturesByAppId(applicationId: string) {\n    this.rolesPermissionDataService.getFeaturesByAppId(applicationId).subscribe\n    (data => {\n      this.featureList = data;\n    });\n  }\n\n  savePermissions() {\n    const rolePermission = this.setNewPermissionForm.value;\n    console.log(rolePermission);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/roles-permission/roles-permissions-info/roles-permissions-info.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/roles-permission/roles-permissions-list/roles-permissions-list.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/roles-permission/roles-permissions-list/roles-permissions-list.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"mt-4 pt-2\\\">\\r\\n    <h1 class=\\\"mainHeading mb-1 pb-0 borderBottomNone\\\">Roles & Permissions</h1>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 pt-3 pb-3 controlButtons\\\">\\r\\n        <button title=\\\"Set New Permissions\\\" type=\\\"submit\\\" class=\\\"btn defaultButton genericButton genericSmallButton\\\"\\r\\n                mat-raised-button (click)=\\\"setNewPermissions()\\\">\\r\\n          <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i>\\r\\n          <span>Set New Permissions</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/roles-permission/roles-permissions-list/roles-permissions-list.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/roles-permission/roles-permissions-list/roles-permissions-list.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit } from '@angular/core';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-roles-permissions-list',\n  templateUrl: './roles-permissions-list.component.html',\n  styleUrls: ['./roles-permissions-list.component.css']\n})\nexport class RolesPermissionsListComponent implements OnInit {\n\n  create = CONSTANTS.operation.create;\n\n  constructor(private router: Router,\n              private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n  }\n  setNewPermissions() {\n    this.router.navigate(['../rolespermissions', 0, this.create], { relativeTo: this.activatedRoute });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/roles-permission/roles-permissions-list/roles-permissions-list.component.ts","import { RolesPermissionsListComponent } from './roles-permission/roles-permissions-list/roles-permissions-list.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MgUserListComponent } from './mg-user/mg-user-list/mg-user-list.component';\r\nimport { MgUserInfoComponent } from './mg-user/mg-user-info/mg-user-info.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { DepartmentResolverService } from '../common/backoffice-shared/services/department-resolver.service';\r\nimport { ApplicationResolverService } from '../common/backoffice-shared/services/application-resolver.service';\r\nimport { AgentUserListComponent } from './agent-user/agent-user-list/agent-user-list.component';\r\nimport { AgentUserInfoComponent } from './agent-user/agent-user-info/agent-user-info.component';\r\nimport { HotelUserListComponent } from './hotel-user/hotel-user-list/hotel-user-list.component';\r\nimport { HotelUserInfoComponent } from './hotel-user/hotel-user-info/hotel-user-info.component';\r\nimport { RoleResolverService } from '../common/backoffice-shared/services/role-resolver.service';\r\nimport { DesignationResolverService } from '../common/backoffice-shared/services/designation-resolver.service';\r\nimport { IndividualHotelUserInfoComponent } from './hotel-user/individual-hotel-user-info/individual-hotel-user-info.component';\r\nimport { HotelTypeComponent } from './hotel-user/hotel-type/hotel-type.component';\r\nimport { SupplierUserInfoComponent } from './hotel-user/supplier-user-info/supplier-user-info.component';\r\nimport { HotelChainResolverService } from '../common/backoffice-shared/services/hotel-chain-resolver.service';\r\nimport { HotelResolverService } from '../common/backoffice-shared/services/hotel-resolver.service';\r\nimport { AgencyResolverService } from '../common/backoffice-shared/services/agency-resolver.service';\r\nimport { CONSTANTS } from '../../common/constants';\r\nimport { SetNewPermissionInfoComponent } from './roles-permission/roles-permissions-info/roles-permissions-info.component';\r\nimport { HotelPartnerResolverService } from '../common/backoffice-shared/services/hotel-partner-resolver.service';\r\n\r\n\r\nexport const userRoutes: Routes =\r\n[\r\n   // { path: '', redirectTo: 'mgusers', pathMatch: 'full' },\r\n    { path: 'mgusers', component: MgUserListComponent },\r\n    { path: 'mguser/:id/:operation',\r\n    component: MgUserInfoComponent,\r\n    resolve: {\r\n      departments: DepartmentResolverService,\r\n      applications: ApplicationResolverService\r\n    }\r\n    },\r\n    { path: 'agentusers', component: AgentUserListComponent },\r\n    { path: 'agentusers/:id/:operation',\r\n      component: AgentUserInfoComponent,\r\n      resolve: {\r\n        agencies: AgencyResolverService,\r\n      }\r\n    },\r\n\r\n    { path: 'hoteluserslist', component: HotelUserListComponent },\r\n    {\r\n        path: 'hotelusers', component: HotelTypeComponent,\r\n\r\n        children: [\r\n            { path: '', redirectTo: 'hoteldetails', pathMatch: 'full' },\r\n            { path: 'hoteluserinfo/:id/:operation', component: HotelUserInfoComponent,\r\n             resolve: {\r\n              hotelChains: HotelChainResolverService\r\n             }\r\n           },\r\n            { path: 'individual/:id/:operation',\r\n              component : IndividualHotelUserInfoComponent,\r\n                  resolve: {\r\n                      roles: RoleResolverService,\r\n                      designations: DesignationResolverService,\r\n                      hotels: HotelResolverService\r\n                          },\r\n                      data: {\r\n                        appName: CONSTANTS.application.extranet,\r\n                        type: CONSTANTS.userType.hoteluser\r\n                            }\r\n            },\r\n\r\n            { path: 'supplieruser/:id/:operation',\r\n              component : SupplierUserInfoComponent,\r\n                  resolve: {\r\n                      roles: RoleResolverService,\r\n                      designations: DesignationResolverService,\r\n                      suppliers: HotelPartnerResolverService\r\n                          },\r\n                          data: {\r\n                            appName: CONSTANTS.application.extranet,\r\n                            type: CONSTANTS.userType.hoteluser\r\n                                }\r\n            }\r\n        ]\r\n\r\n    },\r\n    { path : 'rolespermissions', component: RolesPermissionsListComponent },\r\n    { path:  'rolespermissions/:id/:operation',\r\n      component: SetNewPermissionInfoComponent,\r\n    resolve: {\r\n      applications: ApplicationResolverService\r\n    }\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(userRoutes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class UserMgmtRoutingModule {}\r\n\r\n  export const routedUserComponents = [\r\n    MgUserListComponent,\r\n    MgUserInfoComponent,\r\n    AgentUserListComponent,\r\n    AgentUserInfoComponent,\r\n    HotelUserListComponent,\r\n      HotelUserInfoComponent,\r\n      SetNewPermissionInfoComponent\r\n  ];\r\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/user-mgmt-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserMgmtRoutingModule, routedUserComponents } from './user-mgmt-routing.module';\nimport { ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport { MaterialModule } from '../../common/material/material.module';\nimport { BackofficeLookupService } from '../common/backoffice-shared/services/backoffice-lookup';\nimport { DepartmentResolverService } from '../common/backoffice-shared/services/department-resolver.service';\nimport { DatePipe } from '@angular/common';\nimport { ApplicationResolverService } from '../common/backoffice-shared/services/application-resolver.service';\nimport { AgentUserInfoComponent } from './agent-user/agent-user-info/agent-user-info.component';\nimport { AgentUserListComponent } from './agent-user/agent-user-list/agent-user-list.component';\nimport { HotelUserListComponent } from './hotel-user/hotel-user-list/hotel-user-list.component';\nimport { HotelUserInfoComponent } from './hotel-user/hotel-user-info/hotel-user-info.component';\nimport { IndividualHotelUserInfoComponent } from './hotel-user/individual-hotel-user-info/individual-hotel-user-info.component';\nimport { DesignationResolverService } from '../common/backoffice-shared/services/designation-resolver.service';\nimport { RoleResolverService } from '../common/backoffice-shared/services/role-resolver.service';\nimport { HotelTypeComponent } from './hotel-user/hotel-type/hotel-type.component';\nimport { SupplierUserInfoComponent } from './hotel-user/supplier-user-info/supplier-user-info.component';\nimport { HotelResolverService } from '../common/backoffice-shared/services/hotel-resolver.service';\nimport { AgencyResolverService } from '../common/backoffice-shared/services/agency-resolver.service';\nimport { HotelChainResolverService } from '../common/backoffice-shared/services/hotel-chain-resolver.service';\nimport { Orderbypipe } from '../common/pipes/orderbypipe';\nimport { SetNewPermissionInfoComponent } from './roles-permission/roles-permissions-info/roles-permissions-info.component';\nimport { RolesPermissionsListComponent } from './roles-permission/roles-permissions-list/roles-permissions-list.component';\nimport { HotelPartnerResolverService } from '../common/backoffice-shared/services/hotel-partner-resolver.service';\n\n// import { RoleResolverService } from '../common/backoffice-shared/services/role-resolver.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UserMgmtRoutingModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FormsModule\n  ],\n  declarations: [routedUserComponents, AgentUserInfoComponent,\n                 AgentUserListComponent, HotelUserListComponent,\n                 HotelUserInfoComponent,\n                  IndividualHotelUserInfoComponent,\n                  HotelTypeComponent,\n                  SupplierUserInfoComponent,\n                  Orderbypipe,\n                  SetNewPermissionInfoComponent,\n                  RolesPermissionsListComponent],\n  providers: [BackofficeLookupService, DepartmentResolverService,\n              ApplicationResolverService, DesignationResolverService,\n              RoleResolverService, DatePipe, HotelResolverService,\n              AgencyResolverService,\n               HotelChainResolverService,\n               HotelPartnerResolverService\n             ]\n})\nexport class UserMgmtModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/user-mgmt.module.ts"],"sourceRoot":"webpack:///"}