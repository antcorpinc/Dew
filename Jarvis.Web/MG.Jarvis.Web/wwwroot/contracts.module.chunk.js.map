{"version":3,"sources":["D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/common/extranet-shared/services/contracts/contract-name-data.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/common/extranet-shared/services/contracts/contract-terms-data.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/common/extranet-shared/services/contracts/contract-url-notification.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/common/pipes/contractsOrderPipe.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/allocations/allocations.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/allocations/allocations.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/allocations/allocations.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-list/contract-list.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-list/contract-list.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-list/contract-list.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-nav-menu/contract-nav-menu.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-nav-menu/contract-nav-menu.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-nav-menu/contract-nav-menu.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-terms/contract-terms.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-terms/contract-terms.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-terms/contract-terms.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract/contract.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract/contract.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract/contract.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contracts-routing.module.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contracts.module.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/hotel-info/facilities-services/facilities-services.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/hotel-info/facilities-services/facilities-services.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/hotel-info/facilities-services/facilities-services.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/hotel-info/hotel-details/hotel-details.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/hotel-info/hotel-details/hotel-details.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/hotel-info/hotel-details/hotel-details.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/amenities/amenities.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/amenities/amenities.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/amenities/amenities.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/meal-plan/meal-plan.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/meal-plan/meal-plan.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/meal-plan/meal-plan.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/cancellation-policies/cancellation-policies.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/cancellation-policies/cancellation-policies.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/cancellation-policies/cancellation-policies.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/cancellation-policy-list/cancellation-policy-list.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/cancellation-policy-list/cancellation-policy-list.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/cancellation-policy-list/cancellation-policy-list.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/child-and-extra-bed-policy-list/child-and-extra-bed-policy-list.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/child-and-extra-bed-policy-list/child-and-extra-bed-policy-list.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/child-and-extra-bed-policy-list/child-and-extra-bed-policy-list.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/child-and-extra-bed-policy/child-and-extra-bed-policy.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/child-and-extra-bed-policy/child-and-extra-bed-policy.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/child-and-extra-bed-policy/child-and-extra-bed-policy.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/policy-list/policy-list.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/policy-list/policy-list.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/policy-list/policy-list.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/rate-category/rate-category-info/rate-category-info.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/rate-category/rate-category-info/rate-category-info.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/rate-category/rate-category-info/rate-category-info.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/rate-category/rate-category-list/rate-category-list.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/rate-category/rate-category-list/rate-category-list.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/rate-category/rate-category-list/rate-category-list.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/room-type/room-type-info/room-type-info.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/room-type/room-type-info/room-type-info.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/room-type/room-type-info/room-type-info.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/room-type/room-type-list/room-type-list.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/room-type/room-type-list/room-type-list.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/room-type/room-type-list/room-type-list.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/redirect/redirect.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/redirect/redirect.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/redirect/redirect.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/AsyncSubject.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/ReplaySubject.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/observable/race.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/buffer.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/bufferCount.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/bufferTime.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/bufferToggle.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/bufferWhen.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/combineAll.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/concat.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/concatMapTo.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/count.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/debounce.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/delayWhen.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/dematerialize.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/distinct.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/distinctUntilChanged.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/distinctUntilKeyChanged.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/elementAt.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/exhaust.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/exhaustMap.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/expand.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/find.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/findIndex.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/groupBy.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/ignoreElements.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/index.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/isEmpty.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/mapTo.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/materialize.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/max.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/mergeMapTo.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/mergeScan.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/min.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/onErrorResumeNext.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/pairwise.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/partition.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/pluck.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/publish.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/publishBehavior.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/publishLast.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/publishReplay.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/race.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/repeat.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/repeatWhen.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/retry.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/retryWhen.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/sample.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/sampleTime.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/sequenceEqual.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/shareReplay.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/single.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/skip.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/skipLast.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/skipUntil.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/skipWhile.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/switchAll.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/switchMapTo.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/takeWhile.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/throttle.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/throttleTime.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/timeInterval.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/timeout.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/timeoutWith.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/timestamp.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/toArray.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/window.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/windowCount.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/windowTime.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/windowToggle.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/windowWhen.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/withLatestFrom.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/zip.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/zipAll.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/scheduler/QueueAction.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/scheduler/QueueScheduler.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/scheduler/queue.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/util/FastMap.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/util/Map.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/util/MapPolyfill.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/util/Set.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/util/TimeoutError.js","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/util/not.js"],"names":[],"mappings":"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CA;AACA,CAAC;AACD;;;;;;;;;;;;;;;ACrDA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACkB;AACF;AACO;AACO;AACI;AACJ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;AC1GA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACkB;AACQ;AACA;AACE;AAC5B;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACvFA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC0B;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC9EA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;AChJA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACgB;AACK;AACC;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,8BAA8B;AAC9B,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sGAAsG,2CAA2C;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzMA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACuB;AACK;AACF;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,yBAAyB;AACpC;AACA,WAAW,0CAA0C;AACrD;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;AC1JA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACuB;AACJ;AACG;AACI;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,uBAAuB;AAClC;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC5HA;AAAA;AACgC;AAChC;AACA,8BAA8B,0HAAwD;AACtF;AACA;;;;;;;;;;ACLA;AAAA;AACiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,UAAU;AACrB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA,8BAA8B,yIAAmF;AACjH;AACA;;;;;;;;;;AC3DA;AAAA;AACoB;AACpB;AACA;AACA;AACA;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,8FAAkC,wBAAwB,EAAE;AAC5D;AACA;;;;;;;;;;AC9DA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,8DAA8D;AACzE;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAA0D;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;AC/GA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC0B;AACE;AAC5B;AACA;AACA;AACA;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,0CAA0C;AACrD;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAA4D;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC/HA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACA;AACK;AACE;AAC5B;AACA;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kEAAkE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AClMA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA,mCAAmC,mBAAmB;AACtD,sDAAsD,kBAAkB;AACxE;AACA;AACA;AACA;AACA,IAAI,mBAAmB;AACvB;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC7EA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC0B;AACE;AACd;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,SAAS;AACpB,WAAW,WAAW;AACtB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA,8BAA8B,gEAAgE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;ACvHA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACF;AACG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP,OAAO;AACP;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,SAAS;AACpB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA,8BAA8B,4EAA4E;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC5GA;AAAA;AAC+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B,QAAQ,qBAAqB;AAC7B,QAAQ,sBAAsB;AAC9B,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP,OAAO;AACP;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA,wHAAiD,8DAA8D,EAAE;AACjH;AACA;;;;;;;;;;;AC/DA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,YAAY,wBAAwB;AACpC;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,EAAE;AACb,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA,8BAA8B,gEAAgE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACpGA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC0B;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,eAAe;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA,8BAA8B,+CAA+C;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACzFA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC0B;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,oDAAoD;AAC/D;AACA;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yEAAyE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;AC1IA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACmB;AACG;AACI;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,gDAAgD;AAC3D;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,UAAU;AACrB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wEAAwE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;ACzJA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,kEAAkE;AAC7E;AACA,WAAW,IAAI;AACf;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8EAA8E;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AClGA;AAAA;AAC4B;AAC5B;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,kEAAkE;AAC7E;AACA,WAAW,IAAI;AACf;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA,8BAA8B,sIAA6E;AAC3G;AACA;;;;;;;;;;;;;;;;ACvCA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACE;AACF;AACH;AACJ;AACI;AAClB;AACA;AACA;AACA;AACA,IAAI,wBAAwB;AAC5B;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C,uBAAuB,mBAAmB;AAC1C,uBAAuB,mBAAmB;AAC1C,uBAAuB,oBAAoB;AAC3C,uBAAuB,mBAAmB;AAC1C,uBAAuB,sBAAsB;AAC7C,uBAAuB,oBAAoB;AAC3C,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sBAAsB;AAC/B,SAAS,sBAAsB;AAC/B,SAAS,qBAAqB;AAC9B;AACA,SAAS,qBAAqB;AAC9B,SAAS,qBAAqB;AAC9B,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AACnC;AACA,SAAS,sBAAsB;AAC/B;AACA;AACA,uBAAuB,oBAAoB;AAC3C,uBAAuB,mBAAmB;AAC1C,uBAAuB,mBAAmB;AAC1C,uBAAuB,oBAAoB;AAC3C,uBAAuB,mBAAmB;AAC1C,uBAAuB,sBAAsB;AAC7C,uBAAuB,oBAAoB;AAC3C,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB,+CAA+C;AACpE;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP,OAAO;AACP;AACA,WAAW,sBAAsB;AACjC;AACA,WAAW,sBAAsB;AACjC;AACA,WAAW,2DAA2D;AACtE;AACA;AACA,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACnRA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACN;AACf;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AAAA;AACgB;AACI;AACH;AACK;AACD;AACE;AACF;AACA;AACA;AACG;AACP;AACG;AACA;AACE;AACN;AACG;AACI;AACE;AACT;AACI;AACI;AACL;AACY;AACG;AACd;AACJ;AACE;AACG;AACJ;AACA;AACE;AACJ;AACK;AACJ;AACE;AACO;AACP;AACH;AACD;AACE;AACM;AACR;AACE;AACG;AACA;AACW;AACT;AACD;AACN;AACM;AACA;AACQ;AACT;AACC;AACJ;AACE;AACQ;AACJ;AACE;AACT;AACE;AACA;AACI;AACL;AACI;AACD;AACF;AACI;AACN;AACS;AACR;AACM;AACL;AACF;AACI;AACC;AACA;AACA;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACL;AACA;AACE;AACP;AACI;AACC;AACA;AACN;AACK;AACI;AACA;AACL;AACI;AACF;AACF;AACD;AACK;AACD;AACE;AACF;AACI;AACX;AACG;AACjB;;;;;;;;;;AC7GA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA,8BAA8B,2CAA2C;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC3CA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA,gCAAgC,UAAU;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,IAAI;AACf,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA,8BAA8B,8CAA8C;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;AC/DA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACE;AACvB;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,IAAI,mBAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oBAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;AACtB;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,YAAY,4BAA4B;AACxC,IAAI,mBAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC5FA;AAAA;AACiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C,0BAA0B,oBAAoB;AAC9C,0BAA0B,qBAAqB;AAC/C;AACA,4DAA4D;AAC5D;AACA;AACA,SAAS;AACT;AACA,WAAW,SAAS;AACpB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA,2BAA2B,mCAAmC;AAC9D,2BAA2B,sBAAsB;AACjD;AACA;AACA;;;;;;;;;;;;;ACvCA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC0B;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA,qCAAqC,eAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yFAAyF;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;AC/JA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACmB;AACG;AACM;AACF;AAC1B;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0CAA0C;AACrD;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0EAA0E;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;ACjIA;AAAA;AACiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C,0BAA0B,oBAAoB;AAC9C,0BAA0B,qBAAqB;AAC/C;AACA,4DAA4D;AAC5D;AACA;AACA,SAAS;AACT;AACA,WAAW,SAAS;AACpB;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA,2BAA2B,mCAAmC;AAC9D,2BAA2B,sBAAsB;AACjD;AACA;AACA;;;;;;;;;;;;;;ACvCA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACyB;AACP;AACQ;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,aAAa;AAC/E;AACA;AACA;AACA;AACA;AACA,8DAA8D,gBAAgB;AAC9E,0FAA0F,YAAY;AACtG;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,mBAAmB;AAC9B,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,8BAA8B,gEAAgE;AAC9F;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;ACxIA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAA4C;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;AC7EA;AAAA;AACc;AACG;AACjB;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,aAAa;AACjE,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,2CAA2C;AACtD;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf;AACA,YAAY,+BAA+B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpDA;AAAA;AACc;AACd;AACA;AACA;AACA,gCAAgC,UAAU;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,UAAU;AACrB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uGAAiD;AAC/E;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvDA;AAAA;AACkB;AACE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA+B,gEAAsB,EAAE;AACvD;AACA;AACA;;;;;;;;;;;ACtBA;AAAA;AAC0B;AACN;AACpB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,8BAA8B,4KAAsD;AACpF;AACA;;;;;;;;;;;ACZA;AAAA;AACuB;AACH;AACpB;AACA,8BAA8B,iKAA8C;AAC5E;AACA;;;;;;;;;;;ACNA;AAAA;AACwB;AACJ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2FAA+B,gBAAgB,EAAE,oBAAoB;AACnG;AACA;;;;;;;;;;;ACZA;AAAA;AACkB;AACW;AAC7B;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC1BA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACK;AAC1B;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;AC1EA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACkB;AACC;AACG;AACI;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gDAAgD;AAC3D;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA,8BAA8B,sDAAsD;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC5GA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAsD;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;ACnEA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACkB;AACC;AACG;AACI;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yCAAyC;AACpD;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA,8BAA8B,6DAA6D;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACrGA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC0B;AACE;AAC5B;AACA;AACA;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAkD;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACxFA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACL;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB;AACA,WAAW,UAAU,wBAAwB,iBAAiB;AAC9D;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+DAA+D;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,mCAAmC;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC7FA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACF;AACG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,sFAAsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,WAAW;AACtB,WAAW,SAAS;AACpB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA,8BAA8B,oEAAoE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AClKA;AAAA;AACwB;AACxB;AACA;AACA;AACA;AACA;AACA,8BAA8B,4EAA4E;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qBAAqB,EAAE;AAC/D;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC3CA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACA;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA,WAAW,SAAS;AACpB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAA2D;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC7FA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA,8BAA8B,6CAA6C;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACnDA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,YAAY,wBAAwB;AACpC;AACA;AACA,WAAW,OAAO;AAClB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAiD;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;AC7FA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC0B;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA,8BAA8B,qDAAqD;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;ACvEA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAsD;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;AClEA;AAAA;AACoB;AACD;AACnB;AACA;AACA;AACA;;;;;;;;;;;ACNA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC0B;AACE;AAC5B;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8EAA8E;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC7HA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,2CAA2C;AACtD;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAsD;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;AC5FA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC0B;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,0CAA0C;AACrD;AACA;AACA,WAAW,OAAO;AAClB,QAAQ,iCAAiC;AACzC,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6FAA6F;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;AChJA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACL;AACgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,UAAU,wBAAwB,iBAAiB;AAC9D;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oGAAoG;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,mBAAmB;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxHA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACL;AAChB;AACA;AACA;AACA;AACA,8BAA8B,yDAAyD;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACtDA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACgB;AACC;AACI;AACE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,YAAY;AACvB;AACA,WAAW,UAAU;AACrB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8JAAkG;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC/IA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACgB;AACC;AACS;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;AClIA;AAAA;AACgB;AACF;AACd;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAiC,8CAA8C,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;;;;ACxBA;AAAA;AACiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACTA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACkB;AACQ;AACE;AAC5B;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;AChHA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACH;AAClB;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;ACvIA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACkB;AACF;AACK;AACD;AACE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,iCAAiC;AACjC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnKA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACkB;AACK;AACJ;AACG;AACI;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,cAAc;AACzB;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA,8BAA8B,yEAAyE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;ACpLA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACkB;AACC;AACG;AACI;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,uBAAuB;AAClC;AACA;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACnIA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC0B;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;ACpIA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC0B;AACR;AACG;AACK;AACE;AACU;AACtC;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,mBAAmB;AAChF;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP,OAAO;AACP;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B,IAAI;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;ACxRA;AAAA;AACsB;AACtB;AACA,8BAA8B,4FAA8C;AAC5E;AACA;;;;;;;;;;ACLA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACsB;AACtB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;ACrDA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;AChBA;AAAA;AACsB;AACG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,YAAY;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;AC5BA;AAAA;AACe;AACO;AACtB,iGAAyD,0EAAoB,EAAE;AAC/E;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;AC5CA;AAAA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;AC/BA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;ACzBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"contracts.module.chunk.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class ContractNameDataService {\n  private contractNameSource = new BehaviorSubject<string>('');\n  contractName = this.contractNameSource.asObservable();\n\n  constructor() { }\n\n  changeContractName(contractName: string) {\n    this.contractNameSource.next(contractName);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/common/extranet-shared/services/contracts/contract-name-data.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ContractTermsViewModel } from '../../../../viewmodel/templates/contract-terms/contracttermsviemodel';\nimport { AuthenticatedHttpService } from '../../../../../common/shared/services/authenticated-http.service';\nimport { PortalService } from '../../../../../common/shared/services/portal.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { SaveContractTermsViewModel } from '../../../../viewmodel/templates/contract-terms/saveContractTermsViewModel';\nimport { ObjectState } from '../../../../../common/enums';\n\n@Injectable()\nexport class ContractTermsDataService {\n\n  constructor(private authenticatedHttpService: AuthenticatedHttpService,\n    private portalService: PortalService) { }\n    contractTermsGroupDto: any[];\n\n    getContractTerms(contractId): Observable<any[]> {\n      return this.authenticatedHttpService.post(this.portalService.appSettings.BaseUrls.ExtranetApi\n      + 'api/Contracts/GetContractProperties/', contractId).map( data => {\n         this.contractTermsGroupDto = data.result;\n        return this.contractTermsGroupDto;\n      });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/common/extranet-shared/services/contracts/contract-terms-data.service.ts","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class ContractUrlNotificationService {\n  private urlPathSource = new BehaviorSubject<string>('');\n  urlPath = this.urlPathSource.asObservable();\n  constructor() { }\n  changeURLRoute(urlpath: string) {\n      this.urlPathSource.next(urlpath);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/common/extranet-shared/services/contracts/contract-url-notification.service.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'orderByContracts' })\r\nexport class ContractsOrderPipe implements PipeTransform {\r\n\r\n    transform(records: Array<any>, args?: any): any {\r\n        return records.sort(function (a, b) {\r\n            if (args.property === 'hotelName' || args.property === 'location' ||\r\n                args.property === 'name' || args.property === 'status' || args.property === 'contactPerson') {\r\n                if (a[args.property].toLowerCase() < b[args.property].toLowerCase()) {\r\n                    return -1 * args.direction;\r\n                } else if (a[args.property].toLowerCase() > b[args.property].toLowerCase()) {\r\n                    return 1 * args.direction;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n            if (args.property === 'id') {\r\n                if (a[args.property] > b[args.property]) {\r\n                    return 1 * args.direction;\r\n                } else if (a[args.property] < b[args.property]) {\r\n                    return -1 * args.direction;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n            if (args.property === 'startDateEndDate') {\r\n                if (a['startDate'] > b['startDate']) {\r\n                    return 1 * args.direction;\r\n                } else if (a['startDate'] < b['startDate']) {\r\n                    return -1 * args.direction;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/common/pipes/contractsOrderPipe.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".allocationsTable  .rateCategoryTH {\\r\\n    width: 10%;\\r\\n  } \\r\\n  \\r\\n  .allocationsTable  .roomTypeTH {\\r\\n    width: 15%;\\r\\n}\\r\\n\\r\\n.allocationsTable  .datesTH {\\r\\n    width: 15%;\\r\\n}\\r\\n\\r\\n.allocationsTable  .daysTH {\\r\\n    width: 10%;\\r\\n}\\r\\n\\r\\n.allocationsTable  .typeTH {\\r\\n    width: 15%;\\r\\n}\\r\\n\\r\\n.allocationsTable  .allotmentTH {\\r\\n    width: 10%;\\r\\n}\\r\\n\\r\\n.allocationsTable .bedTypeTh {\\r\\n    width: 11%;\\r\\n}\\r\\n\\r\\n.allocationsTable .saveBtns {\\r\\n  width: 14%;\\r\\n}\\r\\n\\r\\n.maxWidth600px {\\r\\n  max-width: 600px;\\r\\n}\\r\\n\\r\\n.table th {\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.controlButtons.saveBtns .genericButton {\\r\\n    min-width: 50px;\\r\\n    padding: 8px 10px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/allocations/allocations.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/allocations/allocations.component.css\n// module chunks = contracts.module","module.exports = \"\\n<form [formGroup]=\\\"contractAllocationForm\\\">\\n<div class=\\\"container-fluid\\\">\\n    <h1 class=\\\"mainHeading mb-4 customBreadcrumb\\\">Allocations</h1>\\n    <div class=\\\"row ml-0\\\">\\n      <div class=\\\"col-md-6 maxWidth600px lightBlueContainer pb-2 pl-4 pr-2 pt-3 mb-3\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-9\\\">\\n              <mat-form-field>\\n                  <input matInput placeholder=\\\"Pooled Allotment\\\" formControlName=\\\"pooledAllotment\\\"  />\\n              </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-3 pt-1\\\">\\n              <button mat-raised-button class=\\\"btn addButton float-left\\\" title=\\\"Apply\\\" (click)=\\\"onPooledApply()\\\" >Apply</button>\\n              <button mat-raised-button class=\\\"btn addButton float-left\\\" title=\\\"Clear\\\" (click)=\\\"onPooledClear()\\\" >Clear</button>\\n              \\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"controlButtons\\\">\\n        <button mat-raised-button class=\\\"defaultButton mb-3 genericButton genericSmallButton mat-raised-button floar-right\\\" (click)=\\\"addAllocationRange()\\\"  title=\\\"Create New Individual Allotment\\\">\\n            <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i>\\n            <span>Create New Individual Allotment</span>\\n        </button>\\n    </div>\\n    <table class=\\\"table genericTable allocationsTable\\\">\\n        <thead>\\n            <tr>\\n                <th class=\\\"rateCategoryTH\\\">Rate Category *</th>\\n                <th class=\\\"roomTypeTH\\\">Room Type *</th>\\n                <th class=\\\"datesTH\\\">Dates *</th>\\n                <th class=\\\"daysTH\\\">Days</th>\\n                <th class=\\\"typeTH\\\">Type *</th>\\n                <th class=\\\"allotmentTH\\\">Allotment</th>\\n                <th class=\\\"bedTypeTh\\\">Bed Type & Rates (IDR)</th>\\n                <th class=\\\"saveBtns\\\"></th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr formArrayName=\\\"rangeAllocation\\\" \\n            *ngFor=\\\"let allocation of rangeAllocation.controls; let i=index\\\">\\n            <ng-container [formGroupName]=\\\"i\\\">\\n                <td class=\\\"rateCategoryTH border-0\\\">\\n                    <mat-form-field>\\n                        <mat-select placeholder=\\\"Select\\\"  formControlName=\\\"rateCategoryId\\\"  required>\\n                        <mat-option [value]=\\\"rate.id\\\" *ngFor='let rate of rateCategoryList'>{{rate.name}}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field> \\n                </td>\\n                <td class=\\\"roomTypeTH border-0\\\">\\n                    <mat-form-field>\\n                      <mat-select placeholder=\\\"Select\\\"  formControlName=\\\"roomTypeId\\\"  required>\\n                          <mat-option [value]=\\\"room.id\\\" *ngFor='let room of roomTypeList'>{{room.name}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                </td>\\n                <td class=\\\"datesTH border-0\\\">\\n                    <div>\\n                      <mat-form-field>\\n                          <span matPrefix>From &nbsp;</span>\\n                          <input matInput [matDatepicker]=\\\"fromDate\\\" placeholder=\\\"DD-MMM-YY\\\"\\n                            formControlName=\\\"fromDate\\\"  required>\\n                          <mat-datepicker-toggle matSuffix [for]=\\\"fromDate\\\">\\n                            <mat-icon matDatepickerToggleIcon>\\n                              <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                            </mat-icon>\\n                          </mat-datepicker-toggle>\\n                          <mat-datepicker #fromDate></mat-datepicker>\\n                        </mat-form-field>\\n                    </div>\\n                    <div>\\n                      <mat-form-field>\\n                          <span matPrefix>To &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\\n                          <input matInput [matDatepicker]=\\\"toDate\\\" placeholder=\\\"DD-MMM-YY\\\"\\n                            formControlName=\\\"toDate\\\"  required>\\n                          <mat-datepicker-toggle matSuffix [for]=\\\"toDate\\\">\\n                            <mat-icon matDatepickerToggleIcon>\\n                              <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                            </mat-icon>\\n                          </mat-datepicker-toggle>\\n                          <mat-datepicker #toDate></mat-datepicker>\\n                        </mat-form-field>\\n                    </div>\\n                </td>\\n                <td class=\\\"daysTH border-0\\\">\\n                    <mat-form-field>\\n                      <mat-select placeholder=\\\"Select\\\" name=\\\"days\\\" formControlName=\\\"days\\\" multiple required>\\n                      <mat-option [value]=\\\"day.id\\\" *ngFor='let day of daysOfWeekList'>{{day.name}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                </td>\\n                <td class=\\\"typeTH border-0\\\">\\n                    <mat-form-field>\\n                      <mat-select placeholder=\\\"Select\\\" name=\\\"allocationTypeId\\\" formControlName=\\\"allocationTypeId\\\" required>\\n                        <mat-option [value]=\\\"type.id\\\" *ngFor='let type of allotmentTypeList'>{{type.name}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                </td>\\n                <td class=\\\"allotmentTH border-0\\\">\\n                    <mat-form-field>\\n                      <input matInput  formControlName=\\\"allotment\\\" id=\\\"allotment\\\" required />\\n                    </mat-form-field>\\n                </td>\\n                <td class=\\\"bedTypeTh border-0\\\">\\n                    <div>\\n                        <mat-form-field>\\n                            <input matInput placeholder=\\\"Single\\\" formControlName=\\\"singleBed\\\" id=\\\"singleBed\\\" required />\\n                          </mat-form-field>\\n                    </div>\\n              \\n                    <div>\\n                        <mat-form-field>\\n                            <input matInput placeholder=\\\"Double/Twin\\\" formControlName=\\\"doubleBed\\\" id=\\\"doubleBed\\\" required />\\n                          </mat-form-field>\\n                    </div>\\n              \\n                    <div>\\n                        <mat-form-field>\\n                            <input matInput placeholder=\\\"Triple\\\" formControlName=\\\"tripleBed\\\" id=\\\"tripleBed\\\" required />\\n                          </mat-form-field>\\n                    </div>\\n              \\n                    <div>\\n                        <mat-form-field>\\n                            <input matInput placeholder=\\\"Quad\\\" formControlName=\\\"quadBed\\\" id=\\\"quadBed\\\" required />\\n                          </mat-form-field>\\n                    </div>\\n              \\n                    <div>\\n                        <mat-form-field>\\n                            <input matInput placeholder=\\\"XBed\\\" formControlName=\\\"extraBed\\\" id=\\\"extraBed\\\" required />\\n                          </mat-form-field>\\n                    </div>\\n              \\n                </td>\\n                <td class=\\\"saveBtns controlButtons border-0\\\">\\n                    <button  title=\\\"Save\\\" class=\\\"genericButton activeButton mat-raised-button mat-primary\\\">Save</button>\\n                    <button title=\\\"Cancel\\\" class=\\\"genericButton defaultButton\\\" >Cancel</button>\\n                </td>\\n              </ng-container>\\n            </tr>\\n        </tbody>\\n    </table>\\n\\n    <div>\\n\\n        <div >\\n            <div >\\n              <mat-error *ngIf=\\\"contractAllocationForm.get('rangeAllocation').errors \\n              && contractAllocationForm.get('rangeAllocation').errors.ValidateRateCategoryId\\\">\\n                This rate category Type already exists.\\n              </mat-error>\\n             \\n            </div>\\n          </div>\\n    </div>\\n</div>\\n</form>\\n<div class=\\\"row mt-5 ml-0 mr-0\\\">\\n    <div class=\\\"col-md-12 controlButtons mb-4\\\">\\n      <button title=\\\"Save\\\" class=\\\"genericButton activeButton mat-primary mat-raised-button\\\" >Save</button>\\n      <button title=\\\"Cancel\\\" class=\\\"genericButton defaultButton mat-raised-button\\\" mat-raised-button >Cancel</button>\\n      <button class=\\\"genericButton activeButton mat-primary mat-raised-button float-right\\\" title=\\\"Save &amp; Continue\\\" >Save &amp; Continue</button>\\n    </div>\\n  </div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/allocations/allocations.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/allocations/allocations.component.html\n// module chunks = contracts.module","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { RateCategoryViewModel } from '../../../viewmodel/contracts/allocations/ratecategoryviewmodel';\nimport { RoomTypeViewModel } from '../../../viewmodel/contracts/allocations/roomtypeviewmodel';\nimport { DaysOfWeekViewModel } from '../../../viewmodel/contracts/allocations/daysofweekviewmodel';\nimport { AllotmentTypeViewModel } from '../../../viewmodel/contracts/allocations/allotmenttypeviewmodel';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { FormGroup, FormControl, FormArray, AbstractControl } from '@angular/forms';\n\n\nfunction ValidateAllocationRange(control: AbstractControl): { [key: string]: boolean } | null {\n  const arr = [];\n  const allocationRangeList = control;\n  let result = '';\n  // Validations for elements of the range allocation array []\n  // Has to have atleast 2 elements to compare\n  if ((allocationRangeList.value !== undefined) && (allocationRangeList.value !== null) &&\n    (allocationRangeList.value.length > 1)) {\n     allocationRangeList.value.forEach((element, index) => {\n        if (index <= allocationRangeList.value.length) {\n          result = traverseAllocationRangeList(<FormArray>allocationRangeList, index, ++index);\n         if (result !== null && result !== undefined && result.length > 0) {\n           arr.push(result);\n         }\n        }\n      });\n\n      if (arr !== null && arr !== undefined && arr.length > 0) {\n        return { 'ValidateRateCategoryId': true };\n      } else  {\n        return null;\n      }\n}\n}\n\nfunction traverseAllocationRangeList(rangeList: FormArray, currentIndex: number , nextIndex: number):\nstring|null {\n      // if (currentIndex === rangeList.length - 1 ) {\n      //  return null;\n      // }\n  if (currentIndex < rangeList.length - 1) {\n    const currentItem = rangeList.value[currentIndex];\n    const nextItem = rangeList.value[nextIndex];\n\n    if (currentItem.rateCategoryId !== undefined && currentItem.rateCategoryId !== null\n      && currentItem.fromDate !== undefined && currentItem.fromDate !== null\n      && currentItem.toDate !== undefined && currentItem.toDate !== null\n      && currentItem.days !== undefined && currentItem.days !== null\n      && currentItem.allocationTypeId !== undefined && currentItem.allocationTypeId !== null\n      &&\n      nextItem.rateCategoryId !== undefined && nextItem.rateCategoryId !== null\n      && nextItem.fromDate !== undefined && nextItem.fromDate !== null\n      && nextItem.toDate !== undefined && nextItem.toDate !== null\n      && nextItem.days !== undefined && nextItem.days !== null\n      && nextItem.allocationTypeId !== undefined && nextItem.allocationTypeId !== null\n\n    ) {\n      // Add Validation Rules -- Now Just Testing\n      const currentrateCategoryId = currentItem.rateCategoryId;\n      const nextrateCategoryId = nextItem.rateCategoryId;\n      if (currentrateCategoryId === nextrateCategoryId) {\n        return 'ValidateRateCategoryId';\n      }\n       ++nextIndex;\n       if ( nextIndex === rangeList.length) {\n        return null;\n       }else {\n      return traverseAllocationRangeList(rangeList, currentIndex, nextIndex);\n       }\n    } else {\n      return null;\n    }\n  }\n}\n\n@Component({\n  selector: 'app-allocations',\n  templateUrl: './allocations.component.html',\n  styleUrls: ['./allocations.component.css']\n})\nexport class AllocationsComponent implements OnInit {\n\n  constructor(private cd: ChangeDetectorRef) { }\n\n  rateCategoryList:  RateCategoryViewModel[];\n  roomTypeList: RoomTypeViewModel[];\n  daysOfWeekList: DaysOfWeekViewModel[];\n  allotmentTypeList: AllotmentTypeViewModel[];\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  contractAllocationForm: FormGroup;\n\n    // To do change this according to whether there are any range allocation created\n    // If none then create 1 by default else show the number created on init\n  contractAllocationOperation= CONSTANTS.operation.create;\n\n  ngOnInit() {\n\n    // Get the master data\n    // For testing\n    this.rateCategoryList = [\n      { id: 1, name: 'Standard Rate' },\n      { id: 2, name: 'Read Only' },\n      { id: 3, name: 'Non-Refundable' },\n    ];\n    this.roomTypeList = [\n      { id: 1, name: 'Std-Haven-Double' },\n      { id: 2, name: 'Std-Haven-Sunroof' },\n      { id: 3, name: 'Std-Haven-Beach Front' },\n      { id: 4, name: 'Stdd-Haven-Balcony' },\n\n      { id: 5, name: 'Room Only-Haven-Double' },\n      { id: 6, name: 'Room Only-Haven-Sunroof' },\n      { id: 7, name: 'Room Only-Haven-Beach Front' },\n      { id: 8, name: 'Room Only-Haven-Balcony' },\n\n      { id: 9,  name: 'NRF-Haven-Double' },\n      { id: 10, name: 'NRF-Haven-Sunroof' },\n      { id: 11, name: 'NRF-Haven-Beach Front' },\n      { id: 12, name: 'NRF-Haven-Balcony' }\n    ];\n    this.daysOfWeekList = [\n      { id: 'Mon', name: 'Mon' },\n      { id: 'Tue', name: 'Tue' },\n      { id: 'Wed', name: 'Wed' },\n      { id: 'Thu', name: 'Thu' },\n      { id: 'Fri', name: 'Fri' },\n      { id: 'Sat', name: 'Sat' },\n      { id: 'Sun', name: 'Sun' },\n    ];\n\n    this.allotmentTypeList = [\n      { id: 1, name: 'Room Level' },\n      { id: 2, name: 'Rate Category' },\n      { id: 3, name: 'Is Free Sale' },\n    ];\n\n\n\n    // Create the Form Model\n\n    this.contractAllocationForm = new FormGroup({\n      pooledAllotment: new FormControl(),\n      rangeAllocation: new FormArray([], ValidateAllocationRange)\n    });\n    // To do get operation-- Api whether there was any or do we need this?\n    if (this.contractAllocationOperation.toLowerCase().trim() === this.create) {\n      this.addAllocationRange();\n    }\n  }\n\n  get rangeAllocation():  FormArray {\n    return <FormArray>this.contractAllocationForm.get('rangeAllocation');\n   }\n\n  addAllocationRange() {\n    this.rangeAllocation.push(this.buildAllocationRange());\n    this.cd.detectChanges();\n  }\n\n  buildAllocationRange(): FormGroup {\n    let allocationRangeGroup: FormGroup;\n    allocationRangeGroup = new FormGroup({\n      rateCategoryId: new FormControl(),\n      roomTypeId: new FormControl(),\n      fromDate: new FormControl(),\n      toDate: new FormControl(),\n      days: new FormControl(),\n      allocationTypeId: new FormControl(),\n      allotment: new FormControl(),\n      singleBed: new FormControl(),\n      doubleBed: new FormControl(),\n      tripleBed: new FormControl(),\n      quadBed: new FormControl(),\n      extraBed: new FormControl()\n    });\n    return allocationRangeGroup;\n\n  }\n\n   onPooledApply() {\n   const pooledAllotment = this.contractAllocationForm.get('pooledAllotment').value;\n   this.rangeAllocation.controls.forEach((control, index) => {\n    control.get('allotment').setValue(pooledAllotment);\n    control.get('allotment').disable();\n   });\n  }\n\n  onPooledClear() {\n    this.contractAllocationForm.get('pooledAllotment').setValue('');\n    this.rangeAllocation.controls.forEach((control, index) => {\n     control.get('allotment').setValue('');\n     control.get('allotment').enable();\n    });\n   }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/allocations/allocations.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".genericTable th:nth-child(1), .genericTable tr td:nth-child(1) {\\r\\n  width: 2%;\\r\\n  padding-left: 5px;\\r\\n  padding-right: 5px;\\r\\n}\\r\\n.genericTable th:nth-child(2), .genericTable tr td:nth-child(2) {\\r\\n  width: 15%;\\r\\n}\\r\\n.genericTable th:nth-child(3), .genericTable tr td:nth-child(3) {\\r\\n  width: 15%;\\r\\n}\\r\\n.genericTable th:nth-child(4), .genericTable tr td:nth-child(4) {\\r\\n  width: 10%;\\r\\n}\\r\\n.genericTable th:nth-child(5), .genericTable tr td:nth-child(5) {\\r\\n  width: 11%;\\r\\n}\\r\\n.genericTable th:nth-child(6), .genericTable tr td:nth-child(6) {\\r\\n  width: 14%;\\r\\n}\\r\\n.genericTable th:nth-child(7), .genericTable tr td:nth-child(7) {\\r\\n  width: 13%;\\r\\n}\\r\\n.genericTable th:nth-child(8), .genericTable tr td:nth-child(8) {\\r\\n  width: 10%;\\r\\n}\\r\\n.genericTable th:nth-child(9), .genericTable tr td:nth-child(9) {\\r\\n  width: 10%;\\r\\n}\\r\\n\\r\\n.extraRowsCount {\\r\\n  background-color: #29aae2 ;\\r\\n  padding: 5px;\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n.extraRowsCount span {\\r\\n  font-size: 15px;\\r\\n}\\r\\n\\r\\n.fa-angle-down, .fa-angle-up {\\r\\n  font-size: 20px;\\r\\n  color: #29aae2 ;\\r\\n}\\r\\n\\r\\n.page-size {\\r\\n  display: -webkit-box;\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  float: right;\\r\\n  position: relative;\\r\\n  font-size: 13.5px;\\r\\n  width: 66px;\\r\\n  margin-top: 0.1875rem;\\r\\n}\\r\\n\\r\\n.page-size label {\\r\\n  display: inline-block;\\r\\n  margin: 0 .5rem .5rem 0;\\r\\n  line-height: 2rem;\\r\\n  white-space: nowrap;\\r\\n}\\r\\n\\r\\n.page-size mat-select {\\r\\n  outline: none;\\r\\n  -webkit-appearance: none;\\r\\n  -moz-appearance: none;\\r\\n}\\r\\n\\r\\n.page-size select::-ms-expand {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.contractsPagination {\\r\\n  font-size: 0.875rem;\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\npagination-controls /deep/ .ngx-pagination .current {\\r\\n  color: #29aae2 ;\\r\\n  font-family: 'maven_proregular';\\r\\n  background: #fff;\\r\\n}\\r\\n\\r\\n.PaginationControls{\\r\\n  text-align: center;\\r\\n}\\r\\n/*Pagination next*/\\r\\n\\r\\npagination-controls /deep/ li.pagination-next.ng-star-inserted {\\r\\n    font-size: 0.1rem;\\r\\n    color: #29aae2;\\r\\n    background: #29aae2;\\r\\n    padding: 8px 0 1px 0px !important;\\r\\n    line-height: 12px;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n  pagination-controls /deep/ li.pagination-next.ng-star-inserted.disabled {\\r\\n    font-size: 0.2rem;\\r\\n    background: rgba(0, 0, 0, 0.12) !important;\\r\\n    opacity:inherit;\\r\\n    color:rgba(0, 0, 0, 0.12) !important;\\r\\n    padding: 6px 8px 0 7px !important;\\r\\n    line-height: 23px;\\r\\n    position: relative;\\r\\n  }\\r\\n\\r\\npagination-controls /deep/ li.pagination-previous.disabled.ng-star-inserted {\\r\\n  background: rgba(0, 0, 0, 0.12) !important;\\r\\n  opacity:inherit;\\r\\n  color:rgba(0, 0, 0, 0.12) !important;\\r\\n}\\r\\n\\r\\n  pagination-controls /deep/ li.pagination-previous.disabled.ng-star-inserted{\\r\\n    background: rgba(0, 0, 0, 0.12) !important;\\r\\n    opacity:inherit;\\r\\n    color:rgba(0, 0, 0, 0.12) !important;\\r\\n  }\\r\\n\\r\\n  pagination-controls /deep/ li.pagination-next.ng-star-inserted a.ng-star-inserted:before {\\r\\n    content: '\\\\F0DA';\\r\\n    font: 21px FontAwesome;\\r\\n    display: inline-block;\\r\\n    color: #fff;\\r\\n    position: absolute;\\r\\n    left: 14px;\\r\\n    top: 3px;\\r\\n  }\\r\\n\\r\\n  pagination-controls /deep/ li.pagination-next.ng-star-inserted.disabled:before {\\r\\n    content: '\\\\F0DA';\\r\\n    font: 21px FontAwesome;\\r\\n    display: inline-block;\\r\\n    color: rgba(0, 0, 0, 0.26);\\r\\n    position: absolute;\\r\\n    left: 14px;\\r\\n    top: 4px;\\r\\n  }\\r\\n\\r\\n\\r\\n/*Pagination previous*/\\r\\n\\r\\npagination-controls /deep/ li.pagination-previous.disabled.ng-star-inserted {\\r\\n  font-size: 0.2rem;\\r\\n  color: #b3c3d9;\\r\\n  background: #b3c3d9;\\r\\n  padding: 6px 6px 0 15px !important;\\r\\n  position: relative;\\r\\n  line-height: 23px;\\r\\n}\\r\\n\\r\\n  pagination-controls /deep/ li.pagination-previous.disabled.ng-star-inserted:before {\\r\\n    content: '\\\\F0D9';\\r\\n    font: 21px FontAwesome;\\r\\n    display: inline-block;\\r\\n    left: 34%;\\r\\n    color: #fff;\\r\\n    position: absolute;\\r\\n    top: 11%;\\r\\n  }\\r\\n\\r\\npagination-controls /deep/ li.pagination-previous.ng-star-inserted {\\r\\n  color: #29aae2;\\r\\n  background: #29aae2;\\r\\n  font-size: 0.2rem;\\r\\n  line-height: 16px;\\r\\n  padding-top: 6px;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n  pagination-controls /deep/ li.pagination-previous.ng-star-inserted a.ng-star-inserted {\\r\\n    position: relative;\\r\\n  }\\r\\n\\r\\n    pagination-controls /deep/ li.pagination-previous.ng-star-inserted a.ng-star-inserted:before {\\r\\n      content: '\\\\F0D9';\\r\\n      font: 21px FontAwesome;\\r\\n      display: inline-block;\\r\\n      color: #fff;\\r\\n      position: absolute;\\r\\n      bottom: 4px;\\r\\n      left: 10px;\\r\\n    }\\r\\n\\r\\npagination-controls /deep/ .ngx-pagination a:hover,\\r\\n.ngx-pagination button:hover {\\r\\n  background: none;\\r\\n}\\r\\n\\r\\n.width80percent {\\r\\n  width: 80%;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-list/contract-list.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/contract-list/contract-list.component.css\n// module chunks = contracts.module","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"mt-4 pt-2\\\">\\n\\n    <h1 class=\\\"mainHeading borderBottomNone pb-0\\\">Contracts</h1>\\n    <div class=\\\"row mt-4 mb-5\\\">\\n      <form [formGroup]=\\\"searchContracts\\\" (ngSubmit)=\\\"findContracts(searchContracts.get('searchText').value,searchContracts.get('fromDate').value,searchContracts.get('toDate').value,searchContracts.get('startOrEndDate').value)\\\"\\n        class=\\\"w-100\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"lightBlueContainer pb-2 pl-4 pr-4 pt-4\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"row\\\">\\n\\n                  <div class=\\\"col-md-2\\\">\\n                    <mat-form-field class=\\\"width80percent\\\">\\n                      <span matPrefix>From &nbsp;</span>\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"fromdate\\\">\\n                        <mat-icon matDatepickerToggleIcon>\\n                          <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                        </mat-icon>\\n                      </mat-datepicker-toggle>\\n                      <input matInput readonly [matDatepicker]=\\\"fromdate\\\" placeholder=\\\"DD-MMM-YY\\\" formControlName=\\\"fromDate\\\">\\n                      <mat-datepicker #fromdate></mat-datepicker>\\n                    </mat-form-field>\\n                    <span class=\\\"btn transparent-circle smallDeleteIcon ml-1\\\" title=\\\"Delete\\\">\\n                      <i aria-hidden=\\\"true\\\" class=\\\"fa fa-times-thin\\\" (click)=\\\"checkIsFromDateCleared();\\\"></i>\\n                    </span>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <mat-form-field class=\\\"width80percent\\\">\\n                      <span matPrefix>To &nbsp;</span>\\n                      <input matInput readonly [matDatepicker]=\\\"todate\\\" placeholder=\\\"DD-MMM-YY\\\" formControlName=\\\"toDate\\\" [min]=\\\"searchContracts.get('fromDate').value\\\">\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"todate\\\">\\n                        <mat-icon matDatepickerToggleIcon>\\n                          <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                        </mat-icon>\\n                      </mat-datepicker-toggle>\\n                      <mat-datepicker #todate></mat-datepicker>\\n                    </mat-form-field>\\n                    <span class=\\\"btn transparent-circle smallDeleteIcon ml-1\\\" title=\\\"Delete\\\">\\n                      <i aria-hidden=\\\"true\\\" class=\\\"fa fa-times-thin\\\" (click)=\\\"checkIsToDateCleared();\\\"></i>\\n                    </span>\\n                  </div>\\n                  <div class=\\\"col-md-2 alignItemCenter\\\">\\n                    <mat-radio-group formControlName=\\\"startOrEndDate\\\" class=\\\"col-md-12\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                          <mat-radio-button [value]=\\\"'start'\\\">Start date</mat-radio-button>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                          <mat-radio-button [value]=\\\"'end'\\\">End date</mat-radio-button>\\n                        </div>\\n                      </div>\\n                    </mat-radio-group>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"Search by Hotel Name, Contract Name, Contact, Location\\\" formControlName=\\\"searchText\\\" (keyup)=\\\"checkIsInputCleared($event)\\\">\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-2 text-right controlButtons\\\">\\n                    <button [hidden]='isRead' class=\\\"genericButton activeButton mat-primary mat-raised-button genericSmallButton top10px\\\" title=\\\"Search\\\" type=\\\"submit\\\">\\n                      Search</button>\\n                  </div>\\n\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n    <div class=\\\"row mb-3\\\">\\n      <div *ngIf=\\\"createView\\\" class=\\\"col-md-12 text-right controlButtons\\\">\\n        <button [hidden]='isRead' class=\\\"defaultButton genericButton genericSmallButton mat-raised-button\\\" mat-raised-button title=\\\"Create New Contract\\\"\\n          type=\\\"button\\\" (click)=\\\"createContract()\\\">\\n          <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i>\\n          <span>Create New Contract</span>\\n        </button>\\n      </div>\\n    </div>\\n\\n    <table class=\\\"table genericTable mb-4\\\">\\n      <thead>\\n        <tr class=\\\"title-Bar\\\">\\n          <th></th>\\n          <th (click)=\\\"sort('hotelName')\\\">\\n            Hotel Name\\n            <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-sort': column != 'hotelName',\\n                      'fa-sort-desc': (column == 'hotelName' && !isDesc),\\n                      'fa-sort-asc': (column == 'hotelName' && isDesc) }\\\" aria-hidden=\\\"true\\\"></i>\\n          </th>\\n          <th (click)=\\\"sort('contactPerson')\\\">\\n            Contact\\n            <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-sort': column != 'contactPerson',\\n                      'fa-sort-desc': (column == 'contactPerson' && !isDesc),\\n                      'fa-sort-asc': (column == 'contactPerson' && isDesc) }\\\" aria-hidden=\\\"true\\\"></i>\\n          </th>\\n          <th (click)=\\\"sort('location')\\\">\\n            Location\\n            <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-sort': column != 'location',\\n                      'fa-sort-desc': (column == 'location' && !isDesc),\\n                      'fa-sort-asc': (column == 'location' && isDesc) }\\\" aria-hidden=\\\"true\\\"></i>\\n          </th>\\n          <th (click)=\\\"sort('id')\\\">\\n            Contract ID\\n            <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-sort': column != 'id',\\n                      'fa-sort-desc': (column == 'id' && !isDesc),\\n                      'fa-sort-asc': (column == 'id' && isDesc) }\\\" aria-hidden=\\\"true\\\"></i>\\n          </th>\\n          <th (click)=\\\"sort('name')\\\">\\n            Contract Name\\n            <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-sort': column != 'name',\\n                      'fa-sort-desc': (column == 'name' && !isDesc),\\n                      'fa-sort-asc': (column == 'name' && isDesc) }\\\" aria-hidden=\\\"true\\\"></i>\\n          </th>\\n          <th (click)=\\\"sort('startDateEndDate')\\\">\\n            Start-End Date\\n            <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-sort': column != 'startDateEndDate',\\n                      'fa-sort-desc': (column == 'startDateEndDate' && !isDesc),\\n                      'fa-sort-asc': (column == 'startDateEndDate' && isDesc) }\\\" aria-hidden=\\\"true\\\"></i>\\n          </th>\\n          <th (click)=\\\"sort('status')\\\">\\n            Status\\n            <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-sort': column != 'status',\\n                      'fa-sort-desc': (column == 'status' && !isDesc),\\n                      'fa-sort-asc': (column == 'status' && isDesc) }\\\" aria-hidden=\\\"true\\\"></i>\\n          </th>\\n          <th class=\\\"ActionTh\\\"></th>\\n        </tr>\\n        <tr class=\\\"white-space\\\"></tr>\\n      </thead>\\n      <tbody>\\n        <ng-container *ngFor=\\\"let contract of (!isSearch ? contractsList : filteredData) | orderByContracts: {property:column,direction: direction} | paginate: { itemsPerPage: pagesize, currentPage: currentpage}\\\">\\n          <tr (click)=\\\"contract.isExpanded = !contract.isExpanded\\\">\\n            <td>\\n              <div *ngIf=\\\"contract.promoContracts.length !== 0\\\" class=\\\"ml-1\\\">\\n                <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-angle-down': contract.isExpanded === false ,\\n                                          'fa-angle-up': contract.isExpanded === true  }\\\" aria-hidden=\\\"true\\\"></i>\\n              </div>\\n            </td>\\n            <td class=\\\"hotelTitle\\\">\\n              <div>{{contract.hotelName}}</div>\\n              <span *ngIf=\\\"contract.promoContracts.length !== 0\\\" class=\\\"extraRowsCount d-inline-block mt-2\\\">\\n                <span>+</span> {{contract.promoContracts.length}} More</span>\\n            </td>\\n            <td>\\n              <div *ngFor=\\\"let contact of contract.contacts\\\">\\n                {{contact.contactPerson}}\\n                <br> {{contract.designation}}\\n                <br> {{contact.emailAddress}}\\n                <br> {{contact.contactNumber}}\\n              </div>\\n            </td>\\n            <td>{{contract.location}}</td>\\n            <td>{{contract.id}}</td>\\n            <td>\\n              <div>{{contract.name}}</div>\\n              <div class=\\\"lightGrey mt-1\\\">\\n                <i class=\\\"fa fa-file-o\\\" aria-hidden=\\\"true\\\"></i>\\n                {{contract.contractType}}</div>\\n            </td>\\n            <td>\\n              <span class=\\\"d-block\\\">{{contract.startDate | date : \\\"dd-MMM-yy\\\"}} to</span>\\n              <span class=\\\"d-block\\\">{{contract.endDate | date: \\\"dd-MMM-yy\\\"}}</span>\\n            </td>\\n            <td>\\n              <i class=\\\"fa draft_status\\\"></i>{{contract.status}}</td>\\n            <td class=\\\"text-center placeholderColorGray\\\" *ngIf='createView || deleteView'>\\n              <mat-select placeholder=\\\"Actions\\\" name=\\\"Actions\\\" [(ngModel)]=\\\"actions\\\">\\n                <mat-option value=\\\"{{contract.id}}-edit\\\" #edit (click)=\\\"GoContractUpdate(edit.value, contract)\\\">Edit</mat-option>\\n                <mat-option value=\\\"{{contract.id}}-delete\\\" #delete (click)=\\\"GoContractUpdate(delete.value)\\\">Delete</mat-option>\\n                <!-- <mat-option *ngIf=\\\"contract.status !== 'draft'\\\" value=\\\"{{contract.id}}-view\\\" #view (click)=\\\"ViewPDF()\\\" target=\\\"_blank\\\">View PDF</mat-option> -->\\n              </mat-select>\\n            </td>\\n          </tr>\\n          <ng-container *ngFor=\\\"let promoContract of contract.promoContracts\\\">\\n            <tr *ngIf=\\\"contract.isExpanded === true\\\" class=\\\"backgroundNone\\\">\\n              <td class=\\\"borderBottomNone borderTopNone\\\"></td>\\n              <td class=\\\"borderBottomNone borderTopNone\\\"></td>\\n              <td class=\\\"borderBottomNone borderTopNone\\\"></td>\\n              <td class=\\\"borderBottomNone borderTopNone\\\"></td>\\n              <td class=\\\"dottedBorderBottom\\\">{{promoContract.id}}</td>\\n              <td class=\\\"dottedBorderBottom\\\">\\n                <div>{{promoContract.name}}</div>\\n                <div class=\\\"lightGrey mt-1\\\">\\n                  <i class=\\\"fa fa-file-o\\\" aria-hidden=\\\"true\\\"></i>\\n                  {{promoContract.contractType}}</div>\\n              </td>\\n              <td class=\\\"dottedBorderBottom\\\">\\n                <span class=\\\"d-block\\\">{{contract.startDate | date : \\\"dd-MMM-yy\\\"}} to</span>\\n                <span class=\\\"d-block\\\">{{contract.endDate | date: \\\"dd-MMM-yy\\\"}}</span>\\n              </td>\\n              <td class=\\\"dottedBorderBottom\\\">\\n                <i class=\\\"fa fa-circle active_status\\\"></i>{{promoContract.status}}</td>\\n              <td class=\\\"text-center placeholderColorGray dottedBorderBottom\\\" *ngIf='createView || deleteView'>\\n                <mat-select placeholder=\\\"Actions\\\" name=\\\"Actions\\\" [(ngModel)]=\\\"actions\\\">\\n                  <mat-option value=\\\"{{contract.id}}-edit\\\" #edit (click)=\\\"GoPromoContractUpdate(edit.value, promoContract)\\\">Edit</mat-option>\\n                  <mat-option value=\\\"{{contract.id}}-delete\\\" #delete (click)=\\\"GoPromoContractUpdate(delete.value)\\\">Delete</mat-option>\\n                  <!-- <mat-option value=\\\"{{contract.id}}-view\\\" #view (click)=\\\"ViewPDF()\\\" target=\\\"_blank\\\">View PDF</mat-option> -->\\n                </mat-select>\\n              </td>\\n            </tr>\\n          </ng-container>\\n        </ng-container>\\n      </tbody>\\n    </table>\\n    <div style=\\\"color:orange\\\" *ngIf=\\\"noDataAvailable\\\">\\n      No Contract is created.\\n    </div>\\n    <div *ngIf=\\\"!noDataAvailable\\\" class=\\\"row PaginationControls pl-5 ml-4\\\">\\n\\n      <div class=\\\"col-md-10\\\">\\n        <div class=\\\"contractsPagination\\\">\\n          <pagination-controls (pageChange)=\\\"currentpage = $event\\\" boundaryLinks=true directionLinks=true autoHide=\\\"false\\\">\\n          </pagination-controls>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n        <div class=\\\"page-size\\\">\\n          <mat-select placeholder=\\\"Show\\\" class=\\\"form-group\\\" (select)=\\\"onPageChange($event)\\\" [(ngModel)]=\\\"pagesize\\\">\\n            <mat-option [value]=\\\"5\\\">5</mat-option>\\n            <mat-option [value]=\\\"10\\\">10</mat-option>\\n            <mat-option [value]=\\\"20\\\">20</mat-option>\\n            <mat-option [value]=\\\"50\\\">50</mat-option>\\n          </mat-select>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-list/contract-list.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/contract-list/contract-list.component.html\n// module chunks = contracts.module","import { Component, OnInit, ViewChild, Input, ChangeDetectorRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { TemplatesDataService } from '../../../common/extranet-shared/services/templates/templates-data.service';\nimport { Templateslistviewmodel } from '../../../viewmodel/templates/templates-details/templateslistviewmodel';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { UserProfileService } from '../../../../common/shared/services/user-profile.service';\nimport { DateAdapter, NativeDateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { DatePipe } from '@angular/common';\nimport { DialogsService } from '../../../common/extranet-shared/dialogs/dialogs.service';\nimport { ContractDataService } from './../../../common/extranet-shared/services/contracts/contract-data.service';\nimport { ContractsListViewModel } from './../../../viewmodel/contracts/contractslistviewmodel';\nimport { ContractNameDataService } from '../../../common/extranet-shared/services/contracts/contract-name-data.service';\n\nconst DATE_FORMATS = {\n  parse: {\n    dateInput: { month: 'short', year: 'numeric', day: 'numeric' }\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  }\n};\n\nexport class DatePickerDateAdapter extends NativeDateAdapter {\n  format(date: Date, displayFormat: Object): string {\n    date.setMinutes((date.getTimezoneOffset() * -1));\n    if (displayFormat === 'input') {\n      const day = date.getDate();\n      const month = date.toLocaleString('en-us', { month: 'long' });\n      const year = date.getFullYear();\n      return this._to2digit(day) + '-' + month.substring(0, 3) + '-' + year % 100;\n    } else {\n      return date.toDateString();\n    }\n  }\n\n  private _to2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n}\n\n@Component({\n  selector: 'app-contract-list',\n  templateUrl: './contract-list.component.html',\n  styleUrls: ['./contract-list.component.css'],\n  providers: [\n    { provide: DateAdapter, useClass: DatePickerDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS },\n  ]\n})\n\nexport class ContractListComponent implements OnInit {\n\n  privileges: string[];\n  deleteView = false;\n  createView = false;\n  readView = false;\n  operation: string;\n  isRead: boolean;\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  searchContracts: FormGroup;\n  hotelId: string;\n  contractsList: ContractsListViewModel[];\n  filteredData: ContractsListViewModel[];\n  isSearch: boolean;\n  minChar: boolean;\n  noDataAvailable: boolean;\n  actions: string;\n  isDesc = false;\n  column: string;\n  direction: number;\n  pagesize = 20;\n  currentpage = 1;\n\n  @Input()\n  _dateValue; // notice the '_'\n  result: any;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private contractsDataService: ContractDataService,\n    private userProfileService: UserProfileService,\n    public datepipe: DatePipe,\n    private dialogsService: DialogsService,\n    public contractNameDataService: ContractNameDataService,\n    private changeDetectorRefs: ChangeDetectorRef\n  ) { }\n\n  ngOnInit() {\n    window.scrollTo(0, 0);\n    this.isSearch = false;\n    this.isDesc = false;\n    this.searchContracts = new FormGroup({\n      fromDate: new FormControl(),\n      toDate: new FormControl(),\n      startOrEndDate: new FormControl('start'),\n      searchText: new FormControl()\n    });\n    this.getPrivileges();\n    this.contractsList = this.activatedRoute.snapshot.data['contractListData'];\n    for (const contract of this.contractsList) {\n      contract.contactPerson = contract.contacts[0].contactPerson.toLowerCase() + '\\n' + contract.designation + '\\n' +\n        contract.contacts.contactPerson + '\\n' + contract.contacts.contactPerson;\n    }\n    for (const contract of this.contractsList) {\n      contract.isExpanded = false;\n    }\n    this.changeDetectorRefs.detectChanges();\n    if (this.contractsList.length === 0) {\n      this.noDataAvailable = true;\n    }\n  }\n\n  private createContract() {\n    this.dialogsService.openContractTemplateModal().subscribe(res => {\n      this.result = res;\n    });\n  }\n\n  getPrivileges() {\n    this.privileges = this.userProfileService.GetUserPermissionsForFeature(\n      CONSTANTS.application.extranet,\n      CONSTANTS.featuretypeid.Templates\n    );\n    for (const privilege of this.privileges) {\n      if (privilege === 'VW') {\n        this.readView = true;\n      } else if (privilege === 'CR') {\n        this.createView = true;\n      } else if (privilege === 'DE') {\n        this.deleteView = true;\n      }\n    }\n  }\n\n  findContracts(filterValue: string, filterFrom: string, filterTo: string, startOrEndDate: string) {\n    if (filterFrom !== null || filterTo !== null || (filterValue !== null && filterValue.length >= 3)) {\n      this.isSearch = true;\n    }\n    if (filterFrom !== null) {\n      filterFrom = this.datepipe.transform(filterFrom, 'yyyy-MM-dd');\n    }\n    if (filterTo !== null) {\n      filterTo = this.datepipe.transform(filterTo, 'yyyy-MM-dd');\n    }\n    if (filterValue !== null) {\n      filterValue = filterValue.trim();\n      filterValue = filterValue.toLowerCase();\n    }\n\n    function getFilteredPromoContracts(contract) {\n      let isTrue;\n      isTrue = false;\n      const promoData = contract.promoContracts.filter(promoContract => {\n        if (promoContract.name.toLowerCase().includes(filterValue)) {\n          isTrue = true;\n          return promoContract;\n        }\n      });\n      if (isTrue) {\n        contract.isExpanded = true;\n        contract.promoContracts = promoData;\n        return contract;\n      }\n    }\n\n    if (this.isSearch) {\n      this.filteredData = this.contractsList.filter(contract => {\n        const startDate = this.datepipe.transform(contract.startDate, 'yyyy-MM-dd');\n        const endDate = this.datepipe.transform(contract.endDate, 'yyyy-MM-dd');\n        if (startOrEndDate === 'start') {\n          if (filterValue !== null && (filterFrom === null && filterTo === null)) {\n            if (contract.hotelName.toLowerCase().includes(filterValue) ||\n              contract.name.toLowerCase().includes(filterValue) ||\n              contract.designation.toLowerCase().includes(filterValue) ||\n              (contract.contacts[0].contactPerson.toLowerCase().includes(filterValue) ||\n                contract.contacts[0].emailAddress.toLowerCase().includes(filterValue) ||\n                contract.contacts[0].contactNumber.toLowerCase().includes(filterValue)) ||\n              contract.location.toLowerCase().includes(filterValue) ||\n              getFilteredPromoContracts(contract)) {\n              contract.isExpanded = true;\n              return contract;\n            }\n          } else if (filterFrom !== null && (filterTo === null && filterValue === null)) {\n            return startDate >= filterFrom;\n          } else if (filterTo !== null && (filterFrom === null && filterValue === null)) {\n            return startDate <= filterTo;\n          } else if (filterValue === null && (filterFrom !== null && filterTo !== null)) {\n            return filterFrom <= startDate && startDate <= filterTo;\n          } else if (filterFrom === null && (filterValue !== null && filterTo !== null)) {\n            if ((contract.hotelName.toLowerCase().includes(filterValue) ||\n              contract.name.toLowerCase().includes(filterValue) ||\n              contract.designation.toLowerCase().includes(filterValue) ||\n              (contract.contacts[0].contactPerson.toLowerCase().includes(filterValue) ||\n                contract.contacts[0].emailAddress.toLowerCase().includes(filterValue) ||\n                contract.contacts[0].contactNumber.toLowerCase().includes(filterValue)) ||\n              contract.location.toLowerCase().includes(filterValue) ||\n              getFilteredPromoContracts(contract)) &&\n              startDate <= filterTo) {\n              contract.isExpanded = true;\n              return contract;\n            }\n          } else if (filterTo === null && (filterFrom !== null && filterValue !== null)) {\n            if ((contract.hotelName.toLowerCase().includes(filterValue) ||\n              contract.name.toLowerCase().includes(filterValue) ||\n              contract.designation.toLowerCase().includes(filterValue) ||\n              (contract.contacts[0].contactPerson.toLowerCase().includes(filterValue) ||\n                contract.contacts[0].emailAddress.toLowerCase().includes(filterValue) ||\n                contract.contacts[0].contactNumber.toLowerCase().includes(filterValue)) ||\n              contract.location.toLowerCase().includes(filterValue) ||\n              getFilteredPromoContracts(contract)) &&\n              startDate >= filterFrom) {\n              contract.isExpanded = true;\n              return contract;\n            }\n          } else if (filterFrom !== null && filterTo !== null && filterValue !== null) {\n            if ((contract.hotelName.toLowerCase().includes(filterValue) ||\n              contract.name.toLowerCase().includes(filterValue) ||\n              contract.designation.toLowerCase().includes(filterValue) ||\n              (contract.contacts[0].contactPerson.toLowerCase().includes(filterValue) ||\n                contract.contacts[0].emailAddress.toLowerCase().includes(filterValue) ||\n                contract.contacts[0].contactNumber.toLowerCase().includes(filterValue)) ||\n              contract.location.toLowerCase().includes(filterValue) ||\n              getFilteredPromoContracts(contract)) &&\n              filterFrom <= startDate && startDate <= filterTo) {\n              contract.isExpanded = true;\n              return contract;\n            }\n          }\n        } else {\n          if (filterValue !== null && (filterFrom === null && filterTo === null)) {\n            if (contract.hotelName.toLowerCase().includes(filterValue) ||\n              contract.name.toLowerCase().includes(filterValue) ||\n              contract.designation.toLowerCase().includes(filterValue) ||\n              (contract.contacts[0].contactPerson.toLowerCase().includes(filterValue) ||\n                contract.contacts[0].emailAddress.toLowerCase().includes(filterValue) ||\n                contract.contacts[0].contactNumber.toLowerCase().includes(filterValue)) ||\n              contract.location.toLowerCase().includes(filterValue) ||\n              getFilteredPromoContracts(contract)) {\n              contract.isExpanded = true;\n              return contract;\n            }\n          } else if (filterFrom !== null && (filterTo === null && filterValue === null)) {\n            return endDate >= filterFrom;\n          } else if (filterTo !== null && (filterFrom === null && filterValue === null)) {\n            return endDate <= filterTo;\n          } else if (filterValue === null && (filterFrom !== null && filterTo !== null)) {\n            return filterFrom <= endDate && endDate <= filterTo;\n          } else if (filterFrom === null && (filterValue !== null && filterTo !== null)) {\n            if ((contract.hotelName.toLowerCase().includes(filterValue) ||\n              contract.name.toLowerCase().includes(filterValue) ||\n              contract.designation.toLowerCase().includes(filterValue) ||\n              (contract.contacts[0].contactPerson.toLowerCase().includes(filterValue) ||\n                contract.contacts[0].emailAddress.toLowerCase().includes(filterValue) ||\n                contract.contacts[0].contactNumber.toLowerCase().includes(filterValue)) ||\n              contract.location.toLowerCase().includes(filterValue) ||\n              getFilteredPromoContracts(contract)) &&\n              endDate <= filterTo) {\n              contract.isExpanded = true;\n              return contract;\n            }\n          } else if (filterTo === null && (filterFrom !== null && filterValue !== null)) {\n            if ((contract.hotelName.toLowerCase().includes(filterValue) ||\n              contract.name.toLowerCase().includes(filterValue) ||\n              contract.designation.toLowerCase().includes(filterValue) ||\n              (contract.contacts[0].contactPerson.toLowerCase().includes(filterValue) ||\n                contract.contacts[0].emailAddress.toLowerCase().includes(filterValue) ||\n                contract.contacts[0].contactNumber.toLowerCase().includes(filterValue)) ||\n              contract.location.toLowerCase().includes(filterValue) ||\n              getFilteredPromoContracts(contract)) &&\n              endDate >= filterFrom) {\n              contract.isExpanded = true;\n              return contract;\n            }\n          } else if (filterFrom !== null && filterTo !== null && filterValue !== null) {\n            if ((contract.hotelName.toLowerCase().includes(filterValue) ||\n              contract.name.toLowerCase().includes(filterValue) ||\n              contract.designation.toLowerCase().includes(filterValue) ||\n              (contract.contacts[0].contactPerson.toLowerCase().includes(filterValue) ||\n                contract.contacts[0].emailAddress.toLowerCase().includes(filterValue) ||\n                contract.contacts[0].contactNumber.toLowerCase().includes(filterValue)) ||\n              contract.location.toLowerCase().includes(filterValue) ||\n              getFilteredPromoContracts(contract)) &&\n              filterFrom <= endDate && endDate <= filterTo) {\n              contract.isExpanded = true;\n              return contract;\n            }\n          }\n        }\n      });\n      for (const contract of this.filteredData) {\n        contract.contactPerson = contract.contacts[0].contactPerson.toLowerCase() + '\\n' + contract.designation + '\\n' +\n          contract.contacts.contactPerson + '\\n' + contract.contacts.contactPerson;\n      }\n    }\n  }\n\n  checkIsInputCleared(event) {\n    if (this.searchContracts.get('searchText').value && this.searchContracts.get('searchText').value.length < 3) {\n      this.getContractsList();\n    }\n  }\n\n  checkIsFromDateCleared() {\n    this.searchContracts.get('fromDate').setValue(null);\n    if ((this.searchContracts.get('searchText').value === null || this.searchContracts.get('searchText').value === '') &&\n      this.searchContracts.get('toDate').value === null) {\n      this.getContractsList();\n    }\n  }\n\n  checkIsToDateCleared() {\n    this.searchContracts.get('toDate').setValue(null);\n    if ((this.searchContracts.get('searchText').value === null || this.searchContracts.get('searchText').value === '') &&\n      this.searchContracts.get('fromDate').value === null) {\n      this.getContractsList();\n    }\n  }\n\n  sort(property) {\n    this.isDesc = !this.isDesc;\n    this.column = property;\n    this.direction = this.isDesc ? 1 : -1;\n  }\n\n  onPageChange(event) {\n    this.pagesize = event.value;\n  }\n\n  public GoContractUpdate(e, contract: ContractsListViewModel) {\n    // this.dialogsService\n    // .confirm('Information', 'Work in Progress.', false).subscribe(res => {\n    //   this.result = res;\n    //   if (this.result) {\n    //   }\n    // });\n\n   // const val = e.value.split('-');\n   const contractBasicInfo =\n   contract.name.trim() +\n      '~#' +\n      new Date(contract.startDate) +\n      '~#' +\n      new Date(contract.endDate);\n      this.contractsDataService.contractBasicDetails = contractBasicInfo;\n      this.contractsDataService.savedcontractBasicDetails = contractBasicInfo;\n    this.contractNameDataService.changeContractName(contractBasicInfo);\n   const val = e.split('-');\n    const contractId = val[0];\n    this.operation = val[1];\n    if (this.operation.trim().toLowerCase() === this.edit) {\n      this.router.navigate(\n        ['../contract', contractId, this.operation.trim().toLowerCase()],\n        { relativeTo: this.activatedRoute }\n      );\n    }\n  }\n\n  public GoPromoContractUpdate(e) {\n    // this.dialogsService\n    // .confirm('Information', 'Work in Progress.', false).subscribe(res => {\n    //   this.result = res;\n    //   if (this.result) {\n    //   }\n    // });\n\n   // const val = e.value.split('-');\n   const val = e.split('-');\n    const contractId = val[0];\n    this.operation = val[1];\n    if (this.operation.trim().toLowerCase() === this.edit) {\n      this.router.navigate(\n        ['../contract', contractId, this.operation.trim().toLowerCase()],\n        { relativeTo: this.activatedRoute }\n      );\n    }\n  }\n\n  // ViewPDF() {\n  //   const path = {\n  //     path: '\\\\MGDocuments\\\\hotelId-1486\\\\contracts\\\\815944525.pdf'\n  //   };\n  //   this.contractsDataService.viewPdf(path).subscribe((result) => {\n  //     console.log(result);\n  //   });\n  // }\n\n  getContractsList() {\n    this.contractsDataService.getContractsList().subscribe((contractsList) => {\n      this.isSearch = false;\n      this.contractsList = contractsList;\n      this.filteredData = contractsList;\n      for (const contract of this.filteredData) {\n        contract.isExpanded = false;\n        contract.contactPerson = contract.contacts[0].contactPerson.toLowerCase() + '\\n' + contract.designation + '\\n' +\n          contract.contacts.contactPerson + '\\n' + contract.contacts.contactPerson;\n      }\n      for (const contract of contractsList) {\n        contract.isExpanded = false;\n        contract.contactPerson = contract.contacts[0].contactPerson.toLowerCase() + '\\n' + contract.designation + '\\n' +\n          contract.contacts.contactPerson + '\\n' + contract.contacts.contactPerson;\n      }\n      this.changeDetectorRefs.detectChanges();\n    }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-list/contract-list.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".genericTable mat-header-cell, .genericTable mat-row mat-cell {\\r\\n  width: 28%;\\r\\n}\\r\\n\\r\\n.genericTable mat-header-cell:last-child, .genericTable mat-row mat-cell:last-child {\\r\\n  width: 16%;\\r\\n}\\r\\n\\r\\n.minWidth230px {\\r\\n  min-width: 230px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-nav-menu/contract-nav-menu.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/contract-nav-menu/contract-nav-menu.component.css\n// module chunks = contracts.module","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"mt-4\\\">\\n      <div class=\\\"customBreadcrumb mb-4\\\">\\n          <span>Contracts </span><span>&gt; {{breadcrumbs}} Contract {{contractTypeName}}</span>\\n      </div>\\n    <h1 class=\\\"mainHeading borderBottomNone customBreadcrumb\\\">{{breadcrumbs}} Contract <span class=\\\"mandatoryInfo float-right\\\">Indicates Mandatory Fields</span></h1>\\n    <p class=\\\"m-0\\\">Complete below steps to create your new contract</p>\\n    <form [formGroup]=\\\"createContract\\\">\\n    <div class=\\\"row mb-4 mt-5\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"lightBlueContainer pb-2 pl-4 pr-2 pt-3 mb-3\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"form-group col-md-6 mb-0\\\">\\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <input matInput placeholder=\\\"Contract Name\\\" formControlName=\\\"contractNameEntered\\\"\\n                          required  [disabled]=\\\"isNameEditable\\\" (keyup)=\\\"checkContractName()\\\" (change)=\\\"checkContractName()\\\" maxlength=\\\"150\\\"/>\\n                      </mat-form-field>\\n                      <div class=\\\"col-md-12 templateNameError\\\">\\n                        <mat-error *ngIf=\\\"uniqueNameError\\\">\\n                          Contract Name already exists.\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-md-2 minWidth230px\\\">\\n                      <mat-form-field>\\n                        <span class=\\\"requiredLabel mr-3\\\" matPrefix>Start Date</span>\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"sdate\\\">\\n                          <mat-icon matDatepickerToggleIcon>\\n                            <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                          </mat-icon>\\n                        </mat-datepicker-toggle>\\n                        <input matInput [matDatepicker]=\\\"sdate\\\" placeholder=\\\"DD-MMM-YY\\\" [disabled]=\\\"isNameEditable\\\" formControlName=\\\"startDate\\\" (dateInput)=\\\"dateChangeEvent('startDate', $event)\\\" (dateChange)=\\\"dateChangeEvent('startDate', $event)\\\"\\n                        [min]=\\\"(contractTypeName === ' (Non - MG)') ? startNonMGDate : startDate\\\"\\n                        >\\n                        <mat-datepicker #sdate></mat-datepicker>\\n                      </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-md-2 minWidth230px\\\">\\n                      <mat-form-field>\\n                        <span class=\\\"requiredLabel mr-3\\\" matPrefix>End Date</span>\\n                        <input matInput [matDatepicker]=\\\"edate\\\" placeholder=\\\"DD-MMM-YY\\\" [disabled]=\\\"isNameEditable\\\" [min]=\\\"createContract.get('startDate').value\\\" formControlName=\\\"endDate\\\" (dateInput)=\\\"dateChangeEvent('endDate', $event)\\\" (dateChange)=\\\"dateChangeEvent('endDate', $event)\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"edate\\\">\\n                          <mat-icon matDatepickerToggleIcon>\\n                            <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                          </mat-icon>\\n                        </mat-datepicker-toggle>\\n                        <mat-datepicker #edate></mat-datepicker>\\n                      </mat-form-field>\\n                    </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n  <div *ngIf=\\\"showMenuChips\\\">\\n    <div class=\\\"mb-4\\\">\\n      <mat-chip-list *ngIf=\\\"isDisabledTab\\\" class=\\\"genericProcessFlow\\\">\\n        <mat-chip *ngFor=\\\" let chip of chipsList; let i=index\\\" [selected]=\\\"chip.selected\\\" [color]=\\\"chip.chipcolor\\\"  disabled=\\\"true\\\">\\n          <span class=\\\"fa-stack fa-lg\\\">\\n            <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n            <i class=\\\"fa fa-stack-1x fa-inverse\\\">{{i+1}}</i>\\n          </span>{{chip.chipname}}</mat-chip>\\n      </mat-chip-list>\\n      <mat-chip-list *ngIf=\\\"!isDisabledTab\\\" class=\\\"genericProcessFlow\\\">\\n        <mat-chip *ngFor=\\\" let chip of chipsList; let i=index\\\" (click)=\\\"changeChip(chip, chipsList)\\\" [selected]=\\\"chip.selected\\\" [color]=\\\"chip.chipcolor\\\"\\n          [routerLink]=\\\"[chip.routerLink]\\\">\\n          <span class=\\\"fa-stack fa-lg\\\">\\n            <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n            <i class=\\\"fa fa-stack-1x fa-inverse\\\">{{i+1}}</i>\\n          </span>{{chip.chipname}}</mat-chip>\\n      </mat-chip-list>\\n    </div>\\n    <nav mat-tab-nav-bar *ngIf=\\\"showhotelinfo\\\" id=\\\"hotelinfo\\\" class=\\\"genericTab mb-4\\\">\\n      <a mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"Hotel Info\\\" [routerLink]=\\\"['hoteldetails']\\\">Hotel Info</a>\\n      <a *ngIf=\\\"!isDisabledTab && contractDataService.showFacility\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"Facilities and Services\\\" [routerLink]=\\\"['facilitiesservices']\\\">Facilities and Services</a>\\n      <a *ngIf=\\\"isDisabledTab && contractDataService.showFacility\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"Facilities and Services\\\">Facilities and Services</a>\\n    </nav>\\n    <nav mat-tab-nav-bar *ngIf=\\\"showRate\\\" id=\\\"rate\\\" class=\\\"genericTab mb-4\\\">\\n      <a *ngIf=\\\"!isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"room type\\\" [routerLink]=\\\"['roomtypelist']\\\">Room Type</a>\\n      <a *ngIf=\\\"!isDisabledTab && contractDataService.showamenity\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"amenities\\\" [routerLink]=\\\"['amenities']\\\">Amenities</a>\\n      <a *ngIf=\\\"!isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"mealplan\\\" [routerLink]=\\\"['mealplan']\\\">Meal Plan</a>\\n      <a *ngIf=\\\"!isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"Policies\\\" [routerLink]=\\\"['policylist']\\\">Policies</a>\\n      <a *ngIf=\\\"!isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"rate category\\\" [routerLink]=\\\"['ratecategory']\\\">Rate Category</a>\\n\\n      <a *ngIf=\\\"isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"room type\\\">Room Type</a>\\n      <a *ngIf=\\\"isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"amenities\\\">Amenities</a>\\n      <a *ngIf=\\\"isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"mealplan\\\">Meal Plan</a>\\n      <a *ngIf=\\\"isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"Policies\\\">Policies</a>\\n      <a *ngIf=\\\"isDisabledTab\\\" mat-tab-link routerLinkActive=\\\"active\\\" label=\\\"rate category\\\">Rate Category</a>\\n    </nav>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-nav-menu/contract-nav-menu.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/contract-nav-menu/contract-nav-menu.component.html\n// module chunks = contracts.module","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { Observable } from 'rxjs/Observable';\nimport { ContractUrlNotificationService } from '../../../common/extranet-shared/services/contracts/contract-url-notification.service';\nimport { ContractNameDataService } from '../../../common/extranet-shared/services/contracts/contract-name-data.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { ContractDataService } from '../../../common/extranet-shared/services/contracts/contract-data.service';\nimport { ContractType } from '../../../../common/enums';\nimport { DatePipe } from '@angular/common';\nimport {\n  DateAdapter,\n  NativeDateAdapter,\n  MAT_DATE_FORMATS,\n  MAT_DATE_LOCALE\n} from '@angular/material/core';\nimport { ContractsListViewModel } from '../../../viewmodel/contracts/contractslistviewmodel';\n\nconst read = CONSTANTS.operation.read;\nconst edit = CONSTANTS.operation.edit;\nconst create = CONSTANTS.operation.create;\n\nconst DATE_FORMATS = {\n  parse: {\n    dateInput: { month: 'short', year: 'numeric', day: 'numeric' }\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' }\n  }\n};\n\nexport class DatePickerDateAdapter extends NativeDateAdapter {\n  format(date: Date, displayFormat: Object): string {\n    date.setMinutes(date.getTimezoneOffset() * -1);\n    if (displayFormat === 'input') {\n      const day = date.getDate();\n      const month = date.toLocaleString('en-us', { month: 'long' });\n      const year = date.getFullYear();\n      return this._to2digit(day) + '-' + month.substring(0, 3) + '-' + year % 100;\n    } else {\n      return date.toDateString();\n    }\n  }\n\n  private _to2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n}\n\n@Component({\n  selector: 'app-contract-nav-menu',\n  templateUrl: './contract-nav-menu.component.html',\n  styleUrls: ['./contract-nav-menu.component.css'],\n  providers: [\n    { provide: DateAdapter, useClass: DatePickerDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS }\n  ]\n})\nexport class ContractNavMenuComponent implements OnInit {\n  path: string;\n  // @Input() contractName: string;\n  isRead: boolean;\n  operation: string;\n  contractId: number;\n  isDisabledTab: boolean;\n  colorClass = '';\n  state1 = true;\n  state2 = false;\n  state3 = false;\n  state4 = false;\n  contractName: string;\n  showhotelinfo: boolean;\n  showRate: boolean;\n  isNameEditable = false;\n  contractEnteredName: string;\n  createContract: FormGroup;\n  contractType: ContractType;\n  showMenuChips: boolean;\n  breadcrumbs: string;\n  contractTypeName: string;\n  startDate = new Date();\n  startNonMGDate = new Date();\n  contractsList: ContractsListViewModel[];\n  contractBasicData: string[] = [];\n  uniqueNameError = false;\n\n  chipsList = [\n    {\n      chipId: 1,\n      chipname: 'Hotel Info',\n      chipcolor: 'primary',\n      chipchild: 'hotelinfo',\n      routerLink: 'hoteldetails',\n      selected: true\n    },\n    {\n      chipId: 2,\n      chipname: 'Rate',\n      chipcolor: 'accent',\n      chipchild: 'Rate',\n      routerLink: 'roomtypelist',\n      selected: false\n    },\n    {\n      chipId: 3,\n      chipname: 'Allocations',\n      chipcolor: 'accent',\n      chipchild: 'allocation',\n      routerLink: 'allocations',\n      selected: false\n    },\n    {\n      chipId: 4,\n      chipname: 'Contract Terms',\n      chipcolor: 'accent',\n      chipchild: '',\n      routerLink: 'contractterms',\n      selected: false\n    }\n  ];\n  params: any;\n  coming: any;\n  events: string[] = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    public contractNameDataService: ContractNameDataService,\n    public contractDataService: ContractDataService,\n    public contractUrlNotificationService: ContractUrlNotificationService,\n    public datepipe: DatePipe\n  ) {}\n\n  DateFunction(toDay): Date {\n    const year = toDay.getFullYear();\n    const month = toDay.getMonth();\n    const day = toDay.getDate();\n    const updatedDate = new Date(year - 1, month, day);\n    return updatedDate;\n  }\n  ngOnInit() {\n    this.isNameEditable = false;\n    this.contractName = '';\n    this.operation = this.activatedRoute.snapshot.params['operation'];\n    this.contractId = +this.activatedRoute.snapshot.params['id'];\n    this.createContract = new FormGroup({\n      contractNameEntered: new FormControl('', Validators.required),\n      startDate: new FormControl('', Validators.required),\n      endDate: new FormControl('', Validators.required)\n    });\n    if (this.operation === edit) {\n      this.contractTypeName = ' (MG - Static)';\n      this.showMenuChips = true;\n      this.breadcrumbs = 'Edit ';\n      this.contractType = ContractType.MGStatic;\n    } else if (this.operation === create) {\n      this.isDisabledTab = true;\n      this.contractType = this.contractDataService.contractType;\n      switch (this.contractType) {\n        case 0:\n          this.contractTypeName = ' (MG - Static)';\n          this.showMenuChips = true;\n          break;\n        case 1:\n          this.contractTypeName = ' (MG - Dynamic)';\n          this.showMenuChips = false;\n          break;\n        case 2:\n          this.contractTypeName = ' (Non - MG)';\n          this.showMenuChips = false;\n          this.startNonMGDate = this.DateFunction(new Date());\n          break;\n      }\n      this.breadcrumbs = 'Create New ';\n      this.showhotelinfo = true;\n      this.showRate = false;\n    }\n\n    this.contractUrlNotificationService.urlPath.subscribe(path => {\n      this.path = path;\n      if (this.router.url.indexOf('hoteldetails') >= 0) {\n        this.isNameEditable = false;\n      } else {\n        this.isNameEditable = true;\n      }\n      if (\n        this.operation.trim().toLocaleLowerCase() === create && this.contractId === 0) {\n        this.isDisabledTab = true;\n      } else {\n        this.isDisabledTab = false;\n      }\n      if (this.contractType === ContractType.MGStatic) {\n        if (\n          this.path === 'hoteldetails' || this.path === 'facilitiesservices'\n        ) {\n          this.showhotelinfo = true;\n          this.showRate = false;\n          this.changeChip(this.chipsList[0], this.chipsList);\n        } else if (\n          this.path === 'roomtype' ||\n          this.path === 'roomtypelist' ||\n          this.path === 'amenities' ||\n          this.path === 'mealplan' ||\n          this.path === 'ratecategory' ||\n          this.path === 'childandextrabedpolicy' ||\n          this.path === 'cancellationpolicies'\n        ) {\n          this.changeChip(this.chipsList[1], this.chipsList);\n          // this.isNameEditable = true;\n        } else if (this.path === 'allocation') {\n          this.showhotelinfo = false;\n          this.showRate = false;\n          this.changeChip(this.chipsList[2], this.chipsList);\n          // this.isNameEditable = true;\n        } else if (this.path === 'contractterms') {\n          this.showhotelinfo = false;\n          this.showRate = false;\n          this.changeChip(this.chipsList[3], this.chipsList);\n         // this.isNameEditable = true;\n        }\n      }\n      this.contractDetailsUpdate();\n    });\n\n    if (this.contractName !== '') {\n      this.contractBasicDetails();\n    }\n  }\n\n  contractDetailsUpdate() {\n    if (this.contractType === ContractType.MGStatic) {\n      this.showMenuChips = true;\n      if (this.operation === edit) {\n        if (this.contractDataService.contractBasicDetails !== undefined &&\n          this.contractDataService.contractBasicDetails.trim() !== '') {\n            this.contractBasicData = this.contractDataService.contractBasicDetails.split('~#');\n            this.createContract.controls['contractNameEntered'].setValue(\n              this.contractBasicData[0]);\n              this.contractName = this.contractBasicData[0];\n            this.createContract.get('startDate').setValue( new Date(this.contractBasicData[1]).toISOString());\n            this.createContract.get('endDate').setValue( new Date(this.contractBasicData[2]).toISOString());\n\n              // this.createContract.get('contractNameEntered').disable();\n              // this.createContract.get('startDate').disable();\n              // this.createContract.get('endDate').disable();\n            } else {\n              let contractDetails = '';\n              this.contractNameDataService.contractName.subscribe( name =>\n                contractDetails = name\n              );\n              this.contractBasicData = contractDetails.trim().split('~#');\n              this.createContract.controls['contractNameEntered'].setValue( this.contractBasicData[0]);\n              this.createContract.get('startDate').setValue( new Date(this.contractBasicData[1]).toISOString());\n              this.createContract.get('endDate').setValue( new Date(this.contractBasicData[2]).toISOString());\n            }\n            if (this.isNameEditable) {\n              this.createContract.get('contractNameEntered').disable();\n              this.createContract.get('startDate').disable();\n              this.createContract.get('endDate').disable();\n            }\n      }\n        this.stepsCheck();\n    } else {\n      this.showMenuChips = false;\n    }\n  }\n\n  checkContractName() {\n\n    this.checkUniqueContractName();\n    this.contractBasicDetails();\n  }\n\n  checkUniqueContractName() {\n    if (this.contractName !== undefined && this.contractName !== null) {\n      // // // console.log('this.templatesDataService.templateListDto - ' + JSON.stringify(this.templatesDataService.templateListDto));\n      if (this.contractDataService.contractListDto === undefined) {\n        this.uniqueNameError = false;\n      } else {\n        this.contractDataService.contractNameExist(this.contractName.trim()).subscribe ( data => {\n          if (data.result === false) {\n            this.uniqueNameError = false;\n            this.contractNameDataService.changeContractName(this.contractName.trim());\n          } else {\n            this.uniqueNameError = true;\n            this.contractNameDataService.changeContractName('');\n          }\n        } );\n       }\n    }\n  }\n\n  dateChangeEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    this.events = [];\n    this.events.push(`${event.value}`);\n    this.contractBasicDetails();\n  }\n\n  contractBasicDetails() {\n    let sDate = '';\n    let eDate = '';\n    let newSDate: Date;\n    let newEDate: Date;\n    if (this.createContract.controls['startDate'].value !== null) {\n      newSDate = new Date(this.createContract.controls['startDate'].value);\n    }\n    if (this.createContract.controls['endDate'].value !== null) {\n      newEDate = new Date(this.createContract.controls['endDate'].value);\n    }\n    if (newSDate > newEDate) {\n      this.createContract.controls['endDate'].setValue('');\n    } else {\n      sDate =\n        this.datepipe.transform(\n          this.createContract.controls['startDate'].value,\n          'dd-MM-yy') === null ? '' : this.datepipe.transform( this.createContract.controls['startDate'].value, 'dd-MM-yy');\n\n      eDate =\n        this.datepipe.transform(\n          this.createContract.controls['endDate'].value,\n          'dd-MM-yy' ) === null ? '' : this.datepipe.transform(\n              this.createContract.controls['endDate'].value, 'dd-MM-yy');\n    }\n    let contractNamePass = '';\n    if (this.uniqueNameError === true) {\n      contractNamePass = '';\n    } else {\n      contractNamePass = this.createContract.controls['contractNameEntered'].value.trim();\n    }\n\n    const contractBasicInfo =\n     contractNamePass +\n      '~#' +\n      new Date(this.createContract.get('startDate').value) +\n      '~#' +\n      new Date(this.createContract.get('endDate').value);\n    this.contractNameDataService.changeContractName(contractBasicInfo);\n    this.contractDataService.contractBasicDetails = contractBasicInfo;\n    this.contractName = this.createContract.controls['contractNameEntered'].value;\n    // this.checkUniqueContractName();\n  }\n\n  stepsCheck() {\n   if (this.operation !== edit) {\n    this.contractDataService\n          .getTemplateSteps(this.contractDataService.templateId)\n          .subscribe(templatesSteps => {\n            if (templatesSteps !== null) {\n              const step = templatesSteps;\n              if (templatesSteps.facilityCount > 0) {\n                this.contractDataService.showFacility = true;\n              } else {\n                this.contractDataService.showFacility = false;\n              }\n              if (templatesSteps.amenityCount > 0) {\n                this.contractDataService.showamenity = true;\n              } else {\n                this.contractDataService.showamenity = false;\n              }\n            }\n          });\n        } else {\n          this.contractDataService\n          .getContractSteps(this.contractId)\n          .subscribe(templatesSteps => {\n            if (templatesSteps !== null) {\n              const step = templatesSteps;\n              if (templatesSteps.facilityCount > 0) {\n                this.contractDataService.showFacility = true;\n              } else {\n                this.contractDataService.showFacility = false;\n              }\n              if (templatesSteps.amenityCount > 0) {\n                this.contractDataService.showamenity = true;\n              } else {\n                this.contractDataService.showamenity = false;\n              }\n            }\n          });\n        }\n  }\n\n  changeChip(chip, chipsList) {\n    if (chip.selected) {\n      chip.chipcolor = 'primary';\n    } else {\n      for (const cc of chipsList) {\n        if (cc.chipId !== chip.chipId) {\n          cc.selected = false;\n          cc.chipcolor = 'accent';\n        }\n      }\n      chip.selected = !chip.selected;\n      chip.chipcolor = 'primary';\n      if (chip.chipId === 1) {\n        this.showhotelinfo = true;\n        this.showRate = false;\n      } else if (chip.chipId === 2) {\n        this.showhotelinfo = false;\n        this.showRate = true;\n      } else {\n        this.showhotelinfo = false;\n        this.showRate = false;\n      }\n    }\n    this.stepsCheck();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-nav-menu/contract-nav-menu.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-terms/contract-terms.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/contract-terms/contract-terms.component.css\n// module chunks = contracts.module","module.exports = \"<p>\\n  contract-terms works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-terms/contract-terms.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/contract-terms/contract-terms.component.html\n// module chunks = contracts.module","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormArray, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { TemplateUrlNotificationService } from '../../../common/extranet-shared/services/templates/template-url-notification.service';\nimport { ContractTermsViewModel } from '../../../viewmodel/templates/contract-terms/contracttermsviemodel';\nimport { ObjectState } from '../../../../common/enums';\n\nimport { MatSnackBar } from '@angular/material';\nimport { SaveContractTermsViewModel } from '../../../viewmodel/templates/contract-terms/saveContractTermsViewModel';\nimport { TemplateHotelInfoViewModel } from '../../../viewmodel/templates/hotel-info/hotelinfoviewmodel';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { ContractTermsDataService } from '../../../common/extranet-shared/services/contracts/contract-terms-data.service';\n\n@Component({\n  selector: 'app-contract-terms',\n  templateUrl: './contract-terms.component.html',\n  styleUrls: ['./contract-terms.component.css']\n})\nexport class ContractTermsComponent implements OnInit {\n\n  constructor(private contractTermsDataService: ContractTermsDataService) { }\n\n  ngOnInit() {\n    const terms = this.contractTermsDataService.getContractTerms(1);\n    console.log(JSON.stringify(terms));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract-terms/contract-terms.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract/contract.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/contract/contract.component.css\n// module chunks = contracts.module","module.exports = \"<div>\\n  <app-contract-nav-menu></app-contract-nav-menu>\\n</div>\\n<div >\\n  <div class=\\\"body-style\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract/contract.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/contract/contract.component.html\n// module chunks = contracts.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contract',\n  templateUrl: './contract.component.html',\n  styleUrls: ['./contract.component.css']\n})\nexport class ContractComponent implements OnInit {\n  contractName: string;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contract/contract.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ContractComponent } from './contract/contract.component';\nimport { ContractListComponent } from './contract-list/contract-list.component';\nimport { ContractNavMenuComponent } from './contract-nav-menu/contract-nav-menu.component';\nimport { ContractTermsComponent } from './contract-terms/contract-terms.component';\nimport { AllocationsComponent } from './allocations/allocations.component';\nimport { HotelDetailsComponent } from './hotel-info/hotel-details/hotel-details.component';\nimport { FacilitiesServicesComponent } from './hotel-info/facilities-services/facilities-services.component';\nimport { AmenitiesComponent } from './rate/amenities/amenities.component';\nimport { RoomTypeInfoComponent } from './rate/room-type/room-type-info/room-type-info.component';\nimport { RoomTypeListComponent } from './rate/room-type/room-type-list/room-type-list.component';\nimport { MealPlanComponent } from './rate/meal-plan/meal-plan.component';\nimport { CancellationPoliciesComponent } from './rate/policies/cancellation-policies/cancellation-policies.component';\nimport { CancellationPolicyListComponent } from './rate/policies/cancellation-policy-list/cancellation-policy-list.component';\nimport { ChildAndExtraBedPolicyComponent } from './rate/policies/child-and-extra-bed-policy/child-and-extra-bed-policy.component';\n// tslint:disable-next-line:max-line-length\nimport { ChildAndExtraBedPolicyListComponent } from './rate/policies/child-and-extra-bed-policy-list/child-and-extra-bed-policy-list.component';\nimport { PolicyListComponent } from './rate/policies/policy-list/policy-list.component';\nimport { RateCategoryListComponent } from './rate/rate-category/rate-category-list/rate-category-list.component';\nimport { RateCategoryInfoComponent } from './rate/rate-category/rate-category-info/rate-category-info.component';\nimport { RedirectComponent } from './redirect/redirect.component';\nimport { HotelsNameResolverService } from '../../common/extranet-shared/services/contracts/hotels-name-resolver.service';\n// tslint:disable-next-line:max-line-length\nimport { TemplateHotelDetailsResolverService } from '../../common/extranet-shared/services/contracts/template-hotel-details-resolver.service';\nimport { ContractDataResolverService } from '../../common/extranet-shared/services/contracts/contract-data-resolver.service';\n// tslint:disable-next-line:max-line-length\nimport { ContractFacilitiesDataResolverService } from '../../common/extranet-shared/services/contracts/contract-facilities-data-resolver.service';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'contracts', pathMatch: 'full' },\n  { path: 'contracts', component: ContractListComponent, resolve: { contractListData: ContractDataResolverService } },\n  { path: 'redirect/:contractid', component: RedirectComponent },\n  {\n    path: 'contract/:id/:operation',\n    component: ContractComponent,\n    children: [\n      { path: '', redirectTo: 'hoteldetails', pathMatch: 'full' },\n      {\n        path: 'hoteldetails', component: HotelDetailsComponent,\n        resolve: { hotelsName: HotelsNameResolverService }\n      },\n      {\n        path: 'facilitiesservices', component: FacilitiesServicesComponent,\n        resolve: { contractFacilityData: ContractFacilitiesDataResolverService }\n      },\n      { path: 'roomtypelist', component: RoomTypeListComponent  },\n      { path: 'roomtype/:id/:operation', component: RoomTypeInfoComponent },\n      {\n        path: 'amenities',\n        component: AmenitiesComponent\n      },\n      {\n        path: 'mealplan',\n        component: MealPlanComponent\n      },\n      {\n        path: 'policylist',\n        component: PolicyListComponent\n      },\n      {\n        path: 'childandextrabedpolicy/:id/:operation',\n        component: ChildAndExtraBedPolicyComponent\n      },\n      {\n        path: 'cancellationpolicies/:id/:operation',\n        component: CancellationPoliciesComponent\n      },\n      { path: 'allocations', component: AllocationsComponent },\n      { path: 'contractterms', component: ContractTermsComponent },\n      { path: 'ratecategory', component: RateCategoryListComponent },\n      {\n        path: 'ratecategory/:id/:operation',\n        component: RateCategoryInfoComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ContractsRoutingModule { }\n\nexport const routedContractsComponents = [\n  HotelDetailsComponent,\n  FacilitiesServicesComponent,\n  ContractComponent,\n  AllocationsComponent,\n  ContractListComponent,\n  ContractNavMenuComponent,\n  ContractTermsComponent,\n  RoomTypeListComponent,\n  RoomTypeInfoComponent,\n  AmenitiesComponent,\n  MealPlanComponent,\n  RateCategoryListComponent,\n  RateCategoryInfoComponent,\n  CancellationPolicyListComponent,\n  ChildAndExtraBedPolicyComponent,\n  CancellationPoliciesComponent,\n  ChildAndExtraBedPolicyListComponent,\n  PolicyListComponent,\n  RedirectComponent\n];\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contracts-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { routedContractsComponents, ContractsRoutingModule } from './contracts-routing.module';\nimport { MaterialModule } from '../../../common/material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { ContractUrlNotificationService } from '../../common/extranet-shared/services/contracts/contract-url-notification.service';\nimport { ContractNameDataService } from '../../common/extranet-shared/services/contracts/contract-name-data.service';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ContractsOrderPipe } from '../../common/pipes/contractsOrderPipe';\nimport { ContractTermsDataService } from '../../common/extranet-shared/services/contracts/contract-terms-data.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ContractsRoutingModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxPaginationModule\n  ],\n  declarations: [routedContractsComponents, ContractsOrderPipe],\n  providers: [DatePipe, ContractUrlNotificationService, ContractNameDataService,\n    ContractTermsDataService\n  ]\n})\nexport class ContractsModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/contracts.module.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/hotel-info/facilities-services/facilities-services.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/hotel-info/facilities-services/facilities-services.component.css\n// module chunks = contracts.module","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <h1 class=\\\"mainHeading mb-1 customBreadcrumb\\\">Facilities &amp; Services<span class=\\\"mandatoryInfo float-right\\\">Indicates Mandatory Fields</span></h1>\\r\\n    <!--  <p>Edit the details of your property, such as bed options, onsite facilities, services and amenities.</p>-->\\r\\n    <form [formGroup]=\\\"facilitiesForm\\\" class=\\\"pt-1\\\">\\r\\n\\r\\n        <div class=\\\"formSections pb-0 pt-4 borderBottomNone\\\" formArrayName=\\\"facilitiesGroupArray\\\" *ngFor=\\\"let facilityGroup of facilitiesGroupArray.controls; let i=index\\\">\\r\\n\\r\\n            <!-- Internet -->\\r\\n            <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === internetGroupId && (facilitiesGroupArray.controls[i].get('isSelected').value) === true\\\">\\r\\n                <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true'>\\r\\n                    <mat-expansion-panel-header class=\\\"panelHeader\\\">\\r\\n                        <mat-panel-title>\\r\\n                            <div class=\\\"row iconHeading\\\">\\r\\n                                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\r\\n                                    <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/internetIcon.png\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-11 pl-2\\\">\\r\\n                                    <h2 attr.for=\\\"{{ 'facilityGroupId' + i }}\\\">\\r\\n                                        {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\r\\n                                    </h2>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n\\r\\n                    <div class=\\\"row customeRow mt-4 pb-2\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n\\r\\n\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\r\\n                                    <div [formGroupName]=\\\"j\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeId').value) === isInternetAvailableTypeId\\\">\\r\\n                                        <mat-form-field>\\r\\n                                            <mat-select placeholder=\\\"{{(facilityType.get('facilityTypeName').value)}}\\\" formControlName=\\\"selectedFacilityId\\\" (change)=\\\"isInternetDropdownChange($event)\\\">\\r\\n                                                <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n                                                <div formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\r\\n                                                    <mat-option [formGroupName]=\\\"k\\\" attr.for=\\\"{{ 'facilityTypeId' + k }}\\\" value=\\\"{{facility.get('id').value}}\\\">\\r\\n                                                        {{facility.get(\\\"name\\\").value}}\\r\\n                                                    </mat-option>\\r\\n                                                </div>\\r\\n                                            </mat-select>\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div [formGroupName]=\\\"j\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeId').value) != isInternetAvailableTypeId\\\">\\r\\n                                        <mat-form-field>\\r\\n                                            <mat-select placeholder=\\\"{{(facilityType.get('facilityTypeName').value)}}\\\" formControlName=\\\"selectedFacilityId\\\">\\r\\n                                                <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n                                                <div formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\r\\n                                                    <mat-option [formGroupName]=\\\"k\\\" attr.for=\\\"{{ 'facilityTypeId' + k }}\\\" value=\\\"{{facility.get('id').value}}\\\">\\r\\n                                                        {{facility.get(\\\"name\\\").value}}\\r\\n                                                    </mat-option>\\r\\n                                                </div>\\r\\n                                            </mat-select>\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-expansion-panel>\\r\\n            </div>\\r\\n            <!-- Internet Ends -->\\r\\n            <!-- Parking -->\\r\\n            <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === parkingGroupId && (facilitiesGroupArray.controls[i].get('isSelected').value) === true\\\">\\r\\n                <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true'>\\r\\n                    <mat-expansion-panel-header class=\\\"panelHeader\\\">\\r\\n                        <mat-panel-title>\\r\\n                            <div class=\\\"row iconHeading\\\">\\r\\n                                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\r\\n                                    <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/parking.png\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-11 pl-2\\\">\\r\\n                                    <h2 attr.for=\\\"{{ 'facilityGroupId' + i }}\\\">\\r\\n                                        {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\r\\n                                    </h2>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <div class=\\\"row customeRow mt-4 pb-2\\\">\\r\\n                        <div class=\\\"col-md-12\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\r\\n\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"form-group col-md-4 col-lg-3\\\" [formGroupName]=\\\"j\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeId').value) != 6\\\">\\r\\n                                    <mat-form-field>\\r\\n                                        <mat-select placeholder=\\\"{{(facilityType.get('facilityTypeName').value)}}\\\" formControlName=\\\"selectedFacilityId\\\">\\r\\n                                            <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n                                            <div formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\r\\n                                                <mat-option [formGroupName]=\\\"k\\\" attr.for=\\\"{{ 'facilityTypeId' + k }}\\\" value=\\\"{{facility.get('id').value}}\\\">\\r\\n                                                    {{facility.get(\\\"name\\\").value}}\\r\\n                                                </mat-option>\\r\\n                                            </div>\\r\\n                                        </mat-select>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div [formGroupName]=\\\"j\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeId').value) === 6\\\">\\r\\n                                <div class=\\\"row mt-1 checkBoxList facilitiesServicesList\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <p class=\\\"mt-0 optionsTxt semiboldText\\\">{{(facilityType.get('facilityTypeName').value)}}</p>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                    <div class=\\\"col-md-4 col-lg-3\\\">\\r\\n                                        <div class=\\\"form-group mb-3\\\">\\r\\n                                            <mat-checkbox (change)=\\\"selectAll(i,j)\\\" formControlName=\\\"selectedAll\\\">\\r\\n                                                All\\r\\n                                            </mat-checkbox>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                    <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\r\\n                                        <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\" attr.for=\\\"{{ 'facilityTypeId' + k }}\\\">\\r\\n                                            <mat-checkbox formControlName=\\\"isSelected\\\" (change)=\\\"checkIfAllSelected(i,j)\\\">{{facility.get(\\\"name\\\").value}}</mat-checkbox>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-expansion-panel>\\r\\n            </div>\\r\\n            <!-- Parking Ends -->\\r\\n            <!-- Pets -->\\r\\n            <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === petsGroupId && (facilitiesGroupArray.controls[i].get('isSelected').value) === true\\\">\\r\\n                <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true'>\\r\\n                    <mat-expansion-panel-header class=\\\"panelHeader\\\">\\r\\n                        <mat-panel-title>\\r\\n                            <div class=\\\"row iconHeading\\\">\\r\\n                                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\r\\n                                    <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/petsIcon.png\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-11 pl-2\\\">\\r\\n                                    <h2 attr.for=\\\"{{ 'facilityGroupId' + i }}\\\">\\r\\n                                        {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\r\\n                                    </h2>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <div class=\\\"row customeRow mt-4 pb-2\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\r\\n                                    <div [formGroupName]=\\\"j\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\">\\r\\n                                        <mat-form-field>\\r\\n                                            <mat-select placeholder=\\\"{{(facilityType.get('facilityTypeName').value)}}\\\" formControlName=\\\"selectedFacilityId\\\">\\r\\n                                                <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n                                                <div formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\r\\n                                                    <mat-option [formGroupName]=\\\"k\\\" attr.for=\\\"{{ 'facilityTypeId' + k }}\\\" value=\\\"{{facility.get('id').value}}\\\">\\r\\n                                                        {{facility.get(\\\"name\\\").value}}\\r\\n                                                    </mat-option>\\r\\n                                                </div>\\r\\n                                            </mat-select>\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-expansion-panel>\\r\\n            </div>\\r\\n            <!-- Pets ends -->\\r\\n            <!-- Languages -->\\r\\n            <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === languagesGroupId && (facilitiesGroupArray.controls[i].get('isSelected').value) === true\\\">\\r\\n                <mat-expansion-panel class=\\\"expandCollapseContainer\\\" expanded='true'>\\r\\n                    <mat-expansion-panel-header class=\\\"panelHeader\\\">\\r\\n                        <mat-panel-title>\\r\\n                            <div class=\\\"row iconHeading\\\">\\r\\n                                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\r\\n                                    <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/langaugeIcon.png\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-11 pl-2\\\">\\r\\n                                    <h2 attr.for=\\\"{{ 'facilityGroupId' + i }}\\\">\\r\\n                                        {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\r\\n                                    </h2>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <div class=\\\"row customeRow mt-4 pb-2\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\r\\n                                    <div [formGroupName]=\\\"j\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\">\\r\\n                                        <mat-form-field>\\r\\n                                            <mat-select multiple placeholder=\\\"Languages\\\" formControlName=\\\"multiSelectedFacilityIds\\\">\\r\\n                                                <div formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\r\\n                                                    <mat-option [formGroupName]=\\\"k\\\" attr.for=\\\"{{ 'facilityTypeId' + k }}\\\" value=\\\"{{facility.get('id').value}}\\\">\\r\\n                                                        {{facility.get(\\\"name\\\").value}}\\r\\n                                                    </mat-option>\\r\\n                                                </div>\\r\\n                                            </mat-select>\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-expansion-panel>\\r\\n            </div>\\r\\n            <!-- Languages ends -->\\r\\n            <!-- Activities -->\\r\\n            <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === activitiesGroupId && (facilitiesGroupArray.controls[i].get('isSelected').value) === true\\\">\\r\\n                <mat-expansion-panel class=\\\"expandCollapseContainer pb-2\\\" expanded='true'>\\r\\n                    <mat-expansion-panel-header class=\\\"panelHeader\\\">\\r\\n                        <mat-panel-title>\\r\\n                            <div class=\\\"row iconHeading\\\">\\r\\n                                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\r\\n                                    <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/activityIcon.png\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-11 pl-2\\\">\\r\\n                                    <h2 attr.for=\\\"{{ 'facilityGroupId' + i }}\\\">\\r\\n                                        {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\r\\n                                    </h2>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <div class=\\\"row customeRow\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\r\\n                        <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\r\\n\\r\\n                            <div class=\\\"row mt-4 pt-1 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <h5 class=\\\"pl-0 h5 semiboldText mb-1\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\r\\n                                        {{(facilityType.get('facilityTypeName').value)}}\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\">\\r\\n                                        <mat-checkbox (change)=\\\"selectAll(i,j)\\\" formControlName=\\\"selectedAll\\\">All</mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\r\\n                                        <mat-checkbox attr.for=\\\"{{ 'facilityTypeId' + k }}\\\" formControlName=\\\"isSelected\\\" (change)=\\\"checkIfAllSelected(i,j)\\\">\\r\\n                                            {{facility.get(\\\"name\\\").value}}\\r\\n                                        </mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </mat-expansion-panel>\\r\\n            </div>\\r\\n            <!-- Activities ends -->\\r\\n            <!-- Food and Drinks -->\\r\\n            <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === foodAndDrinkGroupId && (facilitiesGroupArray.controls[i].get('isSelected').value) === true\\\">\\r\\n                <mat-expansion-panel class=\\\"expandCollapseContainer pb-2\\\" expanded='true'>\\r\\n                    <mat-expansion-panel-header class=\\\"panelHeader\\\">\\r\\n                        <mat-panel-title>\\r\\n                            <div class=\\\"row iconHeading\\\">\\r\\n                                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\r\\n                                    <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/foodsanddrinkIcon.png\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-11 pl-2\\\">\\r\\n                                    <h2 attr.for=\\\"{{ 'facilityGroupId' + i }}\\\">\\r\\n                                        {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\r\\n                                    </h2>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <div class=\\\"row customeRow\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\r\\n                        <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\r\\n\\r\\n                            <div class=\\\"row mt-4 checkBoxList facilitiesServicesList pt-1\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <h5 class=\\\"pl-0 h5 semiboldText mb-1 w-100 d-block\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\r\\n                                        {{(facilityType.get('facilityTypeName').value)}}\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\">\\r\\n                                        <mat-checkbox (change)=\\\"selectAll(i,j)\\\" formControlName=\\\"selectedAll\\\">All</mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\r\\n                                        <mat-checkbox attr.for=\\\"{{ 'facilityTypeId' + k }}\\\" formControlName=\\\"isSelected\\\" (change)=\\\"checkIfAllSelected(i,j)\\\">\\r\\n                                            {{facility.get(\\\"name\\\").value}}\\r\\n                                        </mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-expansion-panel>\\r\\n            </div>\\r\\n            <!-- Food and Drinks ends -->\\r\\n            <!-- Pool and Wellness -->\\r\\n            <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === poolAndWellnessGroupId && (facilitiesGroupArray.controls[i].get('isSelected').value) === true\\\">\\r\\n                <mat-expansion-panel class=\\\"expandCollapseContainer pb-2\\\" expanded='true'>\\r\\n                    <mat-expansion-panel-header class=\\\"panelHeader\\\">\\r\\n                        <mat-panel-title>\\r\\n                            <div class=\\\"row iconHeading\\\">\\r\\n                                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\r\\n                                    <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/poolIcon.png\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-11 pl-2\\\">\\r\\n                                    <h2 attr.for=\\\"{{ 'facilityGroupId' + i }}\\\">\\r\\n                                        {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\r\\n                                    </h2>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <div class=\\\"row customeRow\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\r\\n                        <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\r\\n                            <div class=\\\"row mt-4 checkBoxList facilitiesServicesList pt-1\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <h5 class=\\\"pl-0 h5 semiboldText mb-1 w-100 d-block\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\r\\n                                        {{(facilityType.get('facilityTypeName').value)}}\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\">\\r\\n                                        <mat-checkbox (change)=\\\"selectAll(i,j)\\\" formControlName=\\\"selectedAll\\\">All</mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\r\\n                                        <mat-checkbox attr.for=\\\"{{ 'facilityTypeId' + k }}\\\" formControlName=\\\"isSelected\\\" (change)=\\\"checkIfAllSelected(i,j)\\\">\\r\\n                                            {{facility.get(\\\"name\\\").value}}\\r\\n                                        </mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-expansion-panel>\\r\\n            </div>\\r\\n            <!-- Pool and Wellness ends -->\\r\\n            <!-- Reception Services -->\\r\\n            <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === receptionServicesGroupId && (facilitiesGroupArray.controls[i].get('isSelected').value) === true\\\">\\r\\n                <mat-expansion-panel class=\\\"expandCollapseContainer pb-2\\\" expanded='true'>\\r\\n                    <mat-expansion-panel-header class=\\\"panelHeader\\\">\\r\\n                        <mat-panel-title>\\r\\n                            <div class=\\\"row iconHeading\\\">\\r\\n                                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\r\\n                                    <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/receptionIcon.png\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-11 pl-2\\\">\\r\\n                                    <h2 attr.for=\\\"{{ 'facilityGroupId' + i }}\\\">\\r\\n                                        {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\r\\n                                    </h2>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <div class=\\\"row customeRow\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\r\\n                        <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\r\\n\\r\\n                            <div class=\\\"row mt-4 checkBoxList facilitiesServicesList pt-1\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <h5 class=\\\"pl-0 h5 semiboldText mb-1 w-100 d-block\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\r\\n                                        {{(facilityType.get('facilityTypeName').value)}}\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\">\\r\\n                                        <mat-checkbox (change)=\\\"selectAll(i,j)\\\" formControlName=\\\"selectedAll\\\">All</mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\r\\n                                        <mat-checkbox attr.for=\\\"{{ 'facilityTypeId' + k }}\\\" formControlName=\\\"isSelected\\\" (change)=\\\"checkIfAllSelected(i,j)\\\">\\r\\n                                            {{facility.get(\\\"name\\\").value}}\\r\\n                                        </mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-expansion-panel>\\r\\n            </div>\\r\\n            <!-- Reception Services ends -->\\r\\n            <!-- Transport -->\\r\\n            <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === transportGroupId && (facilitiesGroupArray.controls[i].get('isSelected').value) === true\\\">\\r\\n                <mat-expansion-panel class=\\\"expandCollapseContainer pb-2\\\" expanded='true'>\\r\\n                    <mat-expansion-panel-header class=\\\"panelHeader\\\">\\r\\n                        <mat-panel-title>\\r\\n                            <div class=\\\"row iconHeading\\\">\\r\\n                                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\r\\n                                    <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/transportIcon.png\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-11 pl-2\\\">\\r\\n                                    <h2 attr.for=\\\"{{ 'facilityGroupId' + i }}\\\">\\r\\n                                        {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\r\\n                                    </h2>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <div class=\\\"row customeRow\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\r\\n                        <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\r\\n\\r\\n                            <div class=\\\"row mt-4 checkBoxList facilitiesServicesList pt-1\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <h5 class=\\\"pl-0 h5 semiboldText mb-1 w-100 d-block\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\r\\n                                        {{(facilityType.get('facilityTypeName').value)}}\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\">\\r\\n                                        <mat-checkbox (change)=\\\"selectAll(i,j)\\\" formControlName=\\\"selectedAll\\\">All</mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\r\\n                                        <mat-checkbox attr.for=\\\"{{ 'facilityTypeId' + k }}\\\" formControlName=\\\"isSelected\\\" (change)=\\\"checkIfAllSelected(i,j)\\\">\\r\\n                                            {{facility.get(\\\"name\\\").value}}\\r\\n                                        </mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-expansion-panel>\\r\\n            </div>\\r\\n            <!-- Transport Ends -->\\r\\n            <!-- Common Areas -->\\r\\n            <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === commonAreasGroupId && (facilitiesGroupArray.controls[i].get('isSelected').value) === true\\\">\\r\\n                <mat-expansion-panel class=\\\"expandCollapseContainer pb-2\\\" expanded='true'>\\r\\n                    <mat-expansion-panel-header class=\\\"panelHeader\\\">\\r\\n                        <mat-panel-title>\\r\\n                            <div class=\\\"row iconHeading\\\">\\r\\n                                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\r\\n                                    <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/commonareaIcon.png\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-11 pl-2\\\">\\r\\n                                    <h2 attr.for=\\\"{{ 'facilityGroupId' + i }}\\\">\\r\\n                                        {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\r\\n                                    </h2>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <div class=\\\"row customeRow\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\r\\n                        <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\r\\n\\r\\n                            <div class=\\\"row mt-4 checkBoxList facilitiesServicesList pt-1\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <h5 class=\\\"pl-0 h5 semiboldText mb-1 w-100 d-block\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\r\\n                                        {{(facilityType.get('facilityTypeName').value)}}\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\">\\r\\n                                        <mat-checkbox (change)=\\\"selectAll(i,j)\\\" formControlName=\\\"selectedAll\\\">All</mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\r\\n                                        <mat-checkbox attr.for=\\\"{{ 'facilityTypeId' + k }}\\\" formControlName=\\\"isSelected\\\" (change)=\\\"checkIfAllSelected(i,j)\\\">\\r\\n                                            {{facility.get(\\\"name\\\").value}}\\r\\n                                        </mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-expansion-panel>\\r\\n            </div>\\r\\n            <!-- Common Areas Ends -->\\r\\n            <!-- Entertainment and Family Services -->\\r\\n            <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === entertainmentGroupId && (facilitiesGroupArray.controls[i].get('isSelected').value) === true\\\">\\r\\n                <mat-expansion-panel class=\\\"expandCollapseContainer pb-2\\\" expanded='true'>\\r\\n                    <mat-expansion-panel-header class=\\\"panelHeader\\\">\\r\\n                        <mat-panel-title>\\r\\n                            <div class=\\\"row iconHeading\\\">\\r\\n                                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\r\\n                                    <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/entertainmentIcon.png\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-11 pl-2\\\">\\r\\n                                    <h2 attr.for=\\\"{{ 'facilityGroupId' + i }}\\\">\\r\\n                                        {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\r\\n                                    </h2>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <div class=\\\"row customeRow\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\r\\n                        <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\r\\n\\r\\n                            <div class=\\\"row mt-4 checkBoxList facilitiesServicesList pt-1\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\">\\r\\n                                    <h5 class=\\\"pl-0 h5 semiboldText mb-1 w-100 d-block\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\r\\n                                        {{(facilityType.get('facilityTypeName').value)}}\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\">\\r\\n                                        <mat-checkbox (change)=\\\"selectAll(i,j)\\\" formControlName=\\\"selectedAll\\\">All</mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\r\\n                                        <mat-checkbox attr.for=\\\"{{ 'facilityTypeId' + k }}\\\" formControlName=\\\"isSelected\\\" (change)=\\\"checkIfAllSelected(i,j)\\\">\\r\\n                                            {{facility.get(\\\"name\\\").value}}\\r\\n                                        </mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-expansion-panel>\\r\\n            </div>\\r\\n            <!-- Entertainment and Family Services ends -->\\r\\n            <!-- Cleaning Services -->\\r\\n            <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === cleaningGroupId && (facilitiesGroupArray.controls[i].get('isSelected').value) === true\\\">\\r\\n                <mat-expansion-panel class=\\\"expandCollapseContainer pb-2\\\" expanded='true'>\\r\\n                    <mat-expansion-panel-header class=\\\"panelHeader\\\">\\r\\n                        <mat-panel-title>\\r\\n                            <div class=\\\"row iconHeading\\\">\\r\\n                                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\r\\n                                    <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/cleanIcon.png\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-11 pl-2\\\">\\r\\n                                    <h2 attr.for=\\\"{{ 'facilityGroupId' + i }}\\\">\\r\\n                                        {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\r\\n                                    </h2>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <div class=\\\"row customeRow\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\r\\n                        <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\r\\n\\r\\n                            <div class=\\\"row mt-4 checkBoxList facilitiesServicesList pt-1\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <h5 class=\\\"pl-0 h5 semiboldText mb-1 w-100 d-block\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\r\\n                                        {{(facilityType.get('facilityTypeName').value)}}\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\">\\r\\n                                        <mat-checkbox (change)=\\\"selectAll(i,j)\\\" formControlName=\\\"selectedAll\\\">All</mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\r\\n                                        <mat-checkbox attr.for=\\\"{{ 'facilityTypeId' + k }}\\\" formControlName=\\\"isSelected\\\" (change)=\\\"checkIfAllSelected(i,j)\\\">\\r\\n                                            {{facility.get(\\\"name\\\").value}}\\r\\n                                        </mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-expansion-panel>\\r\\n            </div>\\r\\n            <!-- Cleaning Services ends -->\\r\\n            <!-- Business Facilities -->\\r\\n            <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === businessGroupId && (facilitiesGroupArray.controls[i].get('isSelected').value) === true\\\">\\r\\n                <mat-expansion-panel class=\\\"expandCollapseContainer pb-2\\\" expanded='true'>\\r\\n                    <mat-expansion-panel-header class=\\\"panelHeader\\\">\\r\\n                        <mat-panel-title>\\r\\n                            <div class=\\\"row iconHeading\\\">\\r\\n                                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\r\\n                                    <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/buisnessIcon.png\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-11 pl-2\\\">\\r\\n                                    <h2 attr.for=\\\"{{ 'facilityGroupId' + i }}\\\">\\r\\n                                        {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\r\\n                                    </h2>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <div class=\\\"row customeRow\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\r\\n                        <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\r\\n\\r\\n\\r\\n\\r\\n                            <div class=\\\"row mt-4 checkBoxList facilitiesServicesList pt-1\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <h5 class=\\\"pl-0 h5 semiboldText mb-1 w-100 d-block\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\r\\n                                        {{(facilityType.get('facilityTypeName').value)}}\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\">\\r\\n                                        <mat-checkbox (change)=\\\"selectAll(i,j)\\\" formControlName=\\\"selectedAll\\\">All</mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\r\\n                                        <mat-checkbox attr.for=\\\"{{ 'facilityTypeId' + k }}\\\" formControlName=\\\"isSelected\\\" (change)=\\\"checkIfAllSelected(i,j)\\\">\\r\\n                                            {{facility.get(\\\"name\\\").value}}\\r\\n                                        </mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-expansion-panel>\\r\\n            </div>\\r\\n            <!-- Business Facilities ends -->\\r\\n            <!-- Shops -->\\r\\n            <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === shopsGroupId && (facilitiesGroupArray.controls[i].get('isSelected').value) === true\\\">\\r\\n                <mat-expansion-panel class=\\\"expandCollapseContainer pb-2\\\" expanded='true'>\\r\\n                    <mat-expansion-panel-header class=\\\"panelHeader\\\">\\r\\n                        <mat-panel-title>\\r\\n                            <div class=\\\"row iconHeading\\\">\\r\\n                                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\r\\n                                    <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/shopIcon.png\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-11 pl-2\\\">\\r\\n                                    <h2 attr.for=\\\"{{ 'facilityGroupId' + i }}\\\">\\r\\n                                        {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\r\\n                                    </h2>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <div class=\\\"row customeRow\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\r\\n                        <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\r\\n\\r\\n                            <div class=\\\"row mt-4 checkBoxList facilitiesServicesList pt-1\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <h5 class=\\\"pl-0 h5 semiboldText w-100 d-block mb-1\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\r\\n                                        {{(facilityType.get('facilityTypeName').value)}}\\r\\n                                    </h5>\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\">\\r\\n                                        <mat-checkbox (change)=\\\"selectAll(i,j)\\\" formControlName=\\\"selectedAll\\\">All</mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\r\\n                                        <mat-checkbox attr.for=\\\"{{ 'facilityTypeId' + k }}\\\" formControlName=\\\"isSelected\\\" (change)=\\\"checkIfAllSelected(i,j)\\\">\\r\\n                                            {{facility.get(\\\"name\\\").value}}\\r\\n                                        </mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-expansion-panel>\\r\\n            </div>\\r\\n            <!-- Shops ends -->\\r\\n            <!-- Miscellaneous -->\\r\\n            <div [formGroupName]=\\\"i\\\" *ngIf=\\\"(facilitiesGroupArray.controls[i].get('facilityGroupId').value) === miscellaneousGroupId && (facilitiesGroupArray.controls[i].get('isSelected').value) === true\\\">\\r\\n                <mat-expansion-panel class=\\\"expandCollapseContainer pb-4\\\" expanded='true'>\\r\\n                    <mat-expansion-panel-header class=\\\"panelHeader\\\">\\r\\n                        <mat-panel-title>\\r\\n                            <div class=\\\"row iconHeading\\\">\\r\\n                                <div class=\\\"col-md-1 pr-0 iconHolder\\\">\\r\\n                                    <img alt=\\\"\\\" src=\\\"assets/FacilitiesandServicesIcon/misllaniousIcon.png\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-11 pl-2\\\">\\r\\n                                    <h2 attr.for=\\\"{{ 'facilityGroupId' + i }}\\\">\\r\\n                                        {{facilitiesGroupArray.controls[i].get(\\\"facilityGroupName\\\").value}}\\r\\n                                    </h2>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <div class=\\\"row customeRow\\\" formArrayName=\\\"hotelFacilityTypes\\\" *ngFor=\\\"let facilityType of getTypeArrayForGroup(i).controls; let j=index\\\">\\r\\n                        <div class=\\\"col-md-12\\\" [formGroupName]=\\\"j\\\">\\r\\n\\r\\n                            <div class=\\\"row mt-4 checkBoxList facilitiesServicesList pt-1\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\">\\r\\n                                    <h5 class=\\\"pl-0 h5 semiboldText mb-1 w-100 d-block\\\" attr.for=\\\"{{ 'facilityTypeId' + j }}\\\" *ngIf=\\\"(facilityType.get('facilityTypeName').value) != null\\\">\\r\\n                                        {{(facilityType.get('facilityTypeName').value)}}\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\">\\r\\n                                        <mat-checkbox (change)=\\\"selectAll(i,j)\\\" formControlName=\\\"selectedAll\\\">All</mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row mt-2 checkBoxList facilitiesServicesList\\\">\\r\\n                                <div class=\\\"col-md-4 col-lg-3\\\" formArrayName=\\\"facilityList\\\" *ngFor=\\\"let facility of getFacilityArrayForGroupAndType(i,j).controls; let k=index\\\">\\r\\n                                    <div class=\\\"form-group mb-3\\\" [formGroupName]=\\\"k\\\">\\r\\n                                        <mat-checkbox attr.for=\\\"{{ 'facilityTypeId' + k }}\\\" formControlName=\\\"isSelected\\\" (change)=\\\"checkIfAllSelected(i,j)\\\">\\r\\n                                            {{facility.get(\\\"name\\\").value}}\\r\\n                                        </mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-expansion-panel>\\r\\n            </div>\\r\\n            <!-- Miscellaneous ends -->\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"controlButtons borderTopDark paddingTop50px pb-4 mb-1\\\">\\r\\n            <button title=\\\"Save\\\" class=\\\"genericButton activeButton mat-raised-button mat-primary\\\" (click)=\\\"saveFacilities()\\\">Save</button>\\r\\n            <button title=\\\"Cancel\\\" (click)=\\\"cancelFacilities()\\\" class=\\\"genericButton defaultButton\\\">Cancel</button>\\r\\n            <button title=\\\"Continue\\\" class=\\\"genericButton activeButton mat-raised-button mat-primary float-right\\\" (click)=\\\"saveAndContinue()\\\">Save & Continue</button>\\r\\n        </div>\\r\\n\\r\\n    </form>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/hotel-info/facilities-services/facilities-services.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/hotel-info/facilities-services/facilities-services.component.html\n// module chunks = contracts.module","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EXTRANETCONSTANTS } from '../../../../common/constants';\nimport { MatSnackBar } from '@angular/material';\nimport { FormArray, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { FacilityGroupViewModel } from '../../../../viewmodel/facilitiesservicesviewmodel/facilitygroupviewmodel';\nimport { FacilityTypeViewModel } from '../../../../viewmodel/facilitiesservicesviewmodel/facilitytypeviewmodel';\nimport { ObjectState } from '../../../../../common/enums';\n// tslint:disable-next-line:max-line-length\nimport { ContractFacilitiesDataServiceService } from '../../../../common/extranet-shared/services/contracts/contract-facilities-data-service.service';\nimport { CONSTANTS } from '../../../../../common/constants';\nimport { ContractUrlNotificationService } from '../../../../common/extranet-shared/services/contracts/contract-url-notification.service';\n\nconst facilities = EXTRANETCONSTANTS.facilities;\nconst duration = CONSTANTS.toasterTimeOut.duration;\n\n@Component({\n  selector: 'app-facilities-services',\n  templateUrl: './facilities-services.component.html',\n  styleUrls: ['./facilities-services.component.css']\n})\nexport class FacilitiesServicesComponent implements OnInit {\n\n  facilityGroupList: FacilityGroupViewModel[];\n  facilitiesList: FacilityGroupViewModel[];\n  facilitiesForm: FormGroup;\n  groupIndexOfInternet = 0;\n  isFacilityExits: boolean;\n  facilityOperation: string;\n  contractId = this.route.parent.snapshot.params['id'];\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n\n  internetGroupId = facilities.facilitiesGroupIds.internetGroupId;\n  parkingGroupId = facilities.facilitiesGroupIds.parkingGroupId;\n  petsGroupId = facilities.facilitiesGroupIds.petsGroupId;\n  languagesGroupId = facilities.facilitiesGroupIds.languagesGroupId;\n  activitiesGroupId = facilities.facilitiesGroupIds.activitiesGroupId;\n  foodAndDrinkGroupId = facilities.facilitiesGroupIds.foodAndDrinkGroupId;\n  poolAndWellnessGroupId = facilities.facilitiesGroupIds.poolAndWellnessGroupId;\n  receptionServicesGroupId = facilities.facilitiesGroupIds.receptionServicesGroupId;\n  transportGroupId = facilities.facilitiesGroupIds.transportGroupId;\n  commonAreasGroupId = facilities.facilitiesGroupIds.commonAreasGroupId;\n  entertainmentGroupId = facilities.facilitiesGroupIds.entertainmentGroupId;\n  cleaningGroupId = facilities.facilitiesGroupIds.cleaningGroupId;\n  businessGroupId = facilities.facilitiesGroupIds.businessGroupId;\n  shopsGroupId = facilities.facilitiesGroupIds.shopsGroupId;\n  miscellaneousGroupId = facilities.facilitiesGroupIds.miscellaneousGroupId;\n\n  isInternetAvailableTypeId = facilities.facilitiesTypeId.isInternetAvailableTypeId;\n  connectionTypeTypeId = facilities.facilitiesTypeId.connectionTypeTypeId;\n  connectionLocationTypeId = facilities.facilitiesTypeId.connectionLocationTypeId;\n  isParkingAvailableTypeId = facilities.facilitiesTypeId.isParkingAvailableTypeId;\n  reserveParkingTypeId = facilities.facilitiesTypeId.reserveParkingTypeId;\n  petsAllowedTypeId = facilities.facilitiesTypeId.petsAllowedTypeId;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              public snackBar: MatSnackBar,\n              public contractFacilitiesDataServiceService: ContractFacilitiesDataServiceService,\n              private activatedRoute: ActivatedRoute,\n              public contractUrlNotificationService: ContractUrlNotificationService\n            ) {\n                contractUrlNotificationService.changeURLRoute(activatedRoute.snapshot.url[0].path);\n               }\n\n  ngOnInit() {\n    this.getFacilitiesServices();\n    window.scrollTo(0, 0);\n\n    this.contractFacilitiesDataServiceService.isContractFacilityExits(this.contractId).subscribe( isFacilityExits => {\n      this.isFacilityExits = isFacilityExits.result;\n      if (this.isFacilityExits === false) {\n        this.facilityOperation = this.create;\n      } else {\n        this.facilityOperation = this.edit;\n      }\n    });\n  }\n\n  getFacilitiesServices() {\n    this.facilityGroupList = this.route.snapshot.data['contractFacilityData'];\n\n    this.facilitiesForm = new FormGroup({\n      facilitiesGroupArray: this.buildFacilityGroupsForm(this.facilityGroupList)\n    });\n\n    // To disable dropdown if internet connection is NO\n    let isInternet = null;\n    this.getTypeArrayForGroup(this.groupIndexOfInternet).controls.forEach(facilityTypeControl => {\n      if (facilityTypeControl.value.facilityTypeId === 1) {\n        const facilitySelected = facilityTypeControl.value.selectedFacilityId;\n        facilityTypeControl.value.facilityList.forEach(facility => {\n          if (facility.id === +(facilitySelected)) {\n            if (facility.name === 'No') {\n              isInternet = 'No';\n            } else {\n              isInternet = 'Yes';\n            }\n          }\n        });\n      }\n      if (isInternet === 'No') {\n        if (facilityTypeControl.value.facilityTypeId === this.connectionTypeTypeId ||\n                      facilityTypeControl.value.facilityTypeId === this.connectionLocationTypeId) {\n          facilityTypeControl.disable();\n        }\n      }\n    });\n    // To disable dropdown if internet connection is NO Ends\n  }\n\n  get facilitiesGroupArray(): FormArray{\n    return <FormArray>this.facilitiesForm.get('facilitiesGroupArray');\n  }\n\n  getTypeArrayForGroup(groupIndex: number): FormArray {\n      return <FormArray>this.facilitiesGroupArray.controls[groupIndex].get('hotelFacilityTypes');\n  }\n\n  getFacilityArrayForGroupAndType(groupIndex: number , typeIndex: number) {\n    return <FormArray> this.getTypeArrayForGroup(groupIndex).controls[typeIndex].get('facilityList');\n  }\n\n  buildFacilityGroupsForm(facilityGroups: FacilityGroupViewModel[]): FormArray {\n    let groupFormGroup: FormGroup;\n    let groupFormArray: FormArray;\n\n    facilityGroups.forEach(facilityGroup => {\n      groupFormGroup = new FormGroup({\n        facilityGroupId: new FormControl(facilityGroup.facilityGroupId),\n        facilityGroupName: new FormControl(facilityGroup.facilityGroupName),\n        isSelected: new FormControl(facilityGroup.isSelected),\n        hotelFacilityTypes : this.buildFacilityTypesForm(facilityGroup)\n      });\n      if (groupFormArray === null || groupFormArray === undefined) {\n        groupFormArray = new FormArray([groupFormGroup]);\n      } else {\n        groupFormArray.push(groupFormGroup);\n      }\n    });\n\n    return groupFormArray;\n  }\n\n  buildFacilityTypesForm(facilityGroup: FacilityGroupViewModel): FormArray {\n    let typeFormGroup: FormGroup;\n    let typeFormArray: FormArray;\n\n    facilityGroup.hotelFacilityTypes.forEach(facilityType => {\n      typeFormGroup = new FormGroup({\n        facilityTypeId: new FormControl(facilityType.facilityTypeId),\n        facilityGroupId: new FormControl(facilityType.facilityGroupId),\n        facilityTypeName: new FormControl(facilityType.facilityTypeName),\n        selectedAll: new FormControl(false),\n        selectedFacilityId: new FormControl,\n        multiSelectedFacilityIds: new FormControl,\n        facilityList : this.buildFacilitiesForm(facilityType)\n      });\n\n\n      // for single select dropdowns\n      if (facilityType.facilityTypeId === this.isInternetAvailableTypeId ||\n          facilityType.facilityTypeId === this.connectionTypeTypeId ||\n          facilityType.facilityTypeId === this.connectionLocationTypeId ||\n          facilityType.facilityTypeId === this.isParkingAvailableTypeId ||\n          facilityType.facilityTypeId === this.reserveParkingTypeId ||\n          facilityType.facilityTypeId === this.petsAllowedTypeId) {\n        facilityType.facilityList.forEach(facility => {\n          if (facility.isSelected === true) {\n            typeFormGroup.patchValue({\n              selectedFacilityId: String(facility.id)\n            });\n          }\n        });\n      }\n\n      const selectedAll = facilityType.facilityList.every(function (item: any){\n        return item.isSelected === true;\n      });\n      typeFormGroup.patchValue({\n        selectedAll: selectedAll\n      });\n\n      // for multi select dropdown\n      if (facilityGroup.facilityGroupId === this.languagesGroupId) {\n        const multiselectedFacilityIds = [];\n        facilityType.facilityList.forEach(facility => {\n          if (facility.isSelected === true) {\n            multiselectedFacilityIds.push(String(facility.id));\n            typeFormGroup.patchValue({\n              multiSelectedFacilityIds: multiselectedFacilityIds\n            });\n          }\n        });\n      }\n\n      if (typeFormArray === null || typeFormArray === undefined) {\n        typeFormArray = new FormArray([typeFormGroup]);\n      } else {\n        typeFormArray.push(typeFormGroup);\n      }\n    });\n    return typeFormArray;\n  }\n\n  buildFacilitiesForm(facilityType: FacilityTypeViewModel): FormArray {\n    let facilityFormGroup: FormGroup;\n    let facilityFormArray: FormArray;\n\n    facilityType.facilityList.forEach(facility => {\n      facilityFormGroup = new FormGroup({\n        facilityRelationId: new FormControl(facility.facilityRelationId),\n        id: new FormControl(facility.id),\n        name: new FormControl(facility.name),\n        facilityTypeId: new FormControl(facility.facilityTypeId),\n        facilityGroupId: new FormControl(facility.facilityGroupId),\n        isSelected: new FormControl(facility.isSelected)\n      });\n      if (facilityFormArray === null || facilityFormArray === undefined) {\n        facilityFormArray = new FormArray([facilityFormGroup]);\n      } else {\n        facilityFormArray.push(facilityFormGroup);\n      }\n\n    });\n\n    return facilityFormArray;\n  }\n\n  selectAll(facilityGroupIndex, facilityTypeIndex) {\n      this.getFacilityArrayForGroupAndType(facilityGroupIndex, facilityTypeIndex).controls.forEach\n      ( facility => {\n        facility.patchValue({\n          isSelected: this.facilitiesForm.value.facilitiesGroupArray[facilityGroupIndex].\n                              hotelFacilityTypes[facilityTypeIndex].selectedAll\n        });\n      });\n  }\n  checkIfAllSelected(facilityGroupIndex, facilityTypeIndex) {\n    this.getTypeArrayForGroup(facilityGroupIndex).controls.forEach((facilityType, i) => {\n      if (facilityTypeIndex === i) {\n        facilityType.patchValue({\n          selectedAll: this.facilitiesForm.value.facilitiesGroupArray[facilityGroupIndex].\n                    hotelFacilityTypes[facilityTypeIndex].facilityList.every(function (item: any) {\n                        return item.isSelected === true;\n                         })\n        });\n      }\n    });\n  }\n\n  saveFacilities() {\n\n    this.updateFacilitiesList();\n\n    const saveContractFacilities = {\n      facilityGroupList: this.facilitiesList,\n      contractId: this.contractId\n    };\n\n    this.contractFacilitiesDataServiceService.addContractFacilities(saveContractFacilities as any)\n        .subscribe(data => {\n          this.router.navigate(['/contractmgmt/contracts']);\n          this.snackBar.open('Contract Facilities & Services Saved Successfully', '',\n                     { duration: duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n          window.scrollTo(0, 0);\n        }\n      );\n  }\n\n  saveAndContinue() {\n\n    this.updateFacilitiesList();\n\n    const saveContractFacilities = {\n      facilityGroupList: this.facilitiesList,\n      contractId: this.contractId\n    };\n\n    this.contractFacilitiesDataServiceService.addContractFacilities(saveContractFacilities as any)\n        .subscribe(data => {\n          this.router.navigate(['contractmgmt/contract', this.contractId, this.edit, 'roomtypelist']);\n          this.snackBar.open('Contract Facilities & Services Saved Successfully', '',\n                     { duration: duration, verticalPosition: 'top', panelClass: 'showSnackBar'});\n          window.scrollTo(0, 0);\n        }\n      );\n  }\n\n  updateFacilitiesList() {\n    // to convert dropdown facilities in true or false\n    this.facilitiesForm.value.facilitiesGroupArray.forEach(facilityGroup => {\n      facilityGroup.hotelFacilityTypes.forEach(facilityType => {\n        if (facilityType.selectedFacilityId != null) {\n          facilityType.facilityList.forEach(facility => {\n            if (facility.id === +(facilityType.selectedFacilityId)) {\n              facility.isSelected = true;\n            } else {\n              facility.isSelected = false;\n            }\n          });\n        } else if (facilityType.multiSelectedFacilityIds != null) {\n          facilityType.facilityList.forEach(facility => {\n            facility.isSelected = false;\n          });\n          facilityType.multiSelectedFacilityIds.forEach(selectedId => {\n            facilityType.facilityList.forEach(facility => {\n              if (facility.id === +(selectedId)) {\n                facility.isSelected = true;\n              }\n            });\n          });\n        }\n      });\n    });\n\n    this.facilitiesList = Object.assign([], this.facilityGroupList, this.facilitiesForm.value.facilitiesGroupArray);\n\n    this.updateObjectState();\n\n  }\n\n  updateObjectState() {\n    if (this.facilityOperation === this.create) {\n      this.facilitiesList.forEach(grp => {\n        grp.hotelFacilityTypes.forEach(type => {\n          type.facilityList.forEach(facility => {\n            if (facility.isSelected) {\n              facility.objectState = ObjectState.Added;\n            } else {\n              facility.objectState = ObjectState.Unchanged;\n            }\n          });\n        });\n      });\n    } else if (this.facilityOperation === this.edit) {\n      this.facilitiesList.forEach((grp, i) => {\n        grp.hotelFacilityTypes.forEach((type, j) => {\n          type.facilityList.forEach((facility, k) => {\n            if (facility.isSelected !== this.checkOriginalObjectState(i, j, k)) {\n              if (facility.isSelected) {\n                facility.objectState = ObjectState.Added;\n              } else {\n                facility.objectState = ObjectState.Deleted;\n              }\n            } else {\n              facility.objectState = ObjectState.Unchanged;\n            }\n          });\n        });\n      });\n    }\n  }\n\n  checkOriginalObjectState(grpindex: number, typeindex: number, facilityindex: number): boolean {\n    return this.facilityGroupList[grpindex].hotelFacilityTypes[typeindex].\n    facilityList[facilityindex].isSelected;\n  }\n\n  cancelFacilities() {\n    this.router.navigate(['/contractmgmt/contracts']);\n    window.scrollTo(0, 0);\n  }\n\n  isInternetDropdownChange(event) {\n      // 2 is for 'NO'\n      if (+(event.value) === 2) {\n          this.getTypeArrayForGroup(this.groupIndexOfInternet).controls.forEach(facilityTypeControl => {\n            if (facilityTypeControl.value.facilityTypeId === this.connectionTypeTypeId ||\n                                  facilityTypeControl.value.facilityTypeId === this.connectionLocationTypeId) {\n              facilityTypeControl.disable();\n              facilityTypeControl.patchValue({\n                selectedFacilityId : null\n              });\n            }\n          });\n      } else {\n        this.getTypeArrayForGroup(this.groupIndexOfInternet).controls.forEach(facilityTypeControl => {\n            if (facilityTypeControl.value.facilityTypeId === this.connectionTypeTypeId ||\n                               facilityTypeControl.value.facilityTypeId === this.connectionLocationTypeId) {\n              facilityTypeControl.enable();\n            }\n        });\n      }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/hotel-info/facilities-services/facilities-services.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".form-group {\\r\\n    display: inline-block;\\r\\n  }\\r\\n  \\r\\n  .amt {\\r\\n    width: 50%;\\r\\n    display: inline-block;\\r\\n  }\\r\\n  \\r\\n  .buttons {\\r\\n    float: right;\\r\\n    margin-bottom: 15px;\\r\\n  }\\r\\n  \\r\\n  .mapLocator {\\r\\n    position: relative;\\r\\n  }\\r\\n  \\r\\n    .mapLocator .input-group-addon {\\r\\n      position: absolute;\\r\\n      right: 0;\\r\\n      top: 2px;\\r\\n      background: none;\\r\\n      border: none;\\r\\n      cursor: pointer;\\r\\n      padding: 0;\\r\\n    }\\r\\n  \\r\\n    .mapLocator .input-group-addon button{\\r\\n      background: none;\\r\\n      border: none;\\r\\n    }\\r\\n\\r\\n\\r\\n    .customFileUpload input[type=\\\"file\\\"]{\\r\\n      border: 1px solid #29b6f6;\\r\\n      padding: 7px 10px;\\r\\n    }\\r\\n  \\r\\n      .mapLocator .input-group-addon .fa {\\r\\n        color: #29aae2;\\r\\n        font-size: 1.2rem;\\r\\n      }\\r\\n  \\r\\n    .mapLocator .form-control {\\r\\n      padding-right: 34px;\\r\\n    }\\r\\n  \\r\\n  .custom-select {\\r\\n  }\\r\\n  \\r\\n  .table td, .table th {\\r\\n    vertical-align: middle;\\r\\n  }\\r\\n  \\r\\n  .table th {\\r\\n    border-bottom: 0;\\r\\n  }\\r\\n  \\r\\n  .typeLabel {\\r\\n    font-size: 0.875rem;\\r\\n    color: #666;\\r\\n  }\\r\\n  \\r\\n  .taxtesTypeTh {\\r\\n    width: 16.7%;\\r\\n  }\\r\\n  \\r\\n  .taxtesRoomTh {\\r\\n    width: 21.0%;\\r\\n  }\\r\\n  \\r\\n  .taxtesAmountTh {\\r\\n    width: 10.5%;\\r\\n  }\\r\\n  \\r\\n  .taxtesRatesTh {\\r\\n    width: 10.5%;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  td.taxesLabel .mat-form-field{\\r\\n    width: 70%;\\r\\n  }\\r\\n  \\r\\n  .taxesAmountLabel .percentageIcon{\\r\\n    position: absolute;\\r\\n    right: -20px;\\r\\n    top: 10px;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  .primaryContactTh{\\r\\n    width: 5%;\\r\\n  }\\r\\n  \\r\\n  .contactContactTh{\\r\\n    width: 22%;\\r\\n  }\\r\\n  \\r\\n  .titleContactTh{\\r\\n    width: 25.2%;\\r\\n  }\\r\\n  \\r\\n  .emailContactTh{  \\r\\n    width: 28.2%;\\r\\n  }\\r\\n  \\r\\n  .contactNumberContactTh{\\r\\n    width: 27.9%;  \\r\\n  }\\r\\n  \\r\\n  .addContact{\\r\\n    position: relative;\\r\\n  }\\r\\n  \\r\\n  .addContact .btn.buttonStacked{\\r\\n    position: absolute;\\r\\n    right: 0;\\r\\n    top: 25px;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  .addContact .text-primary{\\r\\n    color: #29aae2 !important;\\r\\n  }\\r\\n  \\r\\n  .contactTable td .mat-form-field{\\r\\n    width: 70%;\\r\\n  }\\r\\n  \\r\\n  .fileUploaded{\\r\\n    color: green;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/hotel-info/hotel-details/hotel-details.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/hotel-info/hotel-details/hotel-details.component.css\n// module chunks = contracts.module","module.exports = \"<!-- <form [formGroup]=\\\"hotelDetailsContractGroup\\\"> -->\\n<!-- <input matInput placeholder=\\\"contractNameEntered\\\" formControlName=\\\"contractNameEntered\\\" style=\\\"    visibility: hidden\\\"/>\\n<input matInput placeholder=\\\"startDate\\\" formControlName=\\\"startDate\\\" style=\\\" visibility: hidden\\\"/>\\n<input matInput placeholder=\\\"EndDate\\\" formControlName=\\\"endDate\\\" style=\\\"visibility: hidden\\\"/> -->\\n\\n\\n<div class=\\\"container-fluid\\\">\\n  <h1 class=\\\"mainHeading mb-4 customBreadcrumb\\\">Hotel Info</h1>\\n  <form [formGroup]=\\\"hotelDetailsContractGroup\\\">\\n    <input class=\\\"d-none\\\" matInput placeholder=\\\"contractNameEntered\\\" formControlName=\\\"contractNameEntered\\\" style=\\\"visibility: hidden\\\"/>\\n    <input class=\\\"d-none\\\" matInput placeholder=\\\"startDate\\\" formControlName=\\\"startDate\\\" style=\\\" visibility: hidden\\\" />\\n    <input class=\\\"d-none\\\" matInput placeholder=\\\"EndDate\\\" formControlName=\\\"endDate\\\" style=\\\"visibility: hidden\\\" />\\n\\n    <div class=\\\"formSections pt-3 pb-4 borderBottomNone\\\" *ngIf=\\\"isSelectedName || isSelectedChain || isSelectedBrand || isSelectedType || isSelectedStarRating || isSelectedMgPoints\\\">\\n      <h5 class=\\\"semiBold mb-5\\\">Hotel Details</h5>\\n      <div class=\\\"row customeRow\\\">\\n\\n        <div class=\\\"form-group col-md-4 col-lg-3 serachField\\\" *ngIf=\\\"isSelectedName\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Search by Name\\\" formControlName=\\\"hotelName\\\" [matAutocomplete]=\\\"auto\\\" required />\\n\\n            <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n              <mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option.name\\\" (onSelectionChange)=\\\"searchHotel($event, option.id)\\\">\\n                {{ option.name }}\\n              </mat-option>\\n            </mat-autocomplete>\\n            <!-- <button type=\\\"submit\\\" class=\\\"searchButton\\\">\\n            <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n          </button> -->\\n            <i aria-hidden=\\\"true\\\" class=\\\"fa fa-search\\\"></i>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"form-group col-md-4 col-lg-3\\\" *ngIf=\\\"isSelectedChain\\\">\\n          <mat-form-field>\\n            <mat-select formControlName=\\\"hotelChainId\\\" placeholder=\\\"Chain\\\" disabled>\\n              <mat-option *ngFor=\\\"let chain of hotelChainList\\\" [value]=\\\"chain.hotelChainId\\\">{{chain.hotelChainName}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"form-group col-md-4 col-lg-3\\\" *ngIf=\\\"isSelectedBrand\\\">\\n          <mat-form-field>\\n            <mat-select formControlName=\\\"hotelBrandId\\\" placeholder=\\\"Brand\\\" disabled>\\n              <mat-option *ngFor=\\\"let brand of hotelBrandList\\\" [value]=\\\"brand.hotelBrandId\\\">{{brand.hotelBrandName}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"form-group  col-md-4 col-lg-3\\\" *ngIf=\\\"isSelectedType\\\">\\n          <mat-form-field>\\n            <mat-select formControlName=\\\"hotelTypeId\\\" placeholder=\\\"Type\\\" required disabled>\\n              <mat-option *ngFor=\\\"let type of hotelTypeList\\\" [value]=\\\"type.hotelTypeId\\\">{{type.hotelTypeName}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\" *ngIf=\\\"isSelectedTotalNumberOfRooms\\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Number of Rooms\\\" pattern=\\\"^[0-9]*$\\\" formControlName=\\\"totalNumberOfRooms\\\" required readonly/>\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"form-group  col-md-4 col-lg-3\\\" *ngIf=\\\"isSelectedStarRating\\\">\\n        <mat-form-field>\\n          <mat-select formControlName=\\\"starRatingId\\\" placeholder=\\\"Star Rating\\\" required disabled>\\n            <mat-option *ngFor=\\\"let starRating of starRatingList\\\" [value]=\\\"starRating.hotelStarRatingId\\\">{{starRating.hotelStarRatingName}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"form-group  col-md-4 col-lg-3\\\" *ngIf=\\\"isSelectedMgPoints\\\">\\n        <mat-form-field>\\n          <input  matInput formControlName=\\\"mgPoint\\\" placeholder=\\\"MG Points\\\" type=\\\"number\\\" min=\\\"1\\\" max=\\\"99\\\" readonly>\\n        </mat-form-field>\\n      </div>\\n\\n\\n\\n      </div>\\n      <!-- Form section cosed-->\\n    </div>\\n    <!-- Row div cosed-->\\n\\n    <div class=\\\"formSections pt-5 pb-4 borderTop\\\" *ngIf=\\\"isSelectedAddress1 || isSelectedAddress2 || isSelectedCountry || isSelectedCity || isSelectedZip || isSelectedLatLong\\\">\\n      <div class=\\\"row customeRow\\\">\\n        <div class=\\\"form-group  col-md-4 col-lg-3\\\" *ngIf=\\\"isSelectedAddress1\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Address 1\\\" formControlName=\\\"address1\\\" maxlength=\\\"500\\\" required readonly/>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"form-group  col-md-4 col-lg-3\\\" *ngIf=\\\"isSelectedAddress2\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Address 2\\\" formControlName=\\\"address2\\\" maxlength=\\\"500\\\" readonly/>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"form-group  col-md-4 col-lg-3\\\" *ngIf=\\\"isSelectedCountry\\\">\\n          <mat-form-field>\\n            <mat-select formControlName=\\\"countryId\\\" placeholder=\\\"Country\\\" required disabled>\\n              <mat-option *ngFor=\\\"let country of countriesList\\\" [value]=\\\"country.countryId\\\">{{country.countryName}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"form-group  col-md-4 col-lg-3\\\" *ngIf=\\\"isSelectedCity\\\">\\n          <mat-form-field>\\n            <mat-select formControlName=\\\"cityId\\\" placeholder=\\\"City\\\" required disabled>\\n              <mat-option *ngFor=\\\"let city of citiesList\\\" [value]=\\\"city.cityId\\\">{{city.cityName}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"form-group  col-md-4 col-lg-3\\\" *ngIf=\\\"isSelectedZip\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Zipcode\\\" formControlName=\\\"zipCode\\\" maxlength=\\\"7\\\" required readonly/>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"col-md-4 col-lg-3\\\" *ngIf=\\\"isSelectedLatLong\\\">\\n          <div class=\\\"mapLocator\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Latitude / Longitude\\\" formControlName=\\\"latLong\\\" required readonly />\\n              <span class=\\\"input-group-addon\\\">\\n                <button class=\\\"\\\">\\n                  <i _ngcontent-c24=\\\"\\\" aria-hidden=\\\"true\\\" class=\\\"fa fa-map-marker\\\"></i>\\n                </button>\\n              </span>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n\\n\\n\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"formSections pb-4 pt-4\\\" *ngIf=\\\"isSelectedShortDescription || isSelectedLongDescription\\\">\\n      <div class=\\\"row mt-3 customeRow\\\" *ngIf=\\\"isSelectedShortDescription\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <mat-form-field>\\n            <textarea matInput formControlName=\\\"shortDescription\\\" placeholder=\\\"Hotel Short Description\\\" rows=\\\"5\\\" cols=\\\"200\\\" maxlength=\\\"500\\\"\\n              required readonly></textarea>\\n          </mat-form-field>\\n          <p class=\\\"small text-right lightGrey\\\">Max. 500 characters</p>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"row mt-3 customeRow\\\" *ngIf=\\\"isSelectedLongDescription\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <mat-form-field>\\n            <textarea matInput formControlName=\\\"longDescription\\\" placeholder=\\\"Hotel Long Description\\\" rows=\\\"5\\\" cols=\\\"70\\\" maxlength=\\\"1200\\\"\\n              readonly></textarea>\\n          </mat-form-field>\\n          <p class=\\\"small text-right lightGrey\\\">Max. 1200 characters</p>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"formSections pb-0 pt-5\\\" *ngIf=\\\"isSelectedCheckinCheckout\\\">\\n\\n\\n      <div class=\\\"row  mt-0 customeRow pb-4 customeRow\\\">\\n        <div class=\\\"col-md-4 checkInCheckoutBorderRight form-group col-lg-3\\\">\\n          <div class=\\\"row customeRow mb-4\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <h5 class=\\\"requiredLabel semiBold mb-4\\\">Check-in</h5>\\n            </div>\\n          </div>\\n          <div class=\\\"row customeRow\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"From\\\" formControlName=\\\"checkInFrom\\\" required disabled>\\n                  <mat-option *ngFor=\\\"let checkinfrom of checkInCheckOut\\\" [value]=\\\"checkinfrom.Value\\\">{{checkinfrom.Value}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-4 form-group col-lg-3\\\">\\n          <div class=\\\"row customeRow pr-5 mb-4\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <h5 class=\\\"requiredLabel semiBold mb-4\\\">Check-out</h5>\\n            </div>\\n          </div>\\n          <div class=\\\"row customeRow\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"To\\\" formControlName=\\\"checkOutTo\\\" disabled required>\\n                  <mat-option *ngFor=\\\"let checkoutto of checkInCheckOut\\\" [value]=\\\"checkoutto.Value\\\">{{checkoutto.Value}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  <div *ngIf=\\\"isSelectedContactDetails\\\">\\n    <div class=\\\"formSections pb-0 borderBottomNone pt-5 paddingRight15px\\\">\\n      <h2 class=\\\"pb-1\\\">Contact Details</h2>\\n      <div class=\\\"row mt-4\\\">\\n        <div class=\\\"form-group col-md-12 mb-0\\\">\\n          <table class=\\\"table genericTable borderTopZero mb-0 contactTable\\\">\\n            <thead>\\n              <tr>\\n                <th class=\\\"border-top-0 primaryContactTh\\\">Set as Primary</th>\\n                <th class=\\\"border-top-0 contactContactTh\\\">Contact Person</th>\\n                <th class=\\\"border-top-0 titleContactTh\\\">Designation</th>\\n                <th class=\\\"border-top-0 emailContactTh\\\">Email</th>\\n                <th class=\\\"border-top-0 contactNumberContactTh\\\">Contact Number</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <ng-container formArrayName=\\\"contactDetails\\\" *ngFor=\\\"let contact of contactDetails.controls; let i =index\\\">\\n                <ng-container [formGroupName]=\\\"i\\\">\\n                  <tr>\\n                    <td class=\\\"align-middle\\\">\\n                      <mat-radio-group formControlName=\\\"rowSelected\\\">\\n                        <mat-radio-button [value]=\\\"i\\\" disabled></mat-radio-button>\\n                      </mat-radio-group>\\n                    </td>\\n                    <td>\\n                      <mat-form-field>\\n                        <input matInput formControlName=\\\"contactPerson\\\" placeholder=\\\"\\\" [readonly]=\\\"i === rowSelected\\\" [required]=\\\"i === rowSelected\\\" (change)=\\\"flagContactDetailsAsEdited(i)\\\"/>\\n                      </mat-form-field>\\n                    </td>\\n                    <td>\\n                      <mat-form-field>\\n                        <mat-select placeholder=\\\"\\\" formControlName=\\\"designationId\\\" [disabled]=\\\"i === rowSelected\\\" required (change)=\\\"flagContactDetailsAsEdited(i)\\\">\\n                          <mat-option [value]=\\\"null\\\">Select</mat-option>\\n                          <mat-option *ngFor=\\\"let contactTitle of contactPersonTitleList\\\" [value]=\\\"contactTitle.designationId\\\">{{contactTitle.title}}</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                    </td>\\n                    <td>\\n                      <mat-form-field>\\n                        <input matInput placeholder=\\\"\\\" formControlName=\\\"emailAddress\\\" type=\\\"email\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"\\n                          [readonly]=\\\"i === rowSelected\\\" required (change)=\\\"flagContactDetailsAsEdited(i)\\\"/>\\n                      </mat-form-field>\\n                    </td>\\n                    <td class=\\\"addContact\\\">\\n                      <mat-form-field>\\n                        <input matInput placeholder=\\\"\\\" formControlName=\\\"contactNumber\\\" pattern=\\\"[0-9+-]*\\\" maxlength=\\\"18\\\" [readonly]=\\\"i === rowSelected\\\"\\n                          required (change)=\\\"flagContactDetailsAsEdited(i)\\\"/>\\n                      </mat-form-field>\\n\\n                      <ng-container *ngIf=\\\"i === (contactDetails.controls.length - 1)\\\">\\n                        <button title=\\\"Add\\\" type=\\\"button\\\" class=\\\"buttonStacked\\\" mat-raised-button (click)=\\\"addContact()\\\"><span class=\\\"fa-stack\\\">\\n                        <i class=\\\"fa fa-circle-thin fa-stack-2x text-primary\\\"></i>\\n                        <i class=\\\"fa fa-plus fa-stack-1x fa-inverse text-primary\\\"></i>\\n                      </span></button>\\n                      </ng-container>\\n                    </td>\\n                  </tr>\\n                </ng-container>\\n              </ng-container>\\n            </tbody>\\n          </table>\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n    <div class=\\\"formSections pb-4 pt-4\\\">\\n      <div class=\\\"row customeRow\\\">\\n        <div class=\\\"form-group col-md-4  col-lg-3\\\">\\n          <mat-form-field>\\n            <input matInput formControlName=\\\"website\\\" placeholder=\\\"Website\\\" pattern=\\\"(\\\\w*\\\\W*)?\\\\w*(\\\\.(\\\\w)+)+(\\\\W\\\\d+)?(\\\\/\\\\w*(\\\\W*\\\\w)*)*\\\" (change)=\\\"flagHotelDetailsAsEdited()\\\" required/>\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"form-group col-md-4  col-lg-3\\\">\\n          <mat-form-field>\\n            <input matInput formControlName=\\\"reservationEmail\\\" placeholder=\\\"Email (Reservation)\\\" pattern=\\\"\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+\\\\.\\\\w+(,\\\\s*\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+\\\\.\\\\w+)*\\\" (change)=\\\"flagHotelDetailsAsEdited()\\\" required/>\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"form-group col-md-4  col-lg-3\\\">\\n          <mat-form-field>\\n            <input matInput formControlName=\\\"reservationContactNo\\\" placeholder=\\\"Telephone (Reservation)\\\" type=\\\"tel\\\" pattern=\\\"[0-9+-]+(,\\\\s*[0-9+-]+)*\\\" (change)=\\\"flagHotelDetailsAsEdited()\\\" required/>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"formSections pb-1 pt-5\\\" formGroupName=\\\"hotelPaymentMethodRelation\\\" *ngIf=\\\"contractType === mgStatic && isSelectedPaymentDetails\\\">\\n    <h2>Payment Details</h2>\\n    <label for=\\\"paymentMethod\\\" class=\\\"d-block semiBold mb-3 mt-4 pt-2\\\">Payment Method</label>    \\n    <div class=\\\"row alignItemCenter pb-4 customeRow\\\">\\n      <div class=\\\"col-md-4  col-lg-4\\\">\\n        <div class=\\\"row customeRow\\\">\\n          <!-- <label for=\\\"paymentMethod\\\" class=\\\"d-block\\\">Payment Method</label> -->\\n          <div class=\\\"col-md-12\\\">\\n            <mat-radio-group formControlName=\\\"paymentMethodId\\\" class=\\\"row\\\" (change)=\\\"flagPaymentDetailsAsEdited()\\\">\\n              <mat-radio-button *ngFor=\\\"let paymentMethod of paymentMethodList\\\" class=\\\"col-md-6 pl-0\\\" [value]=\\\"paymentMethod.id\\\">{{paymentMethod.name}}</mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col-md-4  col-lg-4\\\">\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Currency\\\" formControlName=\\\"currencyId\\\" (change)=\\\"flagPaymentDetailsAsEdited()\\\" required>\\n            <mat-option [value]=\\\"null\\\">Select</mat-option>\\n            <mat-option *ngFor=\\\"let currency of currencyList\\\" [value]=\\\"currency.currencyId\\\">{{currency.currencyName}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"col-md-4  col-lg-4\\\">\\n        <label class=\\\"d-block mb-4\\\">Rate Type</label>\\n        <div class=\\\"row customeRow\\\">\\n          <div class=\\\"col-md-12 pl-0 ml-3\\\">\\n            <mat-radio-group formControlName=\\\"rateTypeId\\\" class=\\\"row\\\" (change)=\\\"flagPaymentDetailsAsEdited()\\\">\\n              <mat-radio-button *ngFor=\\\"let rateType of rateTypeList\\\" class=\\\"col-md-3\\\" [value]=\\\"rateType.id\\\">{{rateType.name}}</mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n        </div>\\n      </div>\\n\\n      </div>\\n    </div>\\n\\n  <div class=\\\"formSections pt-5\\\" *ngIf=\\\"contractType === mgStatic && isSelectedExtranetDetails\\\">\\n    <h2>Extranet Details</h2>\\n    <div class=\\\"row mt-4 pt-2 pb-2 customeRow\\\">\\n      <div class=\\\"form-group col-md-4  col-lg-4  mb-0\\\">\\n        <p>Extranet Account Access</p>\\n        <mat-button-toggle-group formControlName=\\\"isExtranetAccess\\\" (change)=\\\"flagHotelDetailsAsEdited()\\\">\\n          <mat-button-toggle [value]=\\\"true\\\">\\n            Yes\\n          </mat-button-toggle>\\n          <mat-button-toggle [value]=\\\"false\\\">\\n            No\\n          </mat-button-toggle>\\n        </mat-button-toggle-group>\\n      </div>\\n      <div class=\\\"form-group col-md-4  col-lg-4  mb-0\\\">\\n        <p>Channel Manager Connectivity</p>\\n        <mat-button-toggle-group formControlName=\\\"isChannelManagerConnectivity\\\" #channelManagerGroup=\\\"matButtonToggleGroup\\\" (change)=\\\"isChannelManager(channelManagerGroup.value)\\\">\\n          <mat-button-toggle [value]=\\\"true\\\">\\n            Yes\\n          </mat-button-toggle>\\n          <mat-button-toggle [value]=\\\"false\\\">\\n            No\\n          </mat-button-toggle>\\n        </mat-button-toggle-group>\\n      </div>\\n      <div class=\\\"form-group col-md-4 mb-0\\\">\\n        <mat-form-field class=\\\"mt-4\\\">\\n          <mat-select placeholder=\\\"Channel Manager\\\" formControlName=\\\"channelManagerId\\\" (change)=\\\"flagHotelDetailsAsEdited()\\\" required>\\n            <mat-option *ngFor=\\\"let channelManager of channelManagerList\\\" [value]=\\\"channelManager.id\\\">{{channelManager.channelManager}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"pt-5 pb-4 paddingRight15px\\\" *ngIf=\\\"contractType === mgStatic && isSelectedTaxes\\\">\\n    <h2>Taxes</h2>\\n    <p>\\n      Rates will be considered all INCLUSIVE unless the below section is completed\\n    </p>\\n    <table class=\\\"table genericTable mb-4\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"taxtesTypeTh\\\">Type</th>\\n          <th class=\\\"taxtesRoomTh\\\">Per Room/Person</th>\\n          <th class=\\\"taxtesAmountTh\\\">Amount</th>\\n          <th class=\\\"taxtesRatesTh\\\">Included in Rates</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <ng-container formArrayName=\\\"taxDetails\\\" *ngFor=\\\"let tax of taxDetails.controls; let i =index\\\">\\n          <ng-container [formGroupName]=\\\"i\\\">\\n            <tr>\\n              <td class=\\\"typeLabel taxesLabel\\\">\\n                <label>{{tax.get('taxesType').value}}</label>\\n              </td>\\n              <td class=\\\"taxesLabel\\\">\\n                <mat-form-field>\\n                  <mat-select formControlName=\\\"taxApplicabilityId\\\" (change)=\\\"flagTaxDetailsAsEdited(i)\\\">\\n                    <mat-option *ngFor=\\\"let taxesApplicability of taxesApplicabilityList\\\" [value]=\\\"taxesApplicability.id\\\">{{taxesApplicability.name}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </td>\\n              <td class=\\\"taxesLabel taxesAmountLabel\\\">\\n                <mat-form-field>\\n                  <input matInput formControlName=\\\"amount\\\" pattern=\\\"^(\\\\d\\\\d?(\\\\.\\\\d\\\\d?)?|100(\\\\.00?)?)$\\\" (change)=\\\"flagTaxDetailsAsEdited(i)\\\"/>\\n                  <span class=\\\"percentageIcon\\\">&nbsp;%</span>\\n                </mat-form-field>\\n              </td>\\n              <td class=\\\"taxesLabel\\\">\\n                <mat-form-field>\\n                  <mat-select formControlName=\\\"isIncludedInRates\\\" (change)=\\\"flagTaxDetailsAsEdited(i)\\\">\\n                    <mat-option [value]=\\\"true\\\">Yes</mat-option>\\n                    <mat-option [value]=\\\"false\\\">No</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </td>\\n            </tr>\\n          </ng-container>\\n        </ng-container>\\n      </tbody>\\n    </table>\\n  </div>\\n\\n\\n  <div class=\\\"formSections pb-4 pt-5 borderBottomNone\\\" *ngIf=\\\"contractType !== mgStatic\\\">\\n    <h2 class=\\\"pb-1\\\">Upload Contract File</h2>\\n\\n    <div class=\\\"row customeRow controlButtons customFileUpload mt-4\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <input type=\\\"file\\\" accept=\\\".doc, .docx, .pdf\\\" (change)=\\\"fileChanged($event)\\\">\\n        <button (click)=\\\"readFile()\\\" class=\\\"genericButton activeButton mat-raised-button mat-primary\\\" [disabled]=\\\"this.hotelDetailsContractGroup.get('hotelId').value === null || error !== null || errorSize !== null || !file || isUploadComplete\\\">Upload</button>\\n        <mat-spinner [diameter]=\\\"50\\\" *ngIf=\\\"!isUploadComplete && isFileUploaded\\\"></mat-spinner>\\n        <mat-error *ngIf=\\\"error !== null\\\">{{error}}</mat-error>\\n        <mat-error *ngIf=\\\"errorSize !== null\\\">{{errorSize}}</mat-error>\\n        <div *ngIf=\\\"isUploadComplete && isFileUploaded\\\" class=\\\"fileUploaded\\\">File Uploaded</div>\\n        <div *ngIf=\\\"isUploadComplete && isFileUploaded\\\"><a target=\\\"_blank\\\" (click)=\\\"viewPdf()\\\">View/download uploaded file</a></div>\\n    </div>\\n    </div>\\n  </div>\\n\\n\\n\\n    <div class=\\\"controlButtons borderTopDark paddingTop50px pb-4 mb-1 paddingRight15px\\\">\\n      <button *ngIf=\\\"contractType === mgStatic\\\" title=\\\"Save\\\" class=\\\"genericButton activeButton mat-raised-button mat-primary\\\" [disabled]=\\\"!hotelDetailsContractGroup.valid\\\"\\n        (click)=\\\"saveContract()\\\">Save</button>\\n      <button *ngIf=\\\"contractType !== mgStatic\\\" title=\\\"Save\\\" class=\\\"genericButton activeButton mat-raised-button mat-primary\\\" [disabled]=\\\"!hotelDetailsContractGroup.valid || !isUploadComplete || !isFileUploaded\\\"\\n        (click)=\\\"saveContract()\\\">Save</button>\\n      <button title=\\\"Cancel\\\" class=\\\"genericButton defaultButton\\\" (click)=\\\"backToList()\\\">Cancel</button>\\n      <!-- <button title=\\\"Continue\\\" class=\\\"genericButton activeButton mat-raised-button mat-primary float-right\\\" [disabled]=\\\"!hotelDetailsContractGroup.valid\\\" >Save & Continue</button> -->\\n      <button *ngIf=\\\"contractType === mgStatic\\\" title=\\\"Continue\\\" class=\\\"genericButton activeButton mat-raised-button mat-primary float-right\\\" [disabled] = \\\"!hotelDetailsContractGroup.valid\\\" (click)=\\\"saveAndContinue()\\\">Save & Continue</button>\\n  </div>\\n  \\n\\n  </form>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/hotel-info/hotel-details/hotel-details.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/hotel-info/hotel-details/hotel-details.component.html\n// module chunks = contracts.module","import { Component, OnInit, ChangeDetectorRef, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { ContractNameDataService } from '../../../../common/extranet-shared/services/contracts/contract-name-data.service';\nimport { ContractUrlNotificationService } from '../../../../common/extranet-shared/services/contracts/contract-url-notification.service';\nimport { LookupService } from '../../../../../common/shared/services/lookup.service';\nimport { CountryViewModel } from '../../../../../common/viewmodels/countryviewmodel';\nimport { HotelTypeViewModel } from '../../../../../common/viewmodels/hoteltypeviewmodel';\nimport { HotelChainViewModel } from '../../../../../common/viewmodels/hotelchainviewmodel';\nimport { ContactPersonTitleViewModel } from '../../../../../common/viewmodels/contactpersontitleviewmodel';\nimport { CurrencyViewModel } from '../../../../../common/viewmodels/currencyviewmodel';\nimport { PaymentMethodViewModel } from '../../../../viewmodel/hoteldetailsviewmodel/paymentmethodviewmodel';\nimport { RateTypeViewModel } from '../../../../viewmodel/hoteldetailsviewmodel/ratetypeviewmodel';\nimport { ChannelManagerViewModel } from '../../../../viewmodel/hoteldetailsviewmodel/channelmanagerviewmodel';\nimport { TaxesApplicabilityViewModel } from '../../../../viewmodel/hoteldetailsviewmodel/taxesapplicabilityviewmodel';\nimport { StarRatingViewModel } from '../../../../viewmodel/hoteldetailsviewmodel/starratingviewmodel';\nimport { ContractHotelDetailsDataService } from '../../../../common/extranet-shared/services/contracts/contract-hotel-details-data.service';\nimport { HotelsNameList } from '../../../../viewmodel/contracts/hoteldetails/hotelsnamelist';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { startWith } from 'rxjs/operators/startWith';\nimport { HotelDataService } from '../../../../common/extranet-shared/services/hotel-data.service';\nimport { HotelDetailsViewModel } from '../../../../viewmodel/hoteldetailsviewmodel/hoteldetailsviewmodel';\nimport { HotelBrandViewModel } from '../../../../../common/viewmodels/hotelbrandviewmodel';\nimport { CityViewModel } from '../../../../../common/viewmodels/cityviewmodel';\nimport { EXTRANETCONSTANTS } from '../../../../common/constants';\nimport { HotelPaymentMethodRelationViewModel } from '../../../../viewmodel/hoteldetailsviewmodel/hotelpaymentmethodrelationviewmodel';\nimport { ContractDataService } from '../../../../common/extranet-shared/services/contracts/contract-data.service';\nimport { ContractType, ObjectState, DocumentType } from '../../../../../common/enums';\nimport { TemplateFacilitiesDataService } from '../../../../common/extranet-shared/services/templates/template-facilities-data.service';\nimport { TemplatesDataService } from '../../../../common/extranet-shared/services/templates/templates-data.service';\n// tslint:disable-next-line:max-line-length\nimport { TemplateViewModel, HotelInfoViewModel } from '../../../../viewmodel/templates/hotel-info/hotelinfoviewmodel';\nimport { ContractHotelDetailsViewModel } from '../../../../viewmodel/contracts/hoteldetails/contracthoteldetailsviewmodel';\nimport { MatSnackBar } from '@angular/material';\nimport { StaticContractHotelDetailsVieModel } from '../../../../viewmodel/contracts/hoteldetails/staticcontracthoteldetailsviewmodel';\nimport { CONSTANTS } from '../../../../../common/constants';\n\nconst duration = CONSTANTS.toasterTimeOut.duration;\n\n@Component({\n  selector: 'app-hotel-details',\n  templateUrl: './hotel-details.component.html',\n  styleUrls: ['./hotel-details.component.css']\n})\nexport class HotelDetailsComponent implements OnInit {\n\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n\n  hotelDetailsContractGroup: FormGroup;\n  contractBasicData: string[] = [];\n  rowSelected: number;\n  nonMg = ContractType.NonMG;\n  mgStatic = ContractType.MGStatic;\n  mgDynamic = ContractType.MGDynamic;\n  hotelInfoCodes = EXTRANETCONSTANTS.templates.hotelinfo;\n  contractType: any;\n  templateId: number;\n  hotelFields: HotelInfoViewModel[];\n  templateViewModel: TemplateViewModel;\n  contractHotelDetailsViewModel: ContractHotelDetailsViewModel;\n  staticContractHotelDetailsVieModel: StaticContractHotelDetailsVieModel;\n  contractId = this.activatedRoute.parent.snapshot.params['id'];\n  operation = this.activatedRoute.parent.snapshot.params['operation'];\n  startDate: any;\n  endDate: any;\n  initialContactDetailsLength: number;\n  initialTaxDetailsLength: number;\n  contractBasicDetailsObjectState: ObjectState;\n  savedcontractBasicDetails: any;\n\n  hotelData: HotelDetailsViewModel;\n  hotelDataSave: HotelDetailsViewModel;\n  latLong: any;\n  hotelPaymentMethodRelation: HotelPaymentMethodRelationViewModel;\n  checkInCheckOut = EXTRANETCONSTANTS.arrCheckInCheckOut;\n  countriesList: CountryViewModel[];\n  citiesList: CityViewModel[];\n  hotelTypeList: HotelTypeViewModel[];\n  hotelChainList: HotelChainViewModel[];\n  hotelBrandList: HotelBrandViewModel[];\n  contactPersonTitleList: ContactPersonTitleViewModel[];\n  currencyList: CurrencyViewModel[];\n  paymentMethodList: PaymentMethodViewModel[];\n  rateTypeList: RateTypeViewModel[];\n  channelManagerList: ChannelManagerViewModel[];\n  taxesApplicabilityList: TaxesApplicabilityViewModel[];\n  starRatingList: StarRatingViewModel[];\n  hotelsNameList: HotelsNameList[];\n  filteredOptions: Observable<any>;\n  // name: FormControl = new FormControl();\n\n  isSelectedName: boolean;\n  isSelectedChain: boolean;\n  isSelectedBrand: boolean;\n  isSelectedType: boolean;\n  isSelectedAddress1: boolean;\n  isSelectedAddress2: boolean;\n  isSelectedCountry: boolean;\n  isSelectedCity: boolean;\n  isSelectedZip: boolean;\n  isSelectedLatLong: boolean;\n  isSelectedStarRating: boolean;\n  isSelectedMgPoints: boolean;\n  isSelectedShortDescription: boolean;\n  isSelectedLongDescription: boolean;\n  isSelectedContactDetails: boolean;\n  isSelectedPaymentDetails: boolean;\n  isSelectedExtranetDetails: boolean;\n  isSelectedTaxes: boolean;\n  isSelectedCheckinCheckout: boolean;\n  isSelectedTotalNumberOfRooms: boolean;\n  error: string;\n  errorSize: string;\n  file: File;\n  pdfLink: string;\n  isFileUploaded: boolean;\n  fileArray: any;\n  isUploadComplete: boolean;\n  extension: number;\n\n  constructor(public contractNameDataService: ContractNameDataService,\n    public contractDataService: ContractDataService,\n    public contractUrlNotificationService: ContractUrlNotificationService,\n    public lookupService: LookupService,\n    public contractHotelDetailsDataService: ContractHotelDetailsDataService,\n    public templatesDataService: TemplatesDataService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private hotelDataService: HotelDataService,\n    private changeDetector: ChangeDetectorRef,\n    public snackBar: MatSnackBar) {\n    contractUrlNotificationService.changeURLRoute(activatedRoute.snapshot.url[0].path);\n  }\n\n  @Input() fileExt: string;\n  @Input() maxSize: number;\n\n  ngOnInit() {\n\n    window.scrollTo(0, 0);\n    this.error = null;\n    this.errorSize = null;\n    this.maxSize = 5;\n    this.fileExt = DocumentType[0] + ', ' + DocumentType[1] + ', ' + DocumentType[2];\n    this.isFileUploaded = false;\n    this.getCountries();\n    this.getHotelTypes();\n    this.getHotelChains();\n    this.getContactTitles();\n    this.getCurrency();\n    this.getPaymentMethod();\n    this.getRateType();\n    this.getChannelManager();\n    this.getTaxApplicability();\n    this.getStarRating();\n\n    this.hotelsNameList = this.activatedRoute.snapshot.data['hotelsName'];\n    this.templateId = this.contractDataService.templateId;\n    if (this.operation === this.create) {\n      this.contractType = this.contractDataService.contractType;\n    } else if (this.operation === this.edit) {\n      this.contractType = this.mgStatic;\n    }\n\n    this.hotelDetailsContractGroup = new FormGroup({\n      hotelId: new FormControl(),\n      hotelName: new FormControl(),\n      hotelChainId: new FormControl(),\n      hotelBrandId: new FormControl(),\n      hotelTypeId: new FormControl('', Validators.required),\n      totalNumberOfRooms: new FormControl('', Validators.required),\n      countryId: new FormControl('', Validators.required),\n      cityId: new FormControl('', Validators.required),\n      address1: new FormControl('', Validators.required),\n      address2: new FormControl(),\n      zipCode: new FormControl('', Validators.required),\n      latLong: new FormControl('', Validators.required),\n      starRatingId: new FormControl('', Validators.required),\n      mgPoint: new FormControl(),\n      shortDescription: new FormControl('', Validators.required),\n      longDescription: new FormControl(),\n      checkInFrom: new FormControl('', Validators.required),\n      checkOutTo: new FormControl('', Validators.required),\n      contactDetails: new FormArray([this.buildContactDetailsForm()]),\n      website: new FormControl('', Validators.required),\n      reservationEmail: new FormControl('', Validators.required),\n      reservationContactNo: new FormControl('', Validators.required),\n      hotelPaymentMethodRelation: this.buildPaymentMethod(),\n      isExtranetAccess: new FormControl(),\n      isChannelManagerConnectivity: new FormControl(),\n      channelManagerId: new FormControl(),\n      taxDetails: new FormArray([this.buildTaxDetailsForm()]),\n      contractNameEntered: new FormControl('', Validators.required),\n      startDate: new FormControl('', Validators.required),\n      endDate: new FormControl('', Validators.required),\n      objectState: new FormControl()\n    });\n    this.contractNameDataService.contractName.subscribe(contractBasicDetails => {\n      this.contractBasicData = contractBasicDetails.split('~#');\n      this.hotelDetailsContractGroup.controls['contractNameEntered'].setValue(this.contractBasicData[0]);\n      this.hotelDetailsContractGroup.controls['startDate'].setValue(this.contractBasicData[1]);\n      this.hotelDetailsContractGroup.controls['endDate'].setValue(this.contractBasicData[2]);\n    });\n\n    if (this.operation === this.create) {\n      this.hotelDetailsContractGroup.get('objectState').setValue(ObjectState.Added);\n      this.contactDetails.controls.forEach((contact, index) => {\n        contact.get('objectState').setValue(ObjectState.Added);\n      });\n      this.hotelDetailsContractGroup.controls.hotelPaymentMethodRelation.get('objectState').\n        setValue(ObjectState.Added);\n      this.taxDetails.controls.forEach((tax, index) => {\n        tax.get('objectState').setValue(ObjectState.Added);\n      });\n      this.hotelDetailsContractGroup.get('hotelName').enable();\n    } else if (this.contractType === this.mgStatic && this.operation === this.edit) {\n      this.hotelDetailsContractGroup.get('objectState').setValue(ObjectState.Unchanged);\n      this.contactDetails.controls.forEach((contact, index) => {\n        contact.get('objectState').setValue(ObjectState.Unchanged);\n      });\n      this.hotelDetailsContractGroup.controls.hotelPaymentMethodRelation.get('objectState').\n        setValue(ObjectState.Unchanged);\n      this.taxDetails.controls.forEach((tax, index) => {\n        tax.get('objectState').setValue(ObjectState.Unchanged);\n      });\n      this.hotelDetailsContractGroup.get('hotelName').disable();\n      // this.savedcontractBasicDetails = this.contractsDataService.savedcontractBasicDetails.split('~#');\n    }\n\n    if (this.contractType === this.mgStatic && this.operation === this.create) {\n      this.templateViewModel = {\n        id: this.templateId\n      };\n      this.templatesDataService.getTemplateHotelFields(this.templateViewModel).subscribe(templateData => {\n        this.hotelFields = templateData.hotelFields;\n        this.updateHotelFields();\n      });\n    } else if (this.contractType === this.mgStatic && this.operation === this.edit) {\n      this.contractHotelDetailsDataService.getContractHotelDetailsByContractId(this.contractId).subscribe(hotelDetails => {\n        this.hotelFields = hotelDetails.contractHotelFieldsList;\n        this.hotelData = hotelDetails.contractHotelDetailsModel;\n        this.initialContactDetailsLength = this.hotelData.contactDetails.length;\n        this.initialTaxDetailsLength = this.hotelData.taxDetails.length;\n        this.updateHotelFields();\n        this.setHotelFieldsValue();\n      });\n    } else if (this.contractType === this.nonMg || this.contractType === this.mgDynamic) {\n      this.isSelectedName = true;\n      this.isSelectedChain = true;\n      this.isSelectedBrand = true;\n      this.isSelectedType = true;\n      this.isSelectedTotalNumberOfRooms = true;\n      this.isSelectedAddress1 = true;\n      this.isSelectedAddress2 = true;\n      this.isSelectedCountry = true;\n      this.isSelectedCity = true;\n      this.isSelectedZip = true;\n      this.isSelectedLatLong = true;\n      this.isSelectedStarRating = true;\n      this.isSelectedMgPoints = true;\n      this.isSelectedShortDescription = true;\n      this.isSelectedLongDescription = true;\n      this.isSelectedContactDetails = true;\n      this.isSelectedPaymentDetails = false;\n      this.isSelectedExtranetDetails = false;\n      this.isSelectedTaxes = false;\n      this.isSelectedCheckinCheckout = true;\n    }\n\n    // function for serach by hotel name\n    this.filteredOptions = this.hotelDetailsContractGroup.get('hotelName').valueChanges\n      .pipe(\n        map(val => this.filter(val.trim()))\n      );\n\n  }\n\n  updateHotelFields() {\n    this.hotelFields.forEach(hotelField => {\n      if (hotelField.isConfigurable === false) {\n        hotelField.isSelected = true;\n      }\n\n      if (this.hotelInfoCodes.name === hotelField.code) {\n        this.isSelectedName = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.chain === hotelField.code) {\n        this.isSelectedChain = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.brand === hotelField.code) {\n        this.isSelectedBrand = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.type === hotelField.code) {\n        this.isSelectedType = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.address1 === hotelField.code) {\n        this.isSelectedAddress1 = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.address2 === hotelField.code) {\n        this.isSelectedAddress2 = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.country === hotelField.code) {\n        this.isSelectedCountry = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.city === hotelField.code) {\n        this.isSelectedCity = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.zip === hotelField.code) {\n        this.isSelectedZip = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.latlong === hotelField.code) {\n        this.isSelectedLatLong = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.starrating === hotelField.code) {\n        this.isSelectedStarRating = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.mgpoints === hotelField.code) {\n        this.isSelectedMgPoints = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.shortdescription === hotelField.code) {\n        this.isSelectedShortDescription = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.longdescription === hotelField.code) {\n        this.isSelectedLongDescription = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.contactdetails === hotelField.code) {\n        this.isSelectedContactDetails = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.paymentdetails === hotelField.code) {\n        this.isSelectedPaymentDetails = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.extranetdetails === hotelField.code) {\n        this.isSelectedExtranetDetails = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.taxes === hotelField.code) {\n        this.isSelectedTaxes = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.checkincheckout === hotelField.code) {\n        this.isSelectedCheckinCheckout = hotelField.isSelected;\n      } else if (this.hotelInfoCodes.totalNumberOfRooms === hotelField.code) {\n        this.isSelectedTotalNumberOfRooms = hotelField.isSelected;\n      }\n\n    });\n  }\n\n  setHotelFieldsValue() {\n    if (this.contactDetails.controls.length !== 0) {\n      const contactDetailsControlLength = this.contactDetails.controls.length;\n      for (let i = 0; i < contactDetailsControlLength; i++) {\n        this.contactDetails.removeAt(0);\n      }\n    }\n\n    if (this.taxDetails.controls.length !== 0) {\n      const taxDetailsControlLength = this.taxDetails.controls.length;\n      for (let i = 0; i < taxDetailsControlLength; i++) {\n        this.taxDetails.removeAt(0);\n      }\n    }\n\n    if (this.hotelData.hotelChainId != null) {\n      this.getHotelBrands(this.hotelData.hotelChainId);\n    }\n    if (this.hotelData.countryId != null) {\n      this.getCities(this.hotelData.countryId);\n    }\n    this.latLong = this.hotelData.latitude + '/' + this.hotelData.longitude;\n\n    for (let i = 0; i < this.hotelData.contactDetails.length; i++) {\n      this.addContact();\n    }\n\n    for (let i = 0; i < this.hotelData.contactDetails.length; i++) {\n      if (this.hotelData.contactDetails[i].isPrimary === true) {\n        this.rowSelected = i;\n      } else if (this.hotelData.contactDetails[i].contactPerson === null) {\n        this.rowSelected = i;\n      }\n    }\n\n    for (let i = 0; i < this.hotelData.taxDetails.length; i++) {\n      this.addTax();\n    }\n\n    if (this.hotelData.isChannelManagerConnectivity === false) {\n      this.hotelDetailsContractGroup.get('channelManagerId').setValue(null);\n      this.hotelDetailsContractGroup.get('channelManagerId').disable();\n    } else {\n      this.hotelDetailsContractGroup.get('channelManagerId').enable();\n    }\n\n    if (this.operation === this.create) {\n      this.hotelDetailsContractGroup.get('objectState').setValue(ObjectState.Added);\n      this.contactDetails.controls.forEach((contact, index) => {\n        contact.get('objectState').setValue(ObjectState.Added);\n      });\n      this.hotelDetailsContractGroup.controls.hotelPaymentMethodRelation.get('objectState').\n        setValue(ObjectState.Added);\n      this.taxDetails.controls.forEach((tax, index) => {\n        tax.get('objectState').setValue(ObjectState.Added);\n      });\n    } else if (this.contractType === this.mgStatic && this.operation === this.edit) {\n      this.hotelDetailsContractGroup.get('objectState').setValue(ObjectState.Unchanged);\n      this.contactDetails.controls.forEach((contact, index) => {\n        contact.get('objectState').setValue(ObjectState.Unchanged);\n      });\n      this.hotelDetailsContractGroup.controls.hotelPaymentMethodRelation.get('objectState').\n        setValue(ObjectState.Unchanged);\n      this.taxDetails.controls.forEach((tax, index) => {\n        tax.get('objectState').setValue(ObjectState.Unchanged);\n      });\n    }\n\n    this.hotelDetailsContractGroup.get('hotelId').setValue(this.hotelData.hotelId);\n    this.hotelDetailsContractGroup.get('hotelName').setValue(this.hotelData.hotelName);\n    this.hotelDetailsContractGroup.get('hotelChainId').setValue(this.hotelData.hotelChainId);\n    this.hotelDetailsContractGroup.get('hotelBrandId').setValue(this.hotelData.hotelBrandId);\n    this.hotelDetailsContractGroup.get('hotelTypeId').setValue(this.hotelData.hotelTypeId);\n    this.hotelDetailsContractGroup.get('totalNumberOfRooms').setValue(this.hotelData.totalNumberOfRooms);\n    this.hotelDetailsContractGroup.get('countryId').setValue(this.hotelData.countryId);\n    this.hotelDetailsContractGroup.get('cityId').setValue(this.hotelData.cityId);\n    this.hotelDetailsContractGroup.get('address1').setValue(this.hotelData.address1);\n    this.hotelDetailsContractGroup.get('address2').setValue(this.hotelData.address2);\n    this.hotelDetailsContractGroup.get('zipCode').setValue(this.hotelData.zipCode);\n    this.hotelDetailsContractGroup.get('latLong').setValue(this.latLong);\n    this.hotelDetailsContractGroup.get('starRatingId').setValue(this.hotelData.starRatingId);\n    this.hotelDetailsContractGroup.get('mgPoint').setValue(this.hotelData.mgPoint);\n    this.hotelDetailsContractGroup.get('shortDescription').setValue(this.hotelData.shortDescription);\n    this.hotelDetailsContractGroup.get('longDescription').setValue(this.hotelData.longDescription);\n    this.hotelDetailsContractGroup.get('checkInFrom').setValue(this.hotelData.checkInFrom);\n    this.hotelDetailsContractGroup.get('checkOutTo').setValue(this.hotelData.checkOutTo);\n    this.hotelDetailsContractGroup.get('website').setValue(this.hotelData.website);\n    this.hotelDetailsContractGroup.get('reservationEmail').setValue(this.hotelData.reservationEmail);\n    this.hotelDetailsContractGroup.get('reservationContactNo').setValue(this.hotelData.reservationContactNo);\n    this.hotelDetailsContractGroup.get('isExtranetAccess').setValue(this.hotelData.isExtranetAccess);\n    this.hotelDetailsContractGroup.get('isChannelManagerConnectivity').setValue(this.hotelData.isChannelManagerConnectivity);\n    this.hotelDetailsContractGroup.get('channelManagerId').setValue(this.hotelData.channelManagerId);\n\n    this.contactDetails.controls.forEach((contact, index) => {\n      contact.get('contactId').setValue(this.hotelData.contactDetails[index].contactId);\n      contact.get('contactPerson').setValue(this.hotelData.contactDetails[index].contactPerson);\n      contact.get('designationId').setValue(this.hotelData.contactDetails[index].designationId);\n      contact.get('emailAddress').setValue(this.hotelData.contactDetails[index].emailAddress);\n      contact.get('contactNumber').setValue(this.hotelData.contactDetails[index].contactNumber);\n      contact.get('rowSelected').setValue(this.rowSelected);\n    });\n\n    this.hotelDetailsContractGroup.controls.hotelPaymentMethodRelation.get('paymentMethodId').\n      setValue(this.hotelData.hotelPaymentMethodRelation.paymentMethodId);\n    this.hotelDetailsContractGroup.controls.hotelPaymentMethodRelation.get('currencyId').\n      setValue(this.hotelData.hotelPaymentMethodRelation.currencyId);\n    this.hotelDetailsContractGroup.controls.hotelPaymentMethodRelation.get('rateTypeId').\n      setValue(this.hotelData.hotelPaymentMethodRelation.rateTypeId);\n\n    this.taxDetails.controls.forEach((tax, index) => {\n      tax.get('taxTypeId').setValue(this.hotelData.taxDetails[index].taxTypeId);\n      tax.get('taxesType').setValue(this.hotelData.taxDetails[index].taxesType);\n      tax.get('taxApplicabilityId').setValue(this.hotelData.taxDetails[index].taxApplicabilityId);\n      tax.get('amount').setValue(this.hotelData.taxDetails[index].amount);\n      tax.get('isIncludedInRates').setValue(this.hotelData.taxDetails[index].isIncludedInRates);\n    });\n\n  }\n\n  /* ---------- Contact Details ---------------- */\n  buildContactDetailsForm(): FormGroup {\n    let contactDetailsFormGroup: FormGroup;\n    contactDetailsFormGroup = new FormGroup({\n      contactId: new FormControl(),\n      isPrimary: new FormControl(),\n      contactPerson: new FormControl('', Validators.required),\n      designationId: new FormControl('', Validators.required),\n      emailAddress: new FormControl('', Validators.required),\n      contactNumber: new FormControl('', Validators.required),\n      rowSelected: new FormControl(),\n      objectState: new FormControl()\n    });\n\n    return contactDetailsFormGroup;\n  }\n\n  get contactDetails(): FormArray {\n    return <FormArray>this.hotelDetailsContractGroup.get('contactDetails');\n  }\n\n  addContact() {\n    this.contactDetails.push(this.buildContactDetailsForm());\n    this.changeDetector.detectChanges();\n  }\n\n  /* ---------- Contact Details Ends ---------------- */\n\n  /* ---------- Payment Method ---------------- */\n  buildPaymentMethod(): FormGroup {\n    let paymentMethodFormGroup: FormGroup;\n    paymentMethodFormGroup = new FormGroup({\n      hotelPaymentMethodRelationId: new FormControl(),\n      paymentMethodId: new FormControl(),\n      currencyId: new FormControl(),\n      rateTypeId: new FormControl(),\n      objectState: new FormControl()\n    });\n\n    return paymentMethodFormGroup;\n  }\n\n  /* ---------- Payment Method Ends ---------------- */\n\n  /* ---------- Tax Details ---------------- */\n  buildTaxDetailsForm(): FormGroup {\n    let taxDetailsFormGroup: FormGroup;\n    taxDetailsFormGroup = new FormGroup({\n      taxTypeId: new FormControl(),\n      taxesType: new FormControl(),\n      taxApplicabilityId: new FormControl(),\n      amount: new FormControl(),\n      isIncludedInRates: new FormControl(),\n      objectState: new FormControl()\n    });\n\n    return taxDetailsFormGroup;\n  }\n\n  get taxDetails(): FormArray {\n    return <FormArray>this.hotelDetailsContractGroup.get('taxDetails');\n  }\n\n  addTax() {\n    this.taxDetails.push(this.buildTaxDetailsForm());\n    this.changeDetector.detectChanges();\n  }\n  /* ---------- Tax Details Ends ---------------- */\n\n  /* ---------- Filter Hotel ---------------- */\n  filter(val: string): HotelsNameList[] {\n    return this.hotelsNameList.filter(hotelsNameList =>\n      hotelsNameList.name.toLowerCase().includes(val.toLowerCase()));\n  }\n\n  searchHotel(event, hotelId) {\n    if (event.source.selected) {\n      this.hotelDataService.getHotel(hotelId).subscribe(hotelData => {\n        this.hotelData = hotelData;\n        this.initialContactDetailsLength = this.hotelData.contactDetails.length;\n        this.initialTaxDetailsLength = this.hotelData.taxDetails.length;\n        this.setHotelFieldsValue();\n      });\n    }\n  }\n\n  /* ---------- Filter Hotel Ends ---------------- */\n\n  /* ---------- Get Master Data -------------- */\n  getHotelBrands(chainId) {\n    this.lookupService.getHotelBrands(chainId).subscribe(hotelBrandData => {\n      this.hotelBrandList = hotelBrandData;\n    });\n  }\n\n  getCountries() {\n    this.lookupService.getCountries().subscribe(countriesData => {\n      this.countriesList = countriesData;\n    });\n  }\n\n  getCities(countryId) {\n    this.lookupService.getCities(countryId).subscribe(citiesData => {\n      this.citiesList = citiesData;\n    });\n  }\n\n  getHotelTypes() {\n    this.lookupService.getHotelTypes().subscribe(hotelTypeData => {\n      this.hotelTypeList = hotelTypeData;\n    });\n  }\n\n  getHotelChains() {\n    this.lookupService.getHotelChains().subscribe(hotelChainData =>\n      this.hotelChainList = hotelChainData\n    );\n  }\n\n  getContactTitles() {\n    this.lookupService.getDesignation().subscribe(contactTitleData =>\n      this.contactPersonTitleList = contactTitleData\n    );\n  }\n\n  getCurrency() {\n    this.lookupService.getCurrency().subscribe(currencyData =>\n      this.currencyList = currencyData\n    );\n  }\n\n  getPaymentMethod() {\n    this.lookupService.getPaymentMethod().subscribe(paymentData => {\n      this.paymentMethodList = paymentData;\n    });\n  }\n\n  getRateType() {\n    this.lookupService.getRateType().subscribe(rateTypeData => {\n      this.rateTypeList = rateTypeData;\n    });\n  }\n\n  getChannelManager() {\n    this.lookupService.getChannelManager().subscribe(channelManagerData =>\n      this.channelManagerList = channelManagerData\n    );\n  }\n\n  getTaxApplicability() {\n    this.lookupService.getTaxApplicability().subscribe(taxesApplicabilityData =>\n      this.taxesApplicabilityList = taxesApplicabilityData\n    );\n  }\n\n  getStarRating() {\n    this.lookupService.getStarRating().subscribe(starRatingData => {\n      this.starRatingList = starRatingData;\n    });\n  }\n  /* ---------- Get Master Data Ends -------------- */\n\n  backToList() {\n    this.router.navigate(['/contractmgmt/contracts']);\n  }\n\n  fileChanged($event): void {\n    this.isUploadComplete = false;\n    this.isFileUploaded = false;\n    this.file = $event.target.files[0];\n    if (this.file) {\n      this.isValidFileExtension(this.file);\n    }\n  }\n\n  readFile(): void {\n    this.isFileUploaded = true;\n    this.isUploadComplete = false;\n    const myReader: FileReader = new FileReader();\n    myReader.readAsArrayBuffer(this.file);\n    const thisObject = this;\n    let formdata = {};\n    const hotelId = this.hotelDetailsContractGroup.get('hotelId').value;\n    myReader.onloadend = function (e) {\n      const byteArray = new Uint8Array(myReader.result);\n      const array = Array.from(byteArray);\n      thisObject.fileArray = array;\n      formdata = {\n        bytes: array,\n        hotelCode: thisObject.hotelData.hotelCode,\n        extension: thisObject.extension\n      };\n      thisObject.contractHotelDetailsDataService.uploadPdf(formdata)\n        .subscribe(response => {\n          thisObject.pdfLink = response.result;\n          if (response.result && !response.isError) {\n            thisObject.isUploadComplete = true;\n          } else {\n            thisObject.error = response.message;\n          }\n        }\n        );\n    };\n  }\n\n  isValidFileExtension(file) {\n    const extensions = (this.fileExt.split(','))\n      .map(function (x) { return x.toLocaleUpperCase().trim(); });\n    const ext = file.name.toUpperCase().split('.').pop() || file.name;\n    const exists = extensions.includes(ext);\n    if (!exists) {\n      this.error = 'Please choose PDF, DOC or DOCX file only.';\n    } else {\n      this.error = null;\n      if (ext === DocumentType[0]) {\n        this.extension = DocumentType.PDF;\n      } else if (ext === DocumentType[1]) {\n        this.extension = DocumentType.DOC;\n      } else if (ext === DocumentType[2]) {\n        this.extension = DocumentType.DOCX;\n      }\n    }\n    this.isValidFileSize(file);\n  }\n\n  isValidFileSize(file) {\n    const fileSizeinMB = file.size / (1024 * 1000);\n    const size = Math.round(fileSizeinMB * 100) / 100;\n    if (size > this.maxSize) {\n      this.errorSize = 'File exceeds file size limit of ' + this.maxSize + 'MB';\n    } else if (size === 0) {\n      this.errorSize = 'File is empty';\n    } else {\n      this.errorSize = null;\n    }\n  }\n\n  isChannelManager(selected) {\n    this.flagHotelDetailsAsEdited();\n    if (!selected) {\n      this.hotelDetailsContractGroup.get('channelManagerId').setValue(null);\n      this.hotelDetailsContractGroup.get('channelManagerId').disable();\n    } else {\n      this.hotelDetailsContractGroup.get('channelManagerId').enable();\n    }\n  }\n\n  saveContract() {\n\n    this.updateHotelDataSaveModel();\n\n    if (this.contractType === this.nonMg) {\n      this.contractHotelDetailsViewModel = {\n        id: this.contractId,\n        name: this.hotelDetailsContractGroup.get('contractNameEntered').value,\n        startDate: this.startDate.toISOString(),\n        endDate: this.endDate.toISOString(),\n        objectState: this.contractBasicDetailsObjectState,\n        hotelId: this.hotelDetailsContractGroup.get('hotelId').value,\n        contractType: this.contractType,\n        pdfLink: this.pdfLink,\n        hotelDetails: this.hotelDataSave\n      };\n      console.log(JSON.stringify(this.contractHotelDetailsViewModel));\n      this.contractHotelDetailsDataService.addNonMgContract(this.contractHotelDetailsViewModel as ContractHotelDetailsViewModel)\n        .subscribe(data => {\n          this.router.navigate(['/contractmgmt/contracts']);\n          this.snackBar.open('NonMG Contract Saved Successfully', '',\n            { duration: duration, verticalPosition: 'top', panelClass: 'showSnackBar' });\n          window.scrollTo(0, 0);\n        }\n        );\n    } else if (this.contractType === this.mgDynamic) {\n      this.contractHotelDetailsViewModel = {\n        id: this.contractId,\n        name: this.hotelDetailsContractGroup.get('contractNameEntered').value,\n        startDate: this.startDate.toISOString(),\n        endDate: this.endDate.toISOString(),\n        objectState: this.contractBasicDetailsObjectState,\n        hotelId: this.hotelDetailsContractGroup.get('hotelId').value,\n        contractType: this.contractType,\n        pdfLink: this.pdfLink,\n        hotelDetails: this.hotelDataSave\n      };\n      this.contractHotelDetailsDataService.addDynamicContract(this.contractHotelDetailsViewModel as ContractHotelDetailsViewModel)\n        .subscribe(data => {\n          this.router.navigate(['/contractmgmt/contracts']);\n          this.snackBar.open('Dynamic Contract Saved Successfully', '',\n            { duration: duration, verticalPosition: 'top', panelClass: 'showSnackBar' });\n          window.scrollTo(0, 0);\n        }\n        );\n    } else if (this.contractType === this.mgStatic) {\n\n      this.staticContractHotelDetailsVieModel = {\n        templateId: this.templateId,\n        contractId: this.contractId,\n        name: this.hotelDetailsContractGroup.get('contractNameEntered').value,\n        startDate: this.startDate.toISOString(),\n        endDate: this.endDate.toISOString(),\n        objectState: this.contractBasicDetailsObjectState,\n        hotelDetailsViewModel: this.hotelDataSave,\n        contractType: this.contractType,\n        isDeleted: false\n      };\n      this.contractHotelDetailsDataService.addStaticContract(this.staticContractHotelDetailsVieModel as StaticContractHotelDetailsVieModel)\n        .subscribe(data => {\n          this.contractId = data.result.id;\n          this.router.navigate(['/contractmgmt/contracts']);\n          this.snackBar.open('Static Contract Saved Successfully', '',\n            { duration: duration, verticalPosition: 'top', panelClass: 'showSnackBar' });\n          window.scrollTo(0, 0);\n        }\n        );\n    }\n  }\n\n  saveAndContinue() {\n\n    this.updateHotelDataSaveModel();\n\n    this.staticContractHotelDetailsVieModel = {\n        templateId: this.templateId,\n        contractId: this.contractId,\n        name: this.hotelDetailsContractGroup.get('contractNameEntered').value,\n        startDate: this.startDate.toISOString(),\n        endDate: this.endDate.toISOString(),\n        objectState: this.contractBasicDetailsObjectState,\n        hotelDetailsViewModel: this.hotelDataSave,\n        contractType: this.contractType,\n        isDeleted: false\n      };\n      this.contractHotelDetailsDataService.addStaticContract(this.staticContractHotelDetailsVieModel as StaticContractHotelDetailsVieModel)\n        .subscribe(data => {\n          this.contractId = data.result.id;\n          this.router.navigate(['/contractmgmt/redirect', this.contractId]);\n          this.snackBar.open('Static Contract Saved Successfully', '',\n          { duration: 4000, verticalPosition: 'top', panelClass: 'showSnackBar'});\n          window.scrollTo(0, 0);\n        }\n      );\n  }\n\n  updateHotelDataSaveModel() {\n    this.startDate = new Date(this.hotelDetailsContractGroup.get('startDate').value.trim());\n    this.endDate = new Date(this.hotelDetailsContractGroup.get('endDate').value.trim());\n\n    this.hotelDataSave = Object.assign({}, this.hotelData, this.hotelDetailsContractGroup.value);\n    this.hotelDataSave.isActive = true;\n    this.hotelDataSave.latitude = +(this.latLong.split('/')[0]);\n    this.hotelDataSave.longitude = +(this.latLong.split('/')[1]);\n    this.hotelDataSave.contactDetails.forEach((contact, index) => {\n      if (index === this.rowSelected) {\n        contact.isPrimary = true;\n      } else {\n        contact.isPrimary = false;\n      }\n      if (contact.contactId === null) {\n        contact.contactId = 0;\n      }\n    });\n    this.hotelDataSave.hotelPaymentMethodRelation.hotelPaymentMethodRelationId =\n      this.hotelData.hotelPaymentMethodRelation.hotelPaymentMethodRelationId;\n\n    if (this.hotelDataSave.isChannelManagerConnectivity === false) {\n      this.hotelDataSave.channelManagerId = null;\n    }\n\n    if (this.operation === this.create) {\n      this.contractBasicDetailsObjectState = ObjectState.Added;\n    } else if (this.operation === this.edit) {\n      this.contractBasicDetailsObjectState = ObjectState.Unchanged;\n      // if (this.savedcontractBasicDetails[0] !== this.hotelDetailsContractGroup.get('contractNameEntered').value) {\n      //   this.contractBasicDetailsObjectState = ObjectState.Modified;\n      // } else if (this.savedcontractBasicDetails[1] !== this.hotelDetailsContractGroup.get('startDate').value) {\n      //   this.contractBasicDetailsObjectState = ObjectState.Modified;\n      // } else if (this.savedcontractBasicDetails[2] !== this.hotelDetailsContractGroup.get('endDate').value) {\n      //   this.contractBasicDetailsObjectState = ObjectState.Modified;\n      // }\n    }\n  }\n\n  flagContactDetailsAsEdited(index) {\n    if (this.contactDetails.value[index].objectState !== ObjectState.Added && this.contactDetails.value[index].objectState !== null) {\n      this.contactDetails.controls[index].get('objectState').setValue(ObjectState.Modified);\n    }\n    if (this.initialContactDetailsLength !== this.contactDetails.length && index >= this.initialContactDetailsLength) {\n      this.contactDetails.controls[index].get('objectState').setValue(ObjectState.Added);\n    }\n  }\n\n  flagHotelDetailsAsEdited() {\n    if (this.hotelDetailsContractGroup.value.objectState !== ObjectState.Added) {\n      this.hotelDetailsContractGroup.get('objectState').setValue(ObjectState.Modified);\n    }\n  }\n\n  flagPaymentDetailsAsEdited() {\n    if (this.hotelDetailsContractGroup.value.hotelPaymentMethodRelation.objectState !== ObjectState.Added) {\n      this.hotelDetailsContractGroup.controls.hotelPaymentMethodRelation.get('objectState').setValue(ObjectState.Modified);\n    }\n  }\n\n  flagTaxDetailsAsEdited(index) {\n    if (this.taxDetails.value[index].objectState !== ObjectState.Added && this.taxDetails.value[index].objectState !== null) {\n      this.taxDetails.controls[index].get('objectState').setValue(ObjectState.Modified);\n    }\n    if (this.initialTaxDetailsLength !== this.taxDetails.length && index >= this.initialTaxDetailsLength) {\n      this.taxDetails.controls[index].get('objectState').setValue(ObjectState.Added);\n    }\n  }\n  viewPdf() {\n    const byteArray = new Uint8Array(this.fileArray);\n    const blob = new Blob([byteArray], {\n      type: this.file.type\n    });\n    const fileURL = URL.createObjectURL(blob);\n    window.open(fileURL);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/hotel-info/hotel-details/hotel-details.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/amenities/amenities.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/amenities/amenities.component.css\n// module chunks = contracts.module","module.exports = \"<p>\\n  amenities works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/amenities/amenities.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/amenities/amenities.component.html\n// module chunks = contracts.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-amenities',\n  templateUrl: './amenities.component.html',\n  styleUrls: ['./amenities.component.css']\n})\nexport class AmenitiesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/amenities/amenities.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/meal-plan/meal-plan.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/meal-plan/meal-plan.component.css\n// module chunks = contracts.module","module.exports = \"<p>\\n  meal-plan works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/meal-plan/meal-plan.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/meal-plan/meal-plan.component.html\n// module chunks = contracts.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-meal-plan',\n  templateUrl: './meal-plan.component.html',\n  styleUrls: ['./meal-plan.component.css']\n})\nexport class MealPlanComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/meal-plan/meal-plan.component.ts","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/cancellation-policies/cancellation-policies.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/policies/cancellation-policies/cancellation-policies.component.css\n// module chunks = contracts.module","module.exports = \"<p>\\n  cancellation-policies works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/cancellation-policies/cancellation-policies.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/policies/cancellation-policies/cancellation-policies.component.html\n// module chunks = contracts.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cancellation-policies',\n  templateUrl: './cancellation-policies.component.html',\n  styleUrls: ['./cancellation-policies.component.css']\n})\nexport class CancellationPoliciesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/cancellation-policies/cancellation-policies.component.ts","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/cancellation-policy-list/cancellation-policy-list.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/policies/cancellation-policy-list/cancellation-policy-list.component.css\n// module chunks = contracts.module","module.exports = \"<p>\\n  cancellation-policy-list works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/cancellation-policy-list/cancellation-policy-list.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/policies/cancellation-policy-list/cancellation-policy-list.component.html\n// module chunks = contracts.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cancellation-policy-list',\n  templateUrl: './cancellation-policy-list.component.html',\n  styleUrls: ['./cancellation-policy-list.component.css']\n})\nexport class CancellationPolicyListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/cancellation-policy-list/cancellation-policy-list.component.ts","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/child-and-extra-bed-policy-list/child-and-extra-bed-policy-list.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/policies/child-and-extra-bed-policy-list/child-and-extra-bed-policy-list.component.css\n// module chunks = contracts.module","module.exports = \"<p>\\n  child-and-extra-bed-policy-list works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/child-and-extra-bed-policy-list/child-and-extra-bed-policy-list.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/policies/child-and-extra-bed-policy-list/child-and-extra-bed-policy-list.component.html\n// module chunks = contracts.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-child-and-extra-bed-policy-list',\n  templateUrl: './child-and-extra-bed-policy-list.component.html',\n  styleUrls: ['./child-and-extra-bed-policy-list.component.css']\n})\nexport class ChildAndExtraBedPolicyListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/child-and-extra-bed-policy-list/child-and-extra-bed-policy-list.component.ts","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/child-and-extra-bed-policy/child-and-extra-bed-policy.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/policies/child-and-extra-bed-policy/child-and-extra-bed-policy.component.css\n// module chunks = contracts.module","module.exports = \"<p>\\n  child-and-extra-bed-policy works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/child-and-extra-bed-policy/child-and-extra-bed-policy.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/policies/child-and-extra-bed-policy/child-and-extra-bed-policy.component.html\n// module chunks = contracts.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-child-and-extra-bed-policy',\n  templateUrl: './child-and-extra-bed-policy.component.html',\n  styleUrls: ['./child-and-extra-bed-policy.component.css']\n})\nexport class ChildAndExtraBedPolicyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/child-and-extra-bed-policy/child-and-extra-bed-policy.component.ts","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/policy-list/policy-list.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/policies/policy-list/policy-list.component.css\n// module chunks = contracts.module","module.exports = \"<p>\\n  policy-list works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/policy-list/policy-list.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/policies/policy-list/policy-list.component.html\n// module chunks = contracts.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-policy-list',\n  templateUrl: './policy-list.component.html',\n  styleUrls: ['./policy-list.component.css']\n})\nexport class PolicyListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/policies/policy-list/policy-list.component.ts","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/rate-category/rate-category-info/rate-category-info.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/rate-category/rate-category-info/rate-category-info.component.css\n// module chunks = contracts.module","module.exports = \"<p>\\n  rate-category-info works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/rate-category/rate-category-info/rate-category-info.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/rate-category/rate-category-info/rate-category-info.component.html\n// module chunks = contracts.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rate-category-info',\n  templateUrl: './rate-category-info.component.html',\n  styleUrls: ['./rate-category-info.component.css']\n})\nexport class RateCategoryInfoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/rate-category/rate-category-info/rate-category-info.component.ts","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/rate-category/rate-category-list/rate-category-list.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/rate-category/rate-category-list/rate-category-list.component.css\n// module chunks = contracts.module","module.exports = \"<p>\\n  rate-category-list works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/rate-category/rate-category-list/rate-category-list.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/rate-category/rate-category-list/rate-category-list.component.html\n// module chunks = contracts.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rate-category-list',\n  templateUrl: './rate-category-list.component.html',\n  styleUrls: ['./rate-category-list.component.css']\n})\nexport class RateCategoryListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/rate-category/rate-category-list/rate-category-list.component.ts","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/room-type/room-type-info/room-type-info.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/room-type/room-type-info/room-type-info.component.css\n// module chunks = contracts.module","module.exports = \"<p>\\n  room-type-info works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/room-type/room-type-info/room-type-info.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/room-type/room-type-info/room-type-info.component.html\n// module chunks = contracts.module","import { Component, OnInit } from '@angular/core';\nimport { ContractUrlNotificationService } from '../../../../../common/extranet-shared/services/contracts/contract-url-notification.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-room-type-info',\n  templateUrl: './room-type-info.component.html',\n  styleUrls: ['./room-type-info.component.css']\n})\nexport class RoomTypeInfoComponent implements OnInit {\n\n  constructor(public contractUrlNotificationService: ContractUrlNotificationService, private activatedRoute: ActivatedRoute) {\n    contractUrlNotificationService.changeURLRoute(activatedRoute.snapshot.url[0].path);\n }\n\n ngOnInit() {\n  // this.contractUrlNotificationService.changeURLRoute(this.activatedRoute.snapshot.url[0].path);\n }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/room-type/room-type-info/room-type-info.component.ts","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/room-type/room-type-list/room-type-list.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/room-type/room-type-list/room-type-list.component.css\n// module chunks = contracts.module","module.exports = \"<p>\\n  room-type-list works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/room-type/room-type-list/room-type-list.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/rate/room-type/room-type-list/room-type-list.component.html\n// module chunks = contracts.module","import { Component, OnInit } from '@angular/core';\nimport { ContractUrlNotificationService } from '../../../../../common/extranet-shared/services/contracts/contract-url-notification.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-room-type-list',\n  templateUrl: './room-type-list.component.html',\n  styleUrls: ['./room-type-list.component.css']\n})\nexport class RoomTypeListComponent implements OnInit {\n  constructor(public contractUrlNotificationService: ContractUrlNotificationService, private activatedRoute: ActivatedRoute) {\n     contractUrlNotificationService.changeURLRoute(activatedRoute.snapshot.url[0].path);\n  }\n\n  ngOnInit() {\n    this.contractUrlNotificationService.changeURLRoute(this.activatedRoute.snapshot.url[0].path);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/rate/room-type/room-type-list/room-type-list.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/redirect/redirect.component.css\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/redirect/redirect.component.css\n// module chunks = contracts.module","module.exports = \"<p>\\n  redirect works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/redirect/redirect.component.html\n// module id = ../../../../../src/app/extranet/contract-mgmt/contracts/redirect/redirect.component.html\n// module chunks = contracts.module","import { Component, OnInit } from '@angular/core';\nimport { ContractDataService } from '../../../common/extranet-shared/services/contracts/contract-data.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CONSTANTS } from '../../../../common/constants';\n\nconst read = CONSTANTS.operation.read;\nconst edit = CONSTANTS.operation.edit;\nconst create = CONSTANTS.operation.create;\n@Component({\n  selector: 'app-redirect',\n  templateUrl: './redirect.component.html',\n  styleUrls: ['./redirect.component.css']\n})\nexport class RedirectComponent implements OnInit {\n\n  constructor(public contractDataService: ContractDataService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    const contractId = +this.activatedRoute.snapshot.params['contractid'];\n    console.log('Redirect contractId-' + contractId);\n    if (this.contractDataService.showFacility) {\n      this.router.navigate(['/contractmgmt/contract', contractId, edit, 'facilitiesservices']);\n    } else {\n      this.router.navigate(['/contractmgmt/contract', contractId, edit, 'roomtypelist']);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/extranet/contract-mgmt/contracts/redirect/redirect.component.ts","/** PURE_IMPORTS_START ._Subject,._Subscription PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subject } from './Subject';\nimport { Subscription } from './Subscription';\n/**\n * @class AsyncSubject<T>\n */\nexport var AsyncSubject = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AsyncSubject, _super);\n    function AsyncSubject() {\n        _super.apply(this, arguments);\n        this.value = null;\n        this.hasNext = false;\n        this.hasCompleted = false;\n    }\n    AsyncSubject.prototype._subscribe = function (subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    AsyncSubject.prototype.next = function (value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    };\n    AsyncSubject.prototype.error = function (error) {\n        if (!this.hasCompleted) {\n            _super.prototype.error.call(this, error);\n        }\n    };\n    AsyncSubject.prototype.complete = function () {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            _super.prototype.next.call(this, this.value);\n        }\n        _super.prototype.complete.call(this);\n    };\n    return AsyncSubject;\n}(Subject));\n//# sourceMappingURL=AsyncSubject.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/AsyncSubject.js\n// module id = ../../../../rxjs/_esm5/AsyncSubject.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START ._Subject,._scheduler_queue,._Subscription,._operators_observeOn,._util_ObjectUnsubscribedError,._SubjectSubscription PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * @class ReplaySubject<T>\n */\nexport var ReplaySubject = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) {\n            bufferSize = Number.POSITIVE_INFINITY;\n        }\n        if (windowTime === void 0) {\n            windowTime = Number.POSITIVE_INFINITY;\n        }\n        _super.call(this);\n        this.scheduler = scheduler;\n        this._events = [];\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n    }\n    ReplaySubject.prototype.next = function (value) {\n        var now = this._getNow();\n        this._events.push(new ReplayEvent(now, value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _events = this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        var len = _events.length;\n        for (var i = 0; i < len && !subscriber.closed; i++) {\n            subscriber.next(_events[i].value);\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject));\nvar ReplayEvent = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/ReplaySubject.js\n// module id = ../../../../rxjs/_esm5/ReplaySubject.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._util_isArray,.._observable_ArrayObservable,.._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { isArray } from '../util/isArray';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    // if the only argument is an array, it was most likely called with\n    // `race([obs1, obs2, ...])`\n    if (observables.length === 1) {\n        if (isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return new ArrayObservable(observables).lift(new RaceOperator());\n}\nexport var RaceOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function RaceOperator() {\n    }\n    RaceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    };\n    return RaceOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var RaceSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(RaceSubscriber, _super);\n    function RaceSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasFirst = false;\n        this.observables = [];\n        this.subscriptions = [];\n    }\n    RaceSubscriber.prototype._next = function (observable) {\n        this.observables.push(observable);\n    };\n    RaceSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (var i = 0; i < len && !this.hasFirst; i++) {\n                var observable = observables[i];\n                var subscription = subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    };\n    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    var subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    };\n    return RaceSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=race.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/observable/race.js\n// module id = ../../../../rxjs/_esm5/observable/race.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer(closingNotifier) {\n    return function bufferOperatorFunction(source) {\n        return source.lift(new BufferOperator(closingNotifier));\n    };\n}\nvar BufferOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function BufferOperator(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    BufferOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n    };\n    return BufferOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(BufferSubscriber, _super);\n    function BufferSubscriber(destination, closingNotifier) {\n        _super.call(this, destination);\n        this.buffer = [];\n        this.add(subscribeToResult(this, closingNotifier));\n    }\n    BufferSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    };\n    return BufferSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=buffer.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/buffer.js\n// module id = ../../../../rxjs/_esm5/operators/buffer.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) {\n        startBufferEvery = null;\n    }\n    return function bufferCountOperatorFunction(source) {\n        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n    };\n}\nvar BufferCountOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function BufferCountOperator(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\n            this.subscriberClass = BufferCountSubscriber;\n        }\n        else {\n            this.subscriberClass = BufferSkipCountSubscriber;\n        }\n    }\n    BufferCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n    };\n    return BufferCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferCountSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(BufferCountSubscriber, _super);\n    function BufferCountSubscriber(destination, bufferSize) {\n        _super.call(this, destination);\n        this.bufferSize = bufferSize;\n        this.buffer = [];\n    }\n    BufferCountSubscriber.prototype._next = function (value) {\n        var buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    };\n    BufferCountSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferCountSubscriber;\n}(Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSkipCountSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(BufferSkipCountSubscriber, _super);\n    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\n        _super.call(this, destination);\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        this.buffers = [];\n        this.count = 0;\n    }\n    BufferSkipCountSubscriber.prototype._next = function (value) {\n        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (var i = buffers.length; i--;) {\n            var buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    };\n    BufferSkipCountSubscriber.prototype._complete = function () {\n        var _a = this, buffers = _a.buffers, destination = _a.destination;\n        while (buffers.length > 0) {\n            var buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferSkipCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=bufferCount.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/bufferCount.js\n// module id = ../../../../rxjs/_esm5/operators/bufferCount.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._scheduler_async,.._Subscriber,.._util_isScheduler PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\n/* tslint:enable:max-line-length */\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = async;\n    if (isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return function bufferTimeOperatorFunction(source) {\n        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n    };\n}\nvar BufferTimeOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n    }\n    BufferTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\n    };\n    return BufferTimeOperator;\n}());\nvar Context = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function Context() {\n        this.buffer = [];\n    }\n    return Context;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferTimeSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(BufferTimeSubscriber, _super);\n    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        _super.call(this, destination);\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n        this.contexts = [];\n        var context = this.openContext();\n        this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n        if (this.timespanOnly) {\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n        else {\n            var closeState = { subscriber: this, context: context };\n            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: this, scheduler: scheduler };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n    }\n    BufferTimeSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        var filledBufferContext;\n        for (var i = 0; i < len; i++) {\n            var context = contexts[i];\n            var buffer = context.buffer;\n            buffer.push(value);\n            if (buffer.length == this.maxBufferSize) {\n                filledBufferContext = context;\n            }\n        }\n        if (filledBufferContext) {\n            this.onBufferFull(filledBufferContext);\n        }\n    };\n    BufferTimeSubscriber.prototype._error = function (err) {\n        this.contexts.length = 0;\n        _super.prototype._error.call(this, err);\n    };\n    BufferTimeSubscriber.prototype._complete = function () {\n        var _a = this, contexts = _a.contexts, destination = _a.destination;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            destination.next(context.buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferTimeSubscriber.prototype._unsubscribe = function () {\n        this.contexts = null;\n    };\n    BufferTimeSubscriber.prototype.onBufferFull = function (context) {\n        this.closeContext(context);\n        var closeAction = context.closeAction;\n        closeAction.unsubscribe();\n        this.remove(closeAction);\n        if (!this.closed && this.timespanOnly) {\n            context = this.openContext();\n            var bufferTimeSpan = this.bufferTimeSpan;\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    };\n    BufferTimeSubscriber.prototype.openContext = function () {\n        var context = new Context();\n        this.contexts.push(context);\n        return context;\n    };\n    BufferTimeSubscriber.prototype.closeContext = function (context) {\n        this.destination.next(context.buffer);\n        var contexts = this.contexts;\n        var spliceIndex = contexts ? contexts.indexOf(context) : -1;\n        if (spliceIndex >= 0) {\n            contexts.splice(contexts.indexOf(context), 1);\n        }\n    };\n    return BufferTimeSubscriber;\n}(Subscriber));\nfunction dispatchBufferTimeSpanOnly(state) {\n    var subscriber = state.subscriber;\n    var prevContext = state.context;\n    if (prevContext) {\n        subscriber.closeContext(prevContext);\n    }\n    if (!subscriber.closed) {\n        state.context = subscriber.openContext();\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;\n    var context = subscriber.openContext();\n    var action = this;\n    if (!subscriber.closed) {\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    var subscriber = arg.subscriber, context = arg.context;\n    subscriber.closeContext(context);\n}\n//# sourceMappingURL=bufferTime.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/bufferTime.js\n// module id = ../../../../rxjs/_esm5/operators/bufferTime.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscription,.._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle(openings, closingSelector) {\n    return function bufferToggleOperatorFunction(source) {\n        return source.lift(new BufferToggleOperator(openings, closingSelector));\n    };\n}\nvar BufferToggleOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function BufferToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    BufferToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return BufferToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferToggleSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(BufferToggleSubscriber, _super);\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\n        _super.call(this, destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(subscribeToResult(this, openings));\n    }\n    BufferToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        for (var i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    };\n    BufferToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._error.call(this, err);\n    };\n    BufferToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            this.destination.next(context.buffer);\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._complete.call(this);\n    };\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    };\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.closeBuffer(innerSub.context);\n    };\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\n        try {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n        var contexts = this.contexts;\n        if (contexts && context) {\n            var buffer = context.buffer, subscription = context.subscription;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    };\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n        var contexts = this.contexts;\n        var buffer = [];\n        var subscription = new Subscription();\n        var context = { buffer: buffer, subscription: subscription };\n        contexts.push(context);\n        var innerSubscription = subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    };\n    return BufferToggleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=bufferToggle.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/bufferToggle.js\n// module id = ../../../../rxjs/_esm5/operators/bufferToggle.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscription,.._util_tryCatch,.._util_errorObject,.._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen(closingSelector) {\n    return function (source) {\n        return source.lift(new BufferWhenOperator(closingSelector));\n    };\n}\nvar BufferWhenOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function BufferWhenOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    };\n    return BufferWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferWhenSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(BufferWhenSubscriber, _super);\n    function BufferWhenSubscriber(destination, closingSelector) {\n        _super.call(this, destination);\n        this.closingSelector = closingSelector;\n        this.subscribing = false;\n        this.openBuffer();\n    }\n    BufferWhenSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferWhenSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferWhenSubscriber.prototype._unsubscribe = function () {\n        this.buffer = null;\n        this.subscribing = false;\n    };\n    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openBuffer();\n    };\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    };\n    BufferWhenSubscriber.prototype.openBuffer = function () {\n        var closingSubscription = this.closingSubscription;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        var buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        var closingNotifier = tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject) {\n            this.error(errorObject.e);\n        }\n        else {\n            closingSubscription = new Subscription();\n            this.closingSubscription = closingSubscription;\n            this.add(closingSubscription);\n            this.subscribing = true;\n            closingSubscription.add(subscribeToResult(this, closingNotifier));\n            this.subscribing = false;\n        }\n    };\n    return BufferWhenSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=bufferWhen.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/bufferWhen.js\n// module id = ../../../../rxjs/_esm5/operators/bufferWhen.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._operators_combineLatest PURE_IMPORTS_END */\nimport { CombineLatestOperator } from '../operators/combineLatest';\nexport function combineAll(project) {\n    return function (source) { return source.lift(new CombineLatestOperator(project)); };\n}\n//# sourceMappingURL=combineAll.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/combineAll.js\n// module id = ../../../../rxjs/_esm5/operators/combineAll.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._observable_concat PURE_IMPORTS_END */\nimport { concat as concatStatic } from '../observable/concat';\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nexport function concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(concatStatic.apply(void 0, [source].concat(observables))); };\n}\n//# sourceMappingURL=concat.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/concat.js\n// module id = ../../../../rxjs/_esm5/operators/concat.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START ._concatMap PURE_IMPORTS_END */\nimport { concatMap } from './concatMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nexport function concatMapTo(innerObservable, resultSelector) {\n    return concatMap(function () { return innerObservable; }, resultSelector);\n}\n//# sourceMappingURL=concatMapTo.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/concatMapTo.js\n// module id = ../../../../rxjs/_esm5/operators/concatMapTo.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count(predicate) {\n    return function (source) { return source.lift(new CountOperator(predicate, source)); };\n}\nvar CountOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function CountOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    CountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    };\n    return CountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CountSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(CountSubscriber, _super);\n    function CountSubscriber(destination, predicate, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.count = 0;\n        this.index = 0;\n    }\n    CountSubscriber.prototype._next = function (value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._tryPredicate = function (value) {\n        var result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._complete = function () {\n        this.destination.next(this.count);\n        this.destination.complete();\n    };\n    return CountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=count.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/count.js\n// module id = ../../../../rxjs/_esm5/operators/count.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce(durationSelector) {\n    return function (source) { return source.lift(new DebounceOperator(durationSelector)); };\n}\nvar DebounceOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function DebounceOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    DebounceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    };\n    return DebounceOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DebounceSubscriber, _super);\n    function DebounceSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n        this.durationSubscription = null;\n    }\n    DebounceSubscriber.prototype._next = function (value) {\n        try {\n            var result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DebounceSubscriber.prototype._complete = function () {\n        this.emitValue();\n        this.destination.complete();\n    };\n    DebounceSubscriber.prototype._tryNext = function (value, duration) {\n        var subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = subscribeToResult(this, duration);\n        if (!subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    };\n    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            var value = this.value;\n            var subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = null;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            this.value = null;\n            this.hasValue = false;\n            _super.prototype._next.call(this, value);\n        }\n    };\n    return DebounceSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=debounce.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/debounce.js\n// module id = ../../../../rxjs/_esm5/operators/debounce.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber,.._Observable,.._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return function (source) {\n            return new SubscriptionDelayObservable(source, subscriptionDelay)\n                .lift(new DelayWhenOperator(delayDurationSelector));\n        };\n    }\n    return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };\n}\nvar DelayWhenOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function DelayWhenOperator(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    DelayWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    };\n    return DelayWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelayWhenSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DelayWhenSubscriber, _super);\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\n        _super.call(this, destination);\n        this.delayDurationSelector = delayDurationSelector;\n        this.completed = false;\n        this.delayNotifierSubscriptions = [];\n        this.values = [];\n    }\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        var value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype._next = function (value) {\n        try {\n            var delayNotifier = this.delayDurationSelector(value);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DelayWhenSubscriber.prototype._complete = function () {\n        this.completed = true;\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n        subscription.unsubscribe();\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        var value = null;\n        if (subscriptionIdx !== -1) {\n            value = this.values[subscriptionIdx];\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n            this.values.splice(subscriptionIdx, 1);\n        }\n        return value;\n    };\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n        var notifierSubscription = subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            this.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n        this.values.push(value);\n    };\n    DelayWhenSubscriber.prototype.tryComplete = function () {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    };\n    return DelayWhenSubscriber;\n}(OuterSubscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelayObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SubscriptionDelayObservable, _super);\n    function SubscriptionDelayObservable(source, subscriptionDelay) {\n        _super.call(this);\n        this.source = source;\n        this.subscriptionDelay = subscriptionDelay;\n    }\n    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    };\n    return SubscriptionDelayObservable;\n}(Observable));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelaySubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SubscriptionDelaySubscriber, _super);\n    function SubscriptionDelaySubscriber(parent, source) {\n        _super.call(this);\n        this.parent = parent;\n        this.source = source;\n        this.sourceSubscribed = false;\n    }\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    };\n    SubscriptionDelaySubscriber.prototype._complete = function () {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    };\n    return SubscriptionDelaySubscriber;\n}(Subscriber));\n//# sourceMappingURL=delayWhen.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/delayWhen.js\n// module id = ../../../../rxjs/_esm5/operators/delayWhen.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize() {\n    return function dematerializeOperatorFunction(source) {\n        return source.lift(new DeMaterializeOperator());\n    };\n}\nvar DeMaterializeOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function DeMaterializeOperator() {\n    }\n    DeMaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DeMaterializeSubscriber(subscriber));\n    };\n    return DeMaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DeMaterializeSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DeMaterializeSubscriber, _super);\n    function DeMaterializeSubscriber(destination) {\n        _super.call(this, destination);\n    }\n    DeMaterializeSubscriber.prototype._next = function (value) {\n        value.observe(this.destination);\n    };\n    return DeMaterializeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=dematerialize.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/dematerialize.js\n// module id = ../../../../rxjs/_esm5/operators/dematerialize.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult,.._util_Set PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { Set } from '../util/Set';\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct(keySelector, flushes) {\n    return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };\n}\nvar DistinctOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function DistinctOperator(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    DistinctOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    };\n    return DistinctOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var DistinctSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DistinctSubscriber, _super);\n    function DistinctSubscriber(destination, keySelector, flushes) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.values = new Set();\n        if (flushes) {\n            this.add(subscribeToResult(this, flushes));\n        }\n    }\n    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values.clear();\n    };\n    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DistinctSubscriber.prototype._next = function (value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    };\n    DistinctSubscriber.prototype._useKeySelector = function (value) {\n        var key;\n        var destination = this.destination;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    };\n    DistinctSubscriber.prototype._finalizeNext = function (key, value) {\n        var values = this.values;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    };\n    return DistinctSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=distinct.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/distinct.js\n// module id = ../../../../rxjs/_esm5/operators/distinct.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber,.._util_tryCatch,.._util_errorObject PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged(compare, keySelector) {\n    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };\n}\nvar DistinctUntilChangedOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctUntilChangedSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch(this.keySelector)(value);\n            if (key === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch(this.compare)(this.key, key);\n            if (result === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/distinctUntilChanged.js\n// module id = ../../../../rxjs/_esm5/operators/distinctUntilChanged.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START ._distinctUntilChanged PURE_IMPORTS_END */\nimport { distinctUntilChanged } from './distinctUntilChanged';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nexport function distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });\n}\n//# sourceMappingURL=distinctUntilKeyChanged.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/distinctUntilKeyChanged.js\n// module id = ../../../../rxjs/_esm5/operators/distinctUntilKeyChanged.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber,.._util_ArgumentOutOfRangeError PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt(index, defaultValue) {\n    return function (source) { return source.lift(new ElementAtOperator(index, defaultValue)); };\n}\nvar ElementAtOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ElementAtOperator(index, defaultValue) {\n        this.index = index;\n        this.defaultValue = defaultValue;\n        if (index < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    ElementAtOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n    };\n    return ElementAtOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ElementAtSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ElementAtSubscriber, _super);\n    function ElementAtSubscriber(destination, index, defaultValue) {\n        _super.call(this, destination);\n        this.index = index;\n        this.defaultValue = defaultValue;\n    }\n    ElementAtSubscriber.prototype._next = function (x) {\n        if (this.index-- === 0) {\n            this.destination.next(x);\n            this.destination.complete();\n        }\n    };\n    ElementAtSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index >= 0) {\n            if (typeof this.defaultValue !== 'undefined') {\n                destination.next(this.defaultValue);\n            }\n            else {\n                destination.error(new ArgumentOutOfRangeError);\n            }\n        }\n        destination.complete();\n    };\n    return ElementAtSubscriber;\n}(Subscriber));\n//# sourceMappingURL=elementAt.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/elementAt.js\n// module id = ../../../../rxjs/_esm5/operators/elementAt.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust() {\n    return function (source) { return source.lift(new SwitchFirstOperator()); };\n}\nvar SwitchFirstOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SwitchFirstOperator() {\n    }\n    SwitchFirstOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    };\n    return SwitchFirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SwitchFirstSubscriber, _super);\n    function SwitchFirstSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasCompleted = false;\n        this.hasSubscription = false;\n    }\n    SwitchFirstSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(subscribeToResult(this, value));\n        }\n    };\n    SwitchFirstSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=exhaust.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/exhaust.js\n// module id = ../../../../rxjs/_esm5/operators/exhaust.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap(project, resultSelector) {\n    return function (source) { return source.lift(new SwitchFirstMapOperator(project, resultSelector)); };\n}\nvar SwitchFirstMapOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SwitchFirstMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchFirstMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchFirstMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstMapSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SwitchFirstMapSubscriber, _super);\n    function SwitchFirstMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.hasSubscription = false;\n        this.hasCompleted = false;\n        this.index = 0;\n    }\n    SwitchFirstMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.tryNext = function (value) {\n        var index = this.index++;\n        var destination = this.destination;\n        try {\n            var result = this.project(value, index);\n            this.hasSubscription = true;\n            this.add(subscribeToResult(this, result, value, index));\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        try {\n            var result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n            destination.next(result);\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    SwitchFirstMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=exhaustMap.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/exhaustMap.js\n// module id = ../../../../rxjs/_esm5/operators/exhaustMap.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._util_tryCatch,.._util_errorObject,.._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (scheduler === void 0) {\n        scheduler = undefined;\n    }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };\n}\nexport var ExpandOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ExpandOperator(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    ExpandOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    };\n    return ExpandOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var ExpandSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ExpandSubscriber, _super);\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\n        _super.call(this, destination);\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n        this.index = 0;\n        this.active = 0;\n        this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            this.buffer = [];\n        }\n    }\n    ExpandSubscriber.dispatch = function (arg) {\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\n        subscriber.subscribeToProjection(result, value, index);\n    };\n    ExpandSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        var index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            var result = tryCatch(this.project)(value, index);\n            if (result === errorObject) {\n                destination.error(errorObject.e);\n            }\n            else if (!this.scheduler) {\n                this.subscribeToProjection(result, value, index);\n            }\n            else {\n                var state = { subscriber: this, result: result, value: value, index: index };\n                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n        this.active++;\n        this.add(subscribeToResult(this, result, value, index));\n    };\n    ExpandSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._next(innerValue);\n    };\n    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return ExpandSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=expand.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/expand.js\n// module id = ../../../../rxjs/_esm5/operators/expand.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };\n}\nexport var FindValueOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    FindValueOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    };\n    return FindValueOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var FindValueSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(FindValueSubscriber, _super);\n    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n        this.index = 0;\n    }\n    FindValueSubscriber.prototype.notifyComplete = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    FindValueSubscriber.prototype._next = function (value) {\n        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;\n        var index = this.index++;\n        try {\n            var result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    FindValueSubscriber.prototype._complete = function () {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    };\n    return FindValueSubscriber;\n}(Subscriber));\n//# sourceMappingURL=find.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/find.js\n// module id = ../../../../rxjs/_esm5/operators/find.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._operators_find PURE_IMPORTS_END */\nimport { FindValueOperator } from '../operators/find';\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nexport function findIndex(predicate, thisArg) {\n    return function (source) { return source.lift(new FindValueOperator(predicate, source, true, thisArg)); };\n}\n//# sourceMappingURL=findIndex.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/findIndex.js\n// module id = ../../../../rxjs/_esm5/operators/findIndex.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber,.._Subscription,.._Observable,.._Subject,.._util_Map,.._util_FastMap PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Map } from '../util/Map';\nimport { FastMap } from '../util/FastMap';\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return function (source) {\n        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n    };\n}\nvar GroupByOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    GroupByOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    };\n    return GroupByOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupBySubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = typeof key === 'string' ? new FastMap() : new Map();\n        }\n        var group = groups.get(key);\n        var element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = this.subjectSelector ? this.subjectSelector() : new Subject();\n            groups.set(key, group);\n            var groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                var duration = void 0;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupDurationSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        _super.call(this, group);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this.complete();\n    };\n    GroupDurationSubscriber.prototype._unsubscribe = function () {\n        var _a = this, parent = _a.parent, key = _a.key;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    };\n    return GroupDurationSubscriber;\n}(Subscriber));\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport var GroupedObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(GroupedObservable, _super);\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        _super.call(this);\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerRefCountSubscription = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        _super.call(this);\n        this.parent = parent;\n        parent.count++;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription));\n//# sourceMappingURL=groupBy.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/groupBy.js\n// module id = ../../../../rxjs/_esm5/operators/groupBy.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber,.._util_noop PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements() {\n    return function ignoreElementsOperatorFunction(source) {\n        return source.lift(new IgnoreElementsOperator());\n    };\n}\nvar IgnoreElementsOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function IgnoreElementsOperator() {\n    }\n    IgnoreElementsOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n    };\n    return IgnoreElementsOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IgnoreElementsSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(IgnoreElementsSubscriber, _super);\n    function IgnoreElementsSubscriber() {\n        _super.apply(this, arguments);\n    }\n    IgnoreElementsSubscriber.prototype._next = function (unused) {\n        noop();\n    };\n    return IgnoreElementsSubscriber;\n}(Subscriber));\n//# sourceMappingURL=ignoreElements.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/ignoreElements.js\n// module id = ../../../../rxjs/_esm5/operators/ignoreElements.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport { audit } from './audit';\nexport { auditTime } from './auditTime';\nexport { buffer } from './buffer';\nexport { bufferCount } from './bufferCount';\nexport { bufferTime } from './bufferTime';\nexport { bufferToggle } from './bufferToggle';\nexport { bufferWhen } from './bufferWhen';\nexport { catchError } from './catchError';\nexport { combineAll } from './combineAll';\nexport { combineLatest } from './combineLatest';\nexport { concat } from './concat';\nexport { concatAll } from './concatAll';\nexport { concatMap } from './concatMap';\nexport { concatMapTo } from './concatMapTo';\nexport { count } from './count';\nexport { debounce } from './debounce';\nexport { debounceTime } from './debounceTime';\nexport { defaultIfEmpty } from './defaultIfEmpty';\nexport { delay } from './delay';\nexport { delayWhen } from './delayWhen';\nexport { dematerialize } from './dematerialize';\nexport { distinct } from './distinct';\nexport { distinctUntilChanged } from './distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './distinctUntilKeyChanged';\nexport { elementAt } from './elementAt';\nexport { every } from './every';\nexport { exhaust } from './exhaust';\nexport { exhaustMap } from './exhaustMap';\nexport { expand } from './expand';\nexport { filter } from './filter';\nexport { finalize } from './finalize';\nexport { find } from './find';\nexport { findIndex } from './findIndex';\nexport { first } from './first';\nexport { groupBy } from './groupBy';\nexport { ignoreElements } from './ignoreElements';\nexport { isEmpty } from './isEmpty';\nexport { last } from './last';\nexport { map } from './map';\nexport { mapTo } from './mapTo';\nexport { materialize } from './materialize';\nexport { max } from './max';\nexport { merge } from './merge';\nexport { mergeAll } from './mergeAll';\nexport { mergeMap } from './mergeMap';\nexport { mergeMap as flatMap } from './mergeMap';\nexport { mergeMapTo } from './mergeMapTo';\nexport { mergeScan } from './mergeScan';\nexport { min } from './min';\nexport { multicast } from './multicast';\nexport { observeOn } from './observeOn';\nexport { onErrorResumeNext } from './onErrorResumeNext';\nexport { pairwise } from './pairwise';\nexport { partition } from './partition';\nexport { pluck } from './pluck';\nexport { publish } from './publish';\nexport { publishBehavior } from './publishBehavior';\nexport { publishLast } from './publishLast';\nexport { publishReplay } from './publishReplay';\nexport { race } from './race';\nexport { reduce } from './reduce';\nexport { repeat } from './repeat';\nexport { repeatWhen } from './repeatWhen';\nexport { retry } from './retry';\nexport { retryWhen } from './retryWhen';\nexport { refCount } from './refCount';\nexport { sample } from './sample';\nexport { sampleTime } from './sampleTime';\nexport { scan } from './scan';\nexport { sequenceEqual } from './sequenceEqual';\nexport { share } from './share';\nexport { shareReplay } from './shareReplay';\nexport { single } from './single';\nexport { skip } from './skip';\nexport { skipLast } from './skipLast';\nexport { skipUntil } from './skipUntil';\nexport { skipWhile } from './skipWhile';\nexport { startWith } from './startWith';\n/**\n * TODO(https://github.com/ReactiveX/rxjs/issues/2900): Add back subscribeOn once it can be\n * treeshaken. Currently if this export is added back, it\n * forces apps to bring in asap scheduler along with\n * Immediate, root, and other supporting code.\n */\n// export { subscribeOn } from './subscribeOn';\nexport { switchAll } from './switchAll';\nexport { switchMap } from './switchMap';\nexport { switchMapTo } from './switchMapTo';\nexport { take } from './take';\nexport { takeLast } from './takeLast';\nexport { takeUntil } from './takeUntil';\nexport { takeWhile } from './takeWhile';\nexport { tap } from './tap';\nexport { throttle } from './throttle';\nexport { throttleTime } from './throttleTime';\nexport { timeInterval } from './timeInterval';\nexport { timeout } from './timeout';\nexport { timeoutWith } from './timeoutWith';\nexport { timestamp } from './timestamp';\nexport { toArray } from './toArray';\nexport { window } from './window';\nexport { windowCount } from './windowCount';\nexport { windowTime } from './windowTime';\nexport { windowToggle } from './windowToggle';\nexport { windowWhen } from './windowWhen';\nexport { withLatestFrom } from './withLatestFrom';\nexport { zip } from './zip';\nexport { zipAll } from './zipAll';\n//# sourceMappingURL=index.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/index.js\n// module id = ../../../../rxjs/_esm5/operators/index.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nexport function isEmpty() {\n    return function (source) { return source.lift(new IsEmptyOperator()); };\n}\nvar IsEmptyOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function IsEmptyOperator() {\n    }\n    IsEmptyOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new IsEmptySubscriber(observer));\n    };\n    return IsEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IsEmptySubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(IsEmptySubscriber, _super);\n    function IsEmptySubscriber(destination) {\n        _super.call(this, destination);\n    }\n    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {\n        var destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    };\n    IsEmptySubscriber.prototype._next = function (value) {\n        this.notifyComplete(false);\n    };\n    IsEmptySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return IsEmptySubscriber;\n}(Subscriber));\n//# sourceMappingURL=isEmpty.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/isEmpty.js\n// module id = ../../../../rxjs/_esm5/operators/isEmpty.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo(value) {\n    return function (source) { return source.lift(new MapToOperator(value)); };\n}\nvar MapToOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapToSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        _super.call(this, destination);\n        this.value = value;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber));\n//# sourceMappingURL=mapTo.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/mapTo.js\n// module id = ../../../../rxjs/_esm5/operators/mapTo.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber,.._Notification PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize() {\n    return function materializeOperatorFunction(source) {\n        return source.lift(new MaterializeOperator());\n    };\n}\nvar MaterializeOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MaterializeOperator() {\n    }\n    MaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MaterializeSubscriber(subscriber));\n    };\n    return MaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MaterializeSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(MaterializeSubscriber, _super);\n    function MaterializeSubscriber(destination) {\n        _super.call(this, destination);\n    }\n    MaterializeSubscriber.prototype._next = function (value) {\n        this.destination.next(Notification.createNext(value));\n    };\n    MaterializeSubscriber.prototype._error = function (err) {\n        var destination = this.destination;\n        destination.next(Notification.createError(err));\n        destination.complete();\n    };\n    MaterializeSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        destination.next(Notification.createComplete());\n        destination.complete();\n    };\n    return MaterializeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=materialize.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/materialize.js\n// module id = ../../../../rxjs/_esm5/operators/materialize.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START ._reduce PURE_IMPORTS_END */\nimport { reduce } from './reduce';\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nexport function max(comparer) {\n    var max = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }\n        : function (x, y) { return x > y ? x : y; };\n    return reduce(max);\n}\n//# sourceMappingURL=max.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/max.js\n// module id = ../../../../rxjs/_esm5/operators/max.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return function (source) { return source.lift(new MergeMapToOperator(innerObservable, resultSelector, concurrent)); };\n}\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nexport var MergeMapToOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MergeMapToOperator(ish, resultSelector, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapToOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n    };\n    return MergeMapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var MergeMapToSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(MergeMapToSubscriber, _super);\n    function MergeMapToSubscriber(destination, ish, resultSelector, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        _super.call(this, destination);\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapToSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var resultSelector = this.resultSelector;\n            var index = this.index++;\n            var ish = this.ish;\n            var destination = this.destination;\n            this.active++;\n            this._innerSub(ish, destination, resultSelector, value, index);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapToSubscriber.prototype._innerSub = function (ish, destination, resultSelector, value, index) {\n        this.add(subscribeToResult(this, ish, value, index));\n    };\n    MergeMapToSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    MergeMapToSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    MergeMapToSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    MergeMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapToSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=mergeMapTo.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/mergeMapTo.js\n// module id = ../../../../rxjs/_esm5/operators/mergeMapTo.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._util_tryCatch,.._util_errorObject,.._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };\n}\nexport var MergeScanOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MergeScanOperator(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    MergeScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    };\n    return MergeScanOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var MergeScanSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(MergeScanSubscriber, _super);\n    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this.acc = acc;\n        this.concurrent = concurrent;\n        this.hasValue = false;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeScanSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var index = this.index++;\n            var ish = tryCatch(this.accumulator)(this.acc, value);\n            var destination = this.destination;\n            if (ish === errorObject) {\n                destination.error(errorObject.e);\n            }\n            else {\n                this.active++;\n                this._innerSub(ish, value, index);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult(this, ish, value, index));\n    };\n    MergeScanSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var destination = this.destination;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    };\n    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    return MergeScanSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=mergeScan.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/mergeScan.js\n// module id = ../../../../rxjs/_esm5/operators/mergeScan.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START ._reduce PURE_IMPORTS_END */\nimport { reduce } from './reduce';\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nexport function min(comparer) {\n    var min = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }\n        : function (x, y) { return x < y ? x : y; };\n    return reduce(min);\n}\n//# sourceMappingURL=min.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/min.js\n// module id = ../../../../rxjs/_esm5/operators/min.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._observable_FromObservable,.._util_isArray,.._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { FromObservable } from '../observable/FromObservable';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\nexport function onErrorResumeNext() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i - 0] = arguments[_i];\n    }\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };\n}\n/* tslint:enable:max-line-length */\nexport function onErrorResumeNextStatic() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i - 0] = arguments[_i];\n    }\n    var source = null;\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    source = nextSources.shift();\n    return new FromObservable(source, null).lift(new OnErrorResumeNextOperator(nextSources));\n}\nvar OnErrorResumeNextOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function OnErrorResumeNextOperator(nextSources) {\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    };\n    return OnErrorResumeNextOperator;\n}());\nvar OnErrorResumeNextSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(OnErrorResumeNextSubscriber, _super);\n    function OnErrorResumeNextSubscriber(destination, nextSources) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._error = function (err) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._complete = function () {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\n        var next = this.nextSources.shift();\n        if (next) {\n            this.add(subscribeToResult(this, next));\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return OnErrorResumeNextSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=onErrorResumeNext.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/onErrorResumeNext.js\n// module id = ../../../../rxjs/_esm5/operators/onErrorResumeNext.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise() {\n    return function (source) { return source.lift(new PairwiseOperator()); };\n}\nvar PairwiseOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function PairwiseOperator() {\n    }\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar PairwiseSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasPrev = false;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    };\n    return PairwiseSubscriber;\n}(Subscriber));\n//# sourceMappingURL=pairwise.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/pairwise.js\n// module id = ../../../../rxjs/_esm5/operators/pairwise.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._util_not,._filter PURE_IMPORTS_END */\nimport { not } from '../util/not';\nimport { filter } from './filter';\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nexport function partition(predicate, thisArg) {\n    return function (source) {\n        return [\n            filter(predicate, thisArg)(source),\n            filter(not(predicate, thisArg))(source)\n        ];\n    };\n}\n//# sourceMappingURL=partition.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/partition.js\n// module id = ../../../../rxjs/_esm5/operators/partition.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START ._map PURE_IMPORTS_END */\nimport { map } from './map';\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i - 0] = arguments[_i];\n    }\n    var length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return function (source) { return map(plucker(properties, length))(source); };\n}\nfunction plucker(props, length) {\n    var mapper = function (x) {\n        var currentProp = x;\n        for (var i = 0; i < length; i++) {\n            var p = currentProp[props[i]];\n            if (typeof p !== 'undefined') {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n//# sourceMappingURL=pluck.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/pluck.js\n// module id = ../../../../rxjs/_esm5/operators/pluck.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subject,._multicast PURE_IMPORTS_END */\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nexport function publish(selector) {\n    return selector ?\n        multicast(function () { return new Subject(); }, selector) :\n        multicast(new Subject());\n}\n//# sourceMappingURL=publish.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/publish.js\n// module id = ../../../../rxjs/_esm5/operators/publish.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._BehaviorSubject,._multicast PURE_IMPORTS_END */\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior(value) {\n    return function (source) { return multicast(new BehaviorSubject(value))(source); };\n}\n//# sourceMappingURL=publishBehavior.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/publishBehavior.js\n// module id = ../../../../rxjs/_esm5/operators/publishBehavior.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._AsyncSubject,._multicast PURE_IMPORTS_END */\nimport { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nexport function publishLast() {\n    return function (source) { return multicast(new AsyncSubject())(source); };\n}\n//# sourceMappingURL=publishLast.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/publishLast.js\n// module id = ../../../../rxjs/_esm5/operators/publishLast.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._ReplaySubject,._multicast PURE_IMPORTS_END */\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\n/* tslint:enable:max-line-length */\nexport function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n        scheduler = selectorOrScheduler;\n    }\n    var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n    var subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n    return function (source) { return multicast(function () { return subject; }, selector)(source); };\n}\n//# sourceMappingURL=publishReplay.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/publishReplay.js\n// module id = ../../../../rxjs/_esm5/operators/publishReplay.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._util_isArray,.._observable_race PURE_IMPORTS_END */\nimport { isArray } from '../util/isArray';\nimport { race as raceStatic } from '../observable/race';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nexport function race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function raceOperatorFunction(source) {\n        // if the only argument is an array, it was most likely called with\n        // `pair([obs1, obs2, ...])`\n        if (observables.length === 1 && isArray(observables[0])) {\n            observables = observables[0];\n        }\n        return source.lift.call(raceStatic.apply(void 0, [source].concat(observables)));\n    };\n}\n//# sourceMappingURL=race.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/race.js\n// module id = ../../../../rxjs/_esm5/operators/race.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber,.._observable_EmptyObservable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { EmptyObservable } from '../observable/EmptyObservable';\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat(count) {\n    if (count === void 0) {\n        count = -1;\n    }\n    return function (source) {\n        if (count === 0) {\n            return new EmptyObservable();\n        }\n        else if (count < 0) {\n            return source.lift(new RepeatOperator(-1, source));\n        }\n        else {\n            return source.lift(new RepeatOperator(count - 1, source));\n        }\n    };\n}\nvar RepeatOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function RepeatOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RepeatOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    };\n    return RepeatOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(RepeatSubscriber, _super);\n    function RepeatSubscriber(destination, count, source) {\n        _super.call(this, destination);\n        this.count = count;\n        this.source = source;\n    }\n    RepeatSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.complete.call(this);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RepeatSubscriber;\n}(Subscriber));\n//# sourceMappingURL=repeat.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/repeat.js\n// module id = ../../../../rxjs/_esm5/operators/repeat.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subject,.._util_tryCatch,.._util_errorObject,.._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subject } from '../Subject';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen(notifier) {\n    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };\n}\nvar RepeatWhenOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function RepeatWhenOperator(notifier) {\n        this.notifier = notifier;\n    }\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    };\n    return RepeatWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatWhenSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(RepeatWhenSubscriber, _super);\n    function RepeatWhenSubscriber(destination, notifier, source) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.source = source;\n        this.sourceIsBeingSubscribedTo = true;\n    }\n    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    };\n    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return _super.prototype.complete.call(this);\n        }\n    };\n    RepeatWhenSubscriber.prototype.complete = function () {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            else if (this.retriesSubscription.closed) {\n                return _super.prototype.complete.call(this);\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next();\n        }\n    };\n    RepeatWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, notifications = _a.notifications, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.notifications = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        _super.prototype._unsubscribeAndRecycle.call(this);\n        this.notifications = notifications;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        return this;\n    };\n    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n        this.notifications = new Subject();\n        var retries = tryCatch(this.notifier)(this.notifications);\n        if (retries === errorObject) {\n            return _super.prototype.complete.call(this);\n        }\n        this.retries = retries;\n        this.retriesSubscription = subscribeToResult(this, retries);\n    };\n    return RepeatWhenSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=repeatWhen.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/repeatWhen.js\n// module id = ../../../../rxjs/_esm5/operators/repeatWhen.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry(count) {\n    if (count === void 0) {\n        count = -1;\n    }\n    return function (source) { return source.lift(new RetryOperator(count, source)); };\n}\nvar RetryOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function RetryOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RetryOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    };\n    return RetryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetrySubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(RetrySubscriber, _super);\n    function RetrySubscriber(destination, count, source) {\n        _super.call(this, destination);\n        this.count = count;\n        this.source = source;\n    }\n    RetrySubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.error.call(this, err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RetrySubscriber;\n}(Subscriber));\n//# sourceMappingURL=retry.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/retry.js\n// module id = ../../../../rxjs/_esm5/operators/retry.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subject,.._util_tryCatch,.._util_errorObject,.._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subject } from '../Subject';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen(notifier) {\n    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };\n}\nvar RetryWhenOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function RetryWhenOperator(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    };\n    return RetryWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetryWhenSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(RetryWhenSubscriber, _super);\n    function RetryWhenSubscriber(destination, notifier, source) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var errors = this.errors;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject();\n                retries = tryCatch(this.notifier)(errors);\n                if (retries === errorObject) {\n                    return _super.prototype.error.call(this, errorObject.e);\n                }\n                retriesSubscription = subscribeToResult(this, retries);\n            }\n            else {\n                this.errors = null;\n                this.retriesSubscription = null;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    };\n    RetryWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, errors = _a.errors, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.errors = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        this._unsubscribeAndRecycle();\n        this.errors = errors;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        this.source.subscribe(this);\n    };\n    return RetryWhenSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=retryWhen.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/retryWhen.js\n// module id = ../../../../rxjs/_esm5/operators/retryWhen.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample(notifier) {\n    return function (source) { return source.lift(new SampleOperator(notifier)); };\n}\nvar SampleOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SampleOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SampleOperator.prototype.call = function (subscriber, source) {\n        var sampleSubscriber = new SampleSubscriber(subscriber);\n        var subscription = source.subscribe(sampleSubscriber);\n        subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n        return subscription;\n    };\n    return SampleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SampleSubscriber, _super);\n    function SampleSubscriber() {\n        _super.apply(this, arguments);\n        this.hasValue = false;\n    }\n    SampleSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n    };\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    };\n    return SampleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=sample.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/sample.js\n// module id = ../../../../rxjs/_esm5/operators/sample.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber,.._scheduler_async PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime(period, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };\n}\nvar SampleTimeOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SampleTimeOperator(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    SampleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    };\n    return SampleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleTimeSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SampleTimeSubscriber, _super);\n    function SampleTimeSubscriber(destination, period, scheduler) {\n        _super.call(this, destination);\n        this.period = period;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period: period }));\n    }\n    SampleTimeSubscriber.prototype._next = function (value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    };\n    SampleTimeSubscriber.prototype.notifyNext = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    };\n    return SampleTimeSubscriber;\n}(Subscriber));\nfunction dispatchNotification(state) {\n    var subscriber = state.subscriber, period = state.period;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n//# sourceMappingURL=sampleTime.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/sampleTime.js\n// module id = ../../../../rxjs/_esm5/operators/sampleTime.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber,.._util_tryCatch,.._util_errorObject PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual(compareTo, comparor) {\n    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparor)); };\n}\nexport var SequenceEqualOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SequenceEqualOperator(compareTo, comparor) {\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n    }\n    SequenceEqualOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n    };\n    return SequenceEqualOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var SequenceEqualSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SequenceEqualSubscriber, _super);\n    function SequenceEqualSubscriber(destination, compareTo, comparor) {\n        _super.call(this, destination);\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n        this._a = [];\n        this._b = [];\n        this._oneComplete = false;\n        this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n    }\n    SequenceEqualSubscriber.prototype._next = function (value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype._complete = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    };\n    SequenceEqualSubscriber.prototype.checkValues = function () {\n        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;\n        while (_a.length > 0 && _b.length > 0) {\n            var a = _a.shift();\n            var b = _b.shift();\n            var areEqual = false;\n            if (comparor) {\n                areEqual = tryCatch(comparor)(a, b);\n                if (areEqual === errorObject) {\n                    this.destination.error(errorObject.e);\n                }\n            }\n            else {\n                areEqual = a === b;\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    };\n    SequenceEqualSubscriber.prototype.emit = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    };\n    return SequenceEqualSubscriber;\n}(Subscriber));\nvar SequenceEqualCompareToSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SequenceEqualCompareToSubscriber, _super);\n    function SequenceEqualCompareToSubscriber(destination, parent) {\n        _super.call(this, destination);\n        this.parent = parent;\n    }\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n        this.parent.nextB(value);\n    };\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n        this.parent.error(err);\n    };\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\n        this.parent._complete();\n    };\n    return SequenceEqualCompareToSubscriber;\n}(Subscriber));\n//# sourceMappingURL=sequenceEqual.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/sequenceEqual.js\n// module id = ../../../../rxjs/_esm5/operators/sequenceEqual.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._ReplaySubject PURE_IMPORTS_END */\nimport { ReplaySubject } from '../ReplaySubject';\n/**\n * @method shareReplay\n * @owner Observable\n */\nexport function shareReplay(bufferSize, windowTime, scheduler) {\n    return function (source) { return source.lift(shareReplayOperator(bufferSize, windowTime, scheduler)); };\n}\nfunction shareReplayOperator(bufferSize, windowTime, scheduler) {\n    var subject;\n    var refCount = 0;\n    var subscription;\n    var hasError = false;\n    var isComplete = false;\n    return function shareReplayOperation(source) {\n        refCount++;\n        if (!subject || hasError) {\n            hasError = false;\n            subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n            subscription = source.subscribe({\n                next: function (value) { subject.next(value); },\n                error: function (err) {\n                    hasError = true;\n                    subject.error(err);\n                },\n                complete: function () {\n                    isComplete = true;\n                    subject.complete();\n                },\n            });\n        }\n        var innerSub = subject.subscribe(this);\n        return function () {\n            refCount--;\n            innerSub.unsubscribe();\n            if (subscription && refCount === 0 && isComplete) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n}\n;\n//# sourceMappingURL=shareReplay.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/shareReplay.js\n// module id = ../../../../rxjs/_esm5/operators/shareReplay.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber,.._util_EmptyError PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nexport function single(predicate) {\n    return function (source) { return source.lift(new SingleOperator(predicate, source)); };\n}\nvar SingleOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SingleOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    SingleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    };\n    return SingleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SingleSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SingleSubscriber, _super);\n    function SingleSubscriber(destination, predicate, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.seenValue = false;\n        this.index = 0;\n    }\n    SingleSubscriber.prototype.applySingleValue = function (value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    };\n    SingleSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    };\n    SingleSubscriber.prototype.tryNext = function (value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    SingleSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError);\n        }\n    };\n    return SingleSubscriber;\n}(Subscriber));\n//# sourceMappingURL=single.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/single.js\n// module id = ../../../../rxjs/_esm5/operators/single.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip(count) {\n    return function (source) { return source.lift(new SkipOperator(count)); };\n}\nvar SkipOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SkipOperator(total) {\n        this.total = total;\n    }\n    SkipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    };\n    return SkipOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SkipSubscriber, _super);\n    function SkipSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    SkipSubscriber.prototype._next = function (x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    };\n    return SkipSubscriber;\n}(Subscriber));\n//# sourceMappingURL=skip.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/skip.js\n// module id = ../../../../rxjs/_esm5/operators/skip.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber,.._util_ArgumentOutOfRangeError PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast(count) {\n    return function (source) { return source.lift(new SkipLastOperator(count)); };\n}\nvar SkipLastOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SkipLastOperator(_skipCount) {\n        this._skipCount = _skipCount;\n        if (this._skipCount < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    SkipLastOperator.prototype.call = function (subscriber, source) {\n        if (this._skipCount === 0) {\n            // If we don't want to skip any values then just subscribe\n            // to Subscriber without any further logic.\n            return source.subscribe(new Subscriber(subscriber));\n        }\n        else {\n            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n        }\n    };\n    return SkipLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipLastSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SkipLastSubscriber, _super);\n    function SkipLastSubscriber(destination, _skipCount) {\n        _super.call(this, destination);\n        this._skipCount = _skipCount;\n        this._count = 0;\n        this._ring = new Array(_skipCount);\n    }\n    SkipLastSubscriber.prototype._next = function (value) {\n        var skipCount = this._skipCount;\n        var count = this._count++;\n        if (count < skipCount) {\n            this._ring[count] = value;\n        }\n        else {\n            var currentIndex = count % skipCount;\n            var ring = this._ring;\n            var oldValue = ring[currentIndex];\n            ring[currentIndex] = value;\n            this.destination.next(oldValue);\n        }\n    };\n    return SkipLastSubscriber;\n}(Subscriber));\n//# sourceMappingURL=skipLast.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/skipLast.js\n// module id = ../../../../rxjs/_esm5/operators/skipLast.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil(notifier) {\n    return function (source) { return source.lift(new SkipUntilOperator(notifier)); };\n}\nvar SkipUntilOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SkipUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SkipUntilOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n    };\n    return SkipUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipUntilSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SkipUntilSubscriber, _super);\n    function SkipUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.hasValue = false;\n        this.isInnerStopped = false;\n        this.add(subscribeToResult(this, notifier));\n    }\n    SkipUntilSubscriber.prototype._next = function (value) {\n        if (this.hasValue) {\n            _super.prototype._next.call(this, value);\n        }\n    };\n    SkipUntilSubscriber.prototype._complete = function () {\n        if (this.isInnerStopped) {\n            _super.prototype._complete.call(this);\n        }\n        else {\n            this.unsubscribe();\n        }\n    };\n    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.hasValue = true;\n    };\n    SkipUntilSubscriber.prototype.notifyComplete = function () {\n        this.isInnerStopped = true;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    return SkipUntilSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=skipUntil.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/skipUntil.js\n// module id = ../../../../rxjs/_esm5/operators/skipUntil.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile(predicate) {\n    return function (source) { return source.lift(new SkipWhileOperator(predicate)); };\n}\nvar SkipWhileOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SkipWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    SkipWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    };\n    return SkipWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipWhileSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SkipWhileSubscriber, _super);\n    function SkipWhileSubscriber(destination, predicate) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.skipping = true;\n        this.index = 0;\n    }\n    SkipWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    };\n    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\n        try {\n            var result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    return SkipWhileSubscriber;\n}(Subscriber));\n//# sourceMappingURL=skipWhile.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/skipWhile.js\n// module id = ../../../../rxjs/_esm5/operators/skipWhile.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START ._switchMap,.._util_identity PURE_IMPORTS_END */\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\nexport function switchAll() {\n    return switchMap(identity);\n}\n//# sourceMappingURL=switchAll.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/switchAll.js\n// module id = ../../../../rxjs/_esm5/operators/switchAll.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo(innerObservable, resultSelector) {\n    return function (source) { return source.lift(new SwitchMapToOperator(innerObservable, resultSelector)); };\n}\nvar SwitchMapToOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SwitchMapToOperator(observable, resultSelector) {\n        this.observable = observable;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n    };\n    return SwitchMapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapToSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SwitchMapToSubscriber, _super);\n    function SwitchMapToSubscriber(destination, inner, resultSelector) {\n        _super.call(this, destination);\n        this.inner = inner;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapToSubscriber.prototype._next = function (value) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult(this, this.inner, value, this.index++));\n    };\n    SwitchMapToSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapToSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchMapToSubscriber.prototype.tryResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    return SwitchMapToSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=switchMapTo.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/switchMapTo.js\n// module id = ../../../../rxjs/_esm5/operators/switchMapTo.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile(predicate) {\n    return function (source) { return source.lift(new TakeWhileOperator(predicate)); };\n}\nvar TakeWhileOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function TakeWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    };\n    return TakeWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeWhileSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(TakeWhileSubscriber, _super);\n    function TakeWhileSubscriber(destination, predicate) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.index = 0;\n    }\n    TakeWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        var result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    };\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n        var destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n        }\n    };\n    return TakeWhileSubscriber;\n}(Subscriber));\n//# sourceMappingURL=takeWhile.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/takeWhile.js\n// module id = ../../../../rxjs/_esm5/operators/takeWhile.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport var defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle(durationSelector, config) {\n    if (config === void 0) {\n        config = defaultThrottleConfig;\n    }\n    return function (source) { return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing)); };\n}\nvar ThrottleOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ThrottleOperator(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    };\n    return ThrottleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ThrottleSubscriber, _super);\n    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasTrailingValue = false;\n    }\n    ThrottleSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this._trailing) {\n                this._hasTrailingValue = true;\n                this._trailingValue = value;\n            }\n        }\n        else {\n            var duration = this.tryDurationSelector(value);\n            if (duration) {\n                this.add(this.throttled = subscribeToResult(this, duration));\n            }\n            if (this._leading) {\n                this.destination.next(value);\n                if (this._trailing) {\n                    this._hasTrailingValue = true;\n                    this._trailingValue = value;\n                }\n            }\n        }\n    };\n    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    };\n    ThrottleSubscriber.prototype._unsubscribe = function () {\n        var _a = this, throttled = _a.throttled, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue, _trailing = _a._trailing;\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n    };\n    ThrottleSubscriber.prototype._sendTrailing = function () {\n        var _a = this, destination = _a.destination, throttled = _a.throttled, _trailing = _a._trailing, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue;\n        if (throttled && _trailing && _hasTrailingValue) {\n            destination.next(_trailingValue);\n            this._trailingValue = null;\n            this._hasTrailingValue = false;\n        }\n    };\n    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._sendTrailing();\n        this._unsubscribe();\n    };\n    ThrottleSubscriber.prototype.notifyComplete = function () {\n        this._sendTrailing();\n        this._unsubscribe();\n    };\n    return ThrottleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=throttle.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/throttle.js\n// module id = ../../../../rxjs/_esm5/operators/throttle.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber,.._scheduler_async,._throttle PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime(duration, scheduler, config) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    if (config === void 0) {\n        config = defaultThrottleConfig;\n    }\n    return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };\n}\nvar ThrottleTimeOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    };\n    return ThrottleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleTimeSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ThrottleTimeSubscriber, _super);\n    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\n        _super.call(this, destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    ThrottleTimeSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n        }\n    };\n    ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    };\n    return ThrottleTimeSubscriber;\n}(Subscriber));\nfunction dispatchNext(arg) {\n    var subscriber = arg.subscriber;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/throttleTime.js\n// module id = ../../../../rxjs/_esm5/operators/throttleTime.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber,.._scheduler_async PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function timeInterval(scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) { return source.lift(new TimeIntervalOperator(scheduler)); };\n}\nexport var TimeInterval = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function TimeInterval(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n    return TimeInterval;\n}());\n;\nvar TimeIntervalOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function TimeIntervalOperator(scheduler) {\n        this.scheduler = scheduler;\n    }\n    TimeIntervalOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n    };\n    return TimeIntervalOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeIntervalSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(TimeIntervalSubscriber, _super);\n    function TimeIntervalSubscriber(destination, scheduler) {\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.lastTime = 0;\n        this.lastTime = scheduler.now();\n    }\n    TimeIntervalSubscriber.prototype._next = function (value) {\n        var now = this.scheduler.now();\n        var span = now - this.lastTime;\n        this.lastTime = now;\n        this.destination.next(new TimeInterval(value, span));\n    };\n    return TimeIntervalSubscriber;\n}(Subscriber));\n//# sourceMappingURL=timeInterval.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/timeInterval.js\n// module id = ../../../../rxjs/_esm5/operators/timeInterval.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._scheduler_async,.._util_isDate,.._Subscriber,.._util_TimeoutError PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { TimeoutError } from '../util/TimeoutError';\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout(due, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    var absoluteTimeout = isDate(due);\n    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n    return function (source) { return source.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError())); };\n}\nvar TimeoutOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function TimeoutOperator(waitFor, absoluteTimeout, scheduler, errorInstance) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.scheduler = scheduler;\n        this.errorInstance = errorInstance;\n    }\n    TimeoutOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TimeoutSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance));\n    };\n    return TimeoutOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(TimeoutSubscriber, _super);\n    function TimeoutSubscriber(destination, absoluteTimeout, waitFor, scheduler, errorInstance) {\n        _super.call(this, destination);\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.scheduler = scheduler;\n        this.errorInstance = errorInstance;\n        this.action = null;\n        this.scheduleTimeout();\n    }\n    TimeoutSubscriber.dispatchTimeout = function (subscriber) {\n        subscriber.error(subscriber.errorInstance);\n    };\n    TimeoutSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            // Recycle the action if we've already scheduled one. All the production\n            // Scheduler Actions mutate their state/delay time and return themeselves.\n            // VirtualActions are immutable, so they create and return a clone. In this\n            // case, we need to set the action reference to the most recent VirtualAction,\n            // to ensure that's the one we clone from next time.\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    TimeoutSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.errorInstance = null;\n    };\n    return TimeoutSubscriber;\n}(Subscriber));\n//# sourceMappingURL=timeout.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/timeout.js\n// module id = ../../../../rxjs/_esm5/operators/timeout.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._scheduler_async,.._util_isDate,.._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith(due, withObservable, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) {\n        var absoluteTimeout = isDate(due);\n        var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n    };\n}\nvar TimeoutWithOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    TimeoutWithOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    };\n    return TimeoutWithOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutWithSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(TimeoutWithSubscriber, _super);\n    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        _super.call(this, destination);\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n        this.action = null;\n        this.scheduleTimeout();\n    }\n    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {\n        var withObservable = subscriber.withObservable;\n        subscriber._unsubscribeAndRecycle();\n        subscriber.add(subscribeToResult(subscriber, withObservable));\n    };\n    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            // Recycle the action if we've already scheduled one. All the production\n            // Scheduler Actions mutate their state/delay time and return themeselves.\n            // VirtualActions are immutable, so they create and return a clone. In this\n            // case, we need to set the action reference to the most recent VirtualAction,\n            // to ensure that's the one we clone from next time.\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutWithSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    TimeoutWithSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.withObservable = null;\n    };\n    return TimeoutWithSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=timeoutWith.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/timeoutWith.js\n// module id = ../../../../rxjs/_esm5/operators/timeoutWith.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._scheduler_async,._map PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { map } from './map';\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp(scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return map(function (value) { return new Timestamp(value, scheduler.now()); });\n    // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\n}\nexport var Timestamp = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function Timestamp(value, timestamp) {\n        this.value = value;\n        this.timestamp = timestamp;\n    }\n    return Timestamp;\n}());\n;\n//# sourceMappingURL=timestamp.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/timestamp.js\n// module id = ../../../../rxjs/_esm5/operators/timestamp.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START ._reduce PURE_IMPORTS_END */\nimport { reduce } from './reduce';\nfunction toArrayReducer(arr, item, index) {\n    arr.push(item);\n    return arr;\n}\nexport function toArray() {\n    return reduce(toArrayReducer, []);\n}\n//# sourceMappingURL=toArray.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/toArray.js\n// module id = ../../../../rxjs/_esm5/operators/toArray.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subject,.._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window(windowBoundaries) {\n    return function windowOperatorFunction(source) {\n        return source.lift(new WindowOperator(windowBoundaries));\n    };\n}\nvar WindowOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function WindowOperator(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        var windowSubscriber = new WindowSubscriber(subscriber);\n        var sourceSubscription = source.subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n        }\n        return sourceSubscription;\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination) {\n        _super.call(this, destination);\n        this.window = new Subject();\n        destination.next(this.window);\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow();\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this._complete();\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n    };\n    WindowSubscriber.prototype._unsubscribe = function () {\n        this.window = null;\n    };\n    WindowSubscriber.prototype.openWindow = function () {\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var destination = this.destination;\n        var newWindow = this.window = new Subject();\n        destination.next(newWindow);\n    };\n    return WindowSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=window.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/window.js\n// module id = ../../../../rxjs/_esm5/operators/window.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subscriber,.._Subject PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) {\n        startWindowEvery = 0;\n    }\n    return function windowCountOperatorFunction(source) {\n        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n    };\n}\nvar WindowCountOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function WindowCountOperator(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    WindowCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    };\n    return WindowCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowCountSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(WindowCountSubscriber, _super);\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n        this.windows = [new Subject()];\n        this.count = 0;\n        destination.next(this.windows[0]);\n    }\n    WindowCountSubscriber.prototype._next = function (value) {\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        var destination = this.destination;\n        var windowSize = this.windowSize;\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        var c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            var window_1 = new Subject();\n            windows.push(window_1);\n            destination.next(window_1);\n        }\n    };\n    WindowCountSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    };\n    WindowCountSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowCountSubscriber.prototype._unsubscribe = function () {\n        this.count = 0;\n        this.windows = null;\n    };\n    return WindowCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=windowCount.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/windowCount.js\n// module id = ../../../../rxjs/_esm5/operators/windowCount.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subject,.._scheduler_async,.._Subscriber,.._util_isNumeric,.._util_isScheduler PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subject } from '../Subject';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function windowTime(windowTimeSpan) {\n    var scheduler = async;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric(arguments[2])) {\n        maxWindowSize = arguments[2];\n    }\n    if (isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric(arguments[1])) {\n        windowCreationInterval = arguments[1];\n    }\n    return function windowTimeOperatorFunction(source) {\n        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n    };\n}\nvar WindowTimeOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    WindowTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    };\n    return WindowTimeOperator;\n}());\nvar CountedSubject = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(CountedSubject, _super);\n    function CountedSubject() {\n        _super.apply(this, arguments);\n        this._numberOfNextedValues = 0;\n    }\n    CountedSubject.prototype.next = function (value) {\n        this._numberOfNextedValues++;\n        _super.prototype.next.call(this, value);\n    };\n    Object.defineProperty(CountedSubject.prototype, \"numberOfNextedValues\", {\n        get: function () {\n            return this._numberOfNextedValues;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CountedSubject;\n}(Subject));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowTimeSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(WindowTimeSubscriber, _super);\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n        this.windows = [];\n        var window = this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            var closeState = { subscriber: this, window: window, context: null };\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: this, scheduler: scheduler };\n            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            var timeSpanOnlyState = { subscriber: this, window: window, windowTimeSpan: windowTimeSpan };\n            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n    }\n    WindowTimeSubscriber.prototype._next = function (value) {\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len; i++) {\n            var window_1 = windows[i];\n            if (!window_1.closed) {\n                window_1.next(value);\n                if (window_1.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window_1);\n                }\n            }\n        }\n    };\n    WindowTimeSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    };\n    WindowTimeSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            var window_2 = windows.shift();\n            if (!window_2.closed) {\n                window_2.complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowTimeSubscriber.prototype.openWindow = function () {\n        var window = new CountedSubject();\n        this.windows.push(window);\n        var destination = this.destination;\n        destination.next(window);\n        return window;\n    };\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\n        window.complete();\n        var windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    };\n    return WindowTimeSubscriber;\n}(Subscriber));\nfunction dispatchWindowTimeSpanOnly(state) {\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\n    var window = subscriber.openWindow();\n    var action = this;\n    var context = { action: action, subscription: null };\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    var subscriber = state.subscriber, window = state.window, context = state.context;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n//# sourceMappingURL=windowTime.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/windowTime.js\n// module id = ../../../../rxjs/_esm5/operators/windowTime.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subject,.._Subscription,.._util_tryCatch,.._util_errorObject,.._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle(openings, closingSelector) {\n    return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };\n}\nvar WindowToggleOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function WindowToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    WindowToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return WindowToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowToggleSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(WindowToggleSubscriber, _super);\n    function WindowToggleSubscriber(destination, openings, closingSelector) {\n        _super.call(this, destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(this.openSubscription = subscribeToResult(this, openings, openings));\n    }\n    WindowToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        if (contexts) {\n            var len = contexts.length;\n            for (var i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.error(err);\n                context.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._error.call(this, err);\n    };\n    WindowToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.complete();\n                context.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    WindowToggleSubscriber.prototype._unsubscribe = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.unsubscribe();\n                context.subscription.unsubscribe();\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = tryCatch(closingSelector)(innerValue);\n            if (closingNotifier === errorObject) {\n                return this.error(errorObject.e);\n            }\n            else {\n                var window_1 = new Subject();\n                var subscription = new Subscription();\n                var context = { window: window_1, subscription: subscription };\n                this.contexts.push(context);\n                var innerSubscription = subscribeToResult(this, closingNotifier, context);\n                if (innerSubscription.closed) {\n                    this.closeWindow(this.contexts.length - 1);\n                }\n                else {\n                    innerSubscription.context = context;\n                    subscription.add(innerSubscription);\n                }\n                this.destination.next(window_1);\n            }\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyError = function (err) {\n        this.error(err);\n    };\n    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    };\n    WindowToggleSubscriber.prototype.closeWindow = function (index) {\n        if (index === -1) {\n            return;\n        }\n        var contexts = this.contexts;\n        var context = contexts[index];\n        var window = context.window, subscription = context.subscription;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    };\n    return WindowToggleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=windowToggle.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/windowToggle.js\n// module id = ../../../../rxjs/_esm5/operators/windowToggle.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._Subject,.._util_tryCatch,.._util_errorObject,.._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subject } from '../Subject';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen(closingSelector) {\n    return function windowWhenOperatorFunction(source) {\n        return source.lift(new WindowOperator(closingSelector));\n    };\n}\nvar WindowOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function WindowOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination, closingSelector) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.closingSelector = closingSelector;\n        this.openWindow();\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    };\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\n        if (innerSub === void 0) {\n            innerSub = null;\n        }\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var window = this.window = new Subject();\n        this.destination.next(window);\n        var closingNotifier = tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject) {\n            var err = errorObject.e;\n            this.destination.error(err);\n            this.window.error(err);\n        }\n        else {\n            this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n        }\n    };\n    return WindowSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=windowWhen.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/windowWhen.js\n// module id = ../../../../rxjs/_esm5/operators/windowWhen.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    return function (source) {\n        var project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        var observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nvar WithLatestFromOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WithLatestFromSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        _super.call(this, destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        var len = observables.length;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            this.add(subscribeToResult(this, observable, observable, i));\n        }\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=withLatestFrom.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/withLatestFrom.js\n// module id = ../../../../rxjs/_esm5/operators/withLatestFrom.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START .._observable_ArrayObservable,.._util_isArray,.._Subscriber,.._OuterSubscriber,.._util_subscribeToResult,.._symbol_iterator PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nexport function zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));\n    };\n}\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zipStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = observables[observables.length - 1];\n    if (typeof project === 'function') {\n        observables.pop();\n    }\n    return new ArrayObservable(observables).lift(new ZipOperator(project));\n}\nexport var ZipOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ZipOperator(project) {\n        this.project = project;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.project));\n    };\n    return ZipOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var ZipSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, project, values) {\n        if (values === void 0) {\n            values = Object.create(null);\n        }\n        _super.call(this, destination);\n        this.iterators = [];\n        this.active = 0;\n        this.project = (typeof project === 'function') ? project : null;\n        this.values = values;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.project) {\n            this._tryProject(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber));\nvar StaticIterator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipBufferIterator = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        _super.call(this, destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    ZipBufferIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber));\n//# sourceMappingURL=zip.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/zip.js\n// module id = ../../../../rxjs/_esm5/operators/zip.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START ._zip PURE_IMPORTS_END */\nimport { ZipOperator } from './zip';\nexport function zipAll(project) {\n    return function (source) { return source.lift(new ZipOperator(project)); };\n}\n//# sourceMappingURL=zipAll.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/operators/zipAll.js\n// module id = ../../../../rxjs/_esm5/operators/zipAll.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START ._AsyncAction PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { AsyncAction } from './AsyncAction';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var QueueAction = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction));\n//# sourceMappingURL=QueueAction.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/scheduler/QueueAction.js\n// module id = ../../../../rxjs/_esm5/scheduler/QueueAction.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START ._AsyncScheduler PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var QueueScheduler = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        _super.apply(this, arguments);\n    }\n    return QueueScheduler;\n}(AsyncScheduler));\n//# sourceMappingURL=QueueScheduler.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/scheduler/QueueScheduler.js\n// module id = ../../../../rxjs/_esm5/scheduler/QueueScheduler.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START ._QueueAction,._QueueScheduler PURE_IMPORTS_END */\nimport { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\nexport var queue = /*@__PURE__*/ new QueueScheduler(QueueAction);\n//# sourceMappingURL=queue.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/scheduler/queue.js\n// module id = ../../../../rxjs/_esm5/scheduler/queue.js\n// module chunks = contracts.module","export var FastMap = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function FastMap() {\n        this.values = {};\n    }\n    FastMap.prototype.delete = function (key) {\n        this.values[key] = null;\n        return true;\n    };\n    FastMap.prototype.set = function (key, value) {\n        this.values[key] = value;\n        return this;\n    };\n    FastMap.prototype.get = function (key) {\n        return this.values[key];\n    };\n    FastMap.prototype.forEach = function (cb, thisArg) {\n        var values = this.values;\n        for (var key in values) {\n            if (values.hasOwnProperty(key) && values[key] !== null) {\n                cb.call(thisArg, values[key], key);\n            }\n        }\n    };\n    FastMap.prototype.clear = function () {\n        this.values = {};\n    };\n    return FastMap;\n}());\n//# sourceMappingURL=FastMap.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/util/FastMap.js\n// module id = ../../../../rxjs/_esm5/util/FastMap.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START ._root,._MapPolyfill PURE_IMPORTS_END */\nimport { root } from './root';\nimport { MapPolyfill } from './MapPolyfill';\nexport var Map = root.Map || /*@__PURE__*/ (function () { return MapPolyfill; })();\n//# sourceMappingURL=Map.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/util/Map.js\n// module id = ../../../../rxjs/_esm5/util/Map.js\n// module chunks = contracts.module","export var MapPolyfill = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MapPolyfill() {\n        this.size = 0;\n        this._values = [];\n        this._keys = [];\n    }\n    MapPolyfill.prototype.get = function (key) {\n        var i = this._keys.indexOf(key);\n        return i === -1 ? undefined : this._values[i];\n    };\n    MapPolyfill.prototype.set = function (key, value) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            this._keys.push(key);\n            this._values.push(value);\n            this.size++;\n        }\n        else {\n            this._values[i] = value;\n        }\n        return this;\n    };\n    MapPolyfill.prototype.delete = function (key) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            return false;\n        }\n        this._values.splice(i, 1);\n        this._keys.splice(i, 1);\n        this.size--;\n        return true;\n    };\n    MapPolyfill.prototype.clear = function () {\n        this._keys.length = 0;\n        this._values.length = 0;\n        this.size = 0;\n    };\n    MapPolyfill.prototype.forEach = function (cb, thisArg) {\n        for (var i = 0; i < this.size; i++) {\n            cb.call(thisArg, this._values[i], this._keys[i]);\n        }\n    };\n    return MapPolyfill;\n}());\n//# sourceMappingURL=MapPolyfill.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/util/MapPolyfill.js\n// module id = ../../../../rxjs/_esm5/util/MapPolyfill.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START ._root PURE_IMPORTS_END */\nimport { root } from './root';\nexport function minimalSetImpl() {\n    // THIS IS NOT a full impl of Set, this is just the minimum\n    // bits of functionality we need for this library.\n    return (function () {\n        function MinimalSet() {\n            this._values = [];\n        }\n        MinimalSet.prototype.add = function (value) {\n            if (!this.has(value)) {\n                this._values.push(value);\n            }\n        };\n        MinimalSet.prototype.has = function (value) {\n            return this._values.indexOf(value) !== -1;\n        };\n        Object.defineProperty(MinimalSet.prototype, \"size\", {\n            get: function () {\n                return this._values.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MinimalSet.prototype.clear = function () {\n            this._values.length = 0;\n        };\n        return MinimalSet;\n    }());\n}\nexport var Set = root.Set || /*@__PURE__*/ minimalSetImpl();\n//# sourceMappingURL=Set.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/util/Set.js\n// module id = ../../../../rxjs/_esm5/util/Set.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nexport var TimeoutError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(TimeoutError, _super);\n    function TimeoutError() {\n        var err = _super.call(this, 'Timeout has occurred');\n        this.name = err.name = 'TimeoutError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return TimeoutError;\n}(Error));\n//# sourceMappingURL=TimeoutError.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/util/TimeoutError.js\n// module id = ../../../../rxjs/_esm5/util/TimeoutError.js\n// module chunks = contracts.module","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\n//# sourceMappingURL=not.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/node_modules/rxjs/_esm5/util/not.js\n// module id = ../../../../rxjs/_esm5/util/not.js\n// module chunks = contracts.module"],"sourceRoot":"webpack:///"}